<template>
    <diV class="group-box">
        <Row class="group-header">
            <Cell span="3" class="header-item">
                    <Wb-button type="primary" @click="deleteGroupList">
                        {{ $t('group.SCYXX') }}
                    </Wb-button>
            </Cell>
            <Cell span="6">
                <Row>
                    <Cell span="5">
                        {{ $t('group.FZBH') }}
                    </Cell>
                    <Cell span="15">
                        <Wb-input v-model="groupNum" :placeholder="$t('group.SRDZGSS')" @on-enter="search()" />
                    </Cell>
                </Row>
            </Cell>
            <Cell span="6">
                <Row>
                    <Cell span="5">
                        {{ $t('group.FZM') }}
                    </Cell>
                    <Cell span="15">
                        <Wb-input v-model="groupName" :placeholder="$t('group.SRFZMSS')" @on-enter="search()" />
                    </Cell>
                    <Cell span="1" offset="1">
                        <Wb-button type="primary" @click="search()">
                       {{ $t('group.CX') }}
                        </Wb-button>
                    </Cell>
                </Row>
            </Cell>
            <Cell span="3" offset="6" class="header-item">
                <Wb-button type="primary" @click="addGroup">
                        {{ $t('group.TJFZ') }}
                </Wb-button>
            </Cell>
        </Row>
        <Row class="group-content">
            <Wb-table ref="groupTable" :data="dataList" :no-data-text="$t('group.ZWSJ')">
                <Column type="selection" />
                <Column prop="id" :name="$t('group.FZBH')" />
                <Column prop="groupName" :name="$t('group.FZM')" />
                <Column prop="groupDesc" :name="$t('group.MS')" />
                <Column prop="createUser" :name="$t('group.CJR')" />
                <Column :component="bindProjectComponent" :name="$t('group.BDXM')" />
                <Column prop="createTime" :name="$t('group.CJSJ')" />
                <Column prop="modifyTime" :name="$t('group.GXSJ')" />
                <Column :name="$t('group.XQ')" :action="groupDetail" />
            </Wb-table>
            <Pagination class="groupPagination page-loc" :loking="pagination.locking" :current="pagination.current" :size="pagination.size" :total="pagination.total" @on-change="changePage" />
        </Row>
        <weLoading v-show="FesFesx.isLoading" />
    </diV>
</template>
<script>
import weLoading from '../../components/uiTemplate/weLoading.fes';
import weModal from '../../components/uiTemplate/weModal.fes';
export default {
    data() {
        return {
            groupNum: '',
            groupName: '',
            dataList: [],
            deleteList: [],
            pagination: {
                size: 10,
                current: 1,
                total: 10,
                locking: false
            },
            groupDetail: [
                {
                    text: this.$t('group.CKXQ'),
                    func: this.groupDetailAction
                }
            ],
            bindProjectComponent: this.bindProject
        }
    },
    components: {
        weLoading,
        weModal
    },
    created() {
        this.search(1, 10)
    },
    methods: {
        bindProject(trData) {
            return new Vue({
                data() {
                    return {
                        trData
                    }
                },
                methods: {
                    getProjectName(Data) {
                        return Data.project ? Data.project.projectName : '---'
                    },
                    getStyle() {
                        return `{
                            border: none;
                            padding: 0 10px;
                            background-color: #ff9988;
                            overflow: hidden;
                            text-overflow: ellipsis;
                            white-space: nowrap;
                            max-width: 90px;
                            border-radius: 5px;
                            color: #f7f7f7;
                            line-height: 25px;
                            display: inline-block;
                        }`
                    }
                },
                template: `<span class="project-name" :style="getStyle()" :title="getProjectName(trData)">{{getProjectName(trData)}}</span>`
            })
        },
        addGroup() {
            const userRole = this.FesStorage.get('userRole');
            if (!['super', 'admin'].includes(userRole)) return this.$Toast.warn($t('message.newAllPage.Noaddgrouppermissions'));
            this.$router.push({ path: '/group/groupDetail' });
        },
        changePage({ current, size }) {
            this.search(current, size);
        },
        groupDetailAction(trData) {
            this.$router.push({
                path: '/group/groupDetail?id=' + trData.id
            });
        },
        search(querycurrent = 1, size = 10) {
            this.pagination.total = 0;
            this.FesFesx.set('isLoading', true);
            const params = {
                page: querycurrent,
                pageSize: size,
                id: this.groupNum,
                groupName: this.groupName
            }
            this.FesApi.fetch(`/group/pageList`, params, 'get').then((data) => {
                this.FesFesx.set('isLoading', false);
                let code = data.code;
                if (code != 0) {
                    this.$Toast.error(data.message);
                } else {
                    this.dataList = data.data;
                    this.FesFesx.set('groupDataList', data.data);
                    this.pagination.total = data.totalPages;
                    this.pagination.current = data.page;
                    this.pagination.size = size;
                }
            }).catch(() => {
                this.FesFesx.set('isLoading', false);
            });
            return false;
        },
        deleteGroupList() {
            const userRole = this.FesStorage.get('userRole');
            if (!['super', 'admin'].includes(userRole)) return this.$Toast.warn($t('message.newAllPage.Nodeletegrouppermissions'));
            this.deleteList = this.$refs.groupTable.getSelected();
            if (this.deleteList.length <= 0) {
                this.$Toast(this.$t('group.XZYSCDFZ'));
            } else {
                this.$Message.confirm(this.$t('group.SCFZ'), `${this.$t('group.QRSCFZ')}${this.deleteList.map(item => item.groupName).join(',')} ?`).then( (index) => {
                    if (index === 0) {
                        this.confirm();
                    }
                });
            }
        },
        confirm() {
            this.FesFesx.set('isLoading', true);
            let ids = this.deleteList.map(item => {
                return item.id;
            }).join(',')
            this.FesApi.fetch('/group/delBatch', {ids: ids}).then(res => {
                this.FesFesx.set('isLoading', false);
                this.$Toast.success(this.$t('group.FZSCCG'));
                this.search();
            }).catch(() => {
                this.FesFesx.set('isLoading', false);
            })
        }

    }
}
</script>
<style scoped lang="scss">
.group-box {
    height: 100%;
    overflow: auto;
    .group-header {
        height: 70px;
        line-height: 70px;
        .header-item {
            text-align: center;
        }
    }
    .group-content {
        margin-top: 15px;
        .groupPagination {
            text-align: center;
            padding: 15px 0 ;
        }
    }
}
</style>

