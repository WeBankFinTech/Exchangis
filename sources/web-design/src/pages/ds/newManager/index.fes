<template>
    <main class="main">
        <div class="header-bar">
            <span class="header-title">
                {{ $t('manager.resourceManager') }}
            </span>
            <p class="header-des">
                {{ $t('manager.resourceManager') }}
            </p>
        </div>
        <div class="main-content">
            <Row class="top-bar">
                <div>
                    <label class="ui-form-label">
                    {{ $t('manager.resourceType') }}
                    </label>
                </div>
                <Cell span="3">
                    <Wb-select v-model="search.source" :placeholder="$t('manager.selectResourceType')">
                        <wb-option value="HIVE" label="HIVE" />
                        <wb-option value="HDFS" label="HDFS" />
                        <wb-option value="SFTP" label="SFTP" />
                        <wb-option value="ElasticSearch" label="ElasticSearch" />
                        <wb-option value="MYSQL" label="MYSQL" />
                        <wb-option value="ORACLE" label="ORACLE" />
                    </Wb-select>
                </Cell>
                <div class="data-source">
                    <label class="ui-form-label">
                    {{ $t('manager.resourceName') }}
                    </label>
                </div>
                <Cell span="3">
                    <Wb-input v-model="search.name" :placeholder="$t('manager.SRSZYM')" />
                </Cell>
                <div class="data-source">
                    <label class="ui-form-label">
                    {{ $t('manager.SZYSZ') }}
                    </label>
                </div>
                <Cell span="3">
                    <Wb-select v-model="search.owner" :placeholder="$t('manager.XZSJYSZ')">
                        <wb-option v-for="dsOwner in dsOwners" :key="dsOwner.id" :value="dsOwner.ownerName" :label="dsOwner.ownerName" />
                    </Wb-select>
                </Cell>
                <Cell span="4" class="query-button">
                    <Wb-button type="primary" icon="search" @click="searchQuery()">
                    {{ $t('manager.CX') }}
                    </Wb-button>
                </Cell>
            </Row>
            <div class="lists-bar">
                <div class="add-button">
                    <Wb-button class="button" type="ghost" icon="plus" @click="showChooseWind">
                    {{ $t('manager.XZCX') }}
                    </Wb-button>
                </div>
                <div v-for="item in sourceData" :key="item.id" class="list-item">
                        <i v-if="item.sourceType === 'hive'" class="item-icon" size="35">HIVE</i>
                        <i v-if="item.sourceType === 'hdfs'" class="item-icon" size="35">HDFS</i>
                        <i v-if="item.sourceType === 'sftp'" class="item-icon" size="35">SFTP</i>
                        <i v-if="item.sourceType === 'mysql'" class="item-icon" size="35">MYSQL</i>
                        <i v-if="item.sourceType === 'elasticsearch'" class="item-icon" size="35">ES</i>
                        <i v-if="item.sourceType === 'oracle'" class="item-icon" size="35">ORACLE</i>
                    <div class="item-name item-col">
                        <span class="title">
                        {{ item.sourceName }}
                        </span>
                        <span class="desc">
                        {{ item.sourceDesc }}
                        </span>
                    </div>
                    <div class="type item-col">
                        <span>{{ $t('manager.LX') }}</span>
                        <span>{{ item.sourceType }}</span>
                    </div>
                    <div class="Owner item-col">
                        <span>{{ $t('manager.SZYSZ') }}</span>
                        <span>{{ item.owner }}</span>
                    </div>
                    <div class="createUser item-col">
                        <span>{{ $t('manager.CJZ') }}</span>
                        <span>{{ item.createUser }}</span>
                    </div>
                    <div class="time item-col">
                        <span>{{ $t('manager.XM') }}</span>
                        <span :title="getProjectName(item.projectId)" class="project-name">{{ getProjectName(item.projectId) }}</span>
                    </div>
                    <div class="time item-col">
                        <span>{{ $t('manager.CJZSJ') }}</span>
                        <span>{{ item.createTime }}</span>
                    </div>
                    <div class="option">
                        <!-- <span class="text" @click="sourceDetail(item)">
                        {{ $t('manager.XQ') }}
                        </span>
                        <span class="line">
                        |
                        </span> -->
                        <span class="text" @click="sourceModify(item)">
                        {{ $t('manager.BJ') }}
                        </span>
                        <span class="line">
                        |
                        </span>
                        <span class="text" @click="sourceDelete(item)">
                        {{ $t('manager.SC') }}
                        </span>
                    </div>
                    <!-- <div class="connect item-col">
                        <span>{{ $t('manager.LJXX') }}</span>
                        <span>
                            <Wb-button type="primary">
                                $t('manager.CKLJXX')
                            </Wb-button>
                        </span>
                    </div> -->
                </div>
            </div>
            <div class="page-pagination">
                <Pagination :loking="pagination.locking" :current="pagination.current"
                            :size="pagination.size" :total="pagination.total" @on-change="pageChange" />
            </div>
        </div>
        <modal ref="ds_choose" :title="$t('manager.XZSJK')" :close-on-click-shadow="false" width="600">
            <Panel :title="$t('manager.GXSJK')" class="form-inner-panel">
                <Wb-button class="iconfont " @click="showAddWind('MYSQL',`MYSQL ${$t('manager.SJY')}`)">
                MYSQL {{ $t('manager.SJY') }}
                </Wb-button>
                &nbsp;&nbsp;
                <Wb-button class="iconfont" @click="showAddWind('ORACLE',`ORACLE ${$t('manager.SJY')}`)">
                ORACLE {{ $t('manager.SJY') }}
                </Wb-button>
            </Panel>
            <Panel :title="$t('manager.DSJCC')" class="form-inner-panel">
                <Wb-button class="iconfont " @click="showAddWind('HIVE',`HIVE ${$t('manager.SJY')}`)">
                HIVE {{ $t('manager.SJK') }}
                </Wb-button>
                &nbsp;&nbsp;
                <Wb-button class="iconfont" @click="showAddWind('HDFS',`HDFS ${$t('manager.SJY')}`)">
                    HDFS
                </Wb-button>
            </Panel>
            <Panel :title="$t('manager.BJGHCC')" class="form-inner-panel">
                {{ $t('manager.ZW') }}
            </Panel>
            <Panel :title="$t('manager.WJGHCC')" class="form-inner-panel">
                <Wb-button class="iconfont" @click="showAddWind('SFTP',`SFTP ${$t('manager.FW')}`)">
                SFTP {{ $t('manager.FW') }}
                </Wb-button>
                &nbsp;&nbsp;
                <Wb-button class="iconfont " @click="showAddWind('ElasticSearch','ElasticSearch')">
                ElasticSearch
                </Wb-button>
            </Panel>
        </modal>
        <weModal
            v-model="sourceFormShow"
            :footer-disable="false"
            :title="formTitle"
            :width="650"
>
            <sourceForm
                v-if="sourceFormShow"
                :current-type="currentType"
                :active-type="activeType"
                :modify-data="modifyData"
                :project-data-list="projectDataList"
                @add="sourceAdd"
                @update="sourceUpdate"
                @connect="sourceConnect"
/>
        </weModal>
        <weLoading v-show="loading" />
    </main>
</template>
<script>
import weModal from '../../../components/uiTemplate/weModal';
import sourceForm from '../../../components/uiTemplate/sourceForm';
import weLoading from '../../../components/uiTemplate/weLoading.fes';

export default {
    components: {
        weModal,
        sourceForm,
        weLoading
    },
    FesData() {
        return {
            loading: false,
            search: {
                source: '',
                name: '',
                owner: ''
            },
            dsOwners: [],
            pagination: {
                size: 10,
                current: 1,
                total: 0
            },
            sourceData: [],
            sourceFormShow: false,
            formTitle: '',
            currentType: '',
            activeType: '',
            modifyData: {},
            projectDataList: []
        };
    },
    computed: {
        userName() {
            return this.FesApp.get('FesUserName');
        }
    },
    FesReady() {
        this.loadOwners();
        this.searchQuery();
        this.getProjectData();
    },
    methods: {
        getProjectName(id) {
            if (!id || id <= 0) {
                return '---';
            }
            const projectItem = this.projectDataList.find(item => item.id === id);
            return projectItem ? projectItem.projectName : id;
        },
        getProjectData() {
            this.FesApi.fetch('/project/selectAll', 'get').then((rst) => {
                this.projectDataList = rst;
            });
        },
        loadOwners() {
            this.FesApi.fetch('/admin/dsOwner/selectAll', 'get').then((res) => {
                this.dsOwners = res;
            }).catch((error) => {
                console.log(error);
            });
        },
        searchQuery(turn = 1, size = 10) {
            this.loading = true;
            this.FesApi.fetch('/datasource/pageList', {
                sourceName: this.search.name,
                sourceType: this.search.source,
                owner: this.search.owner,
                page: turn,
                pageSize: size
            }, 'get').then((data) => {
                this.loading = false;
                this.pagination.total = data.totalPages;
                this.pagination.current = data.page;
                this.sourceData = data.data;
            }).catch(() => {
                this.loading = false;
            });
        },
        showChooseWind() {
            this.$refs.ds_choose.show();
        },
        pageChange({ current, size }) {
            this.searchQuery(current, size);
        },
        showAddWind(type, title) {
            this.$refs.ds_choose.close();
            this.sourceFormShow = true;
            this.formTitle = title;
            this.currentType = type;
            this.activeType = 'add';
            this.modifyData = null;
        },
        sourceAdd(params) {
            this.loading = true;
            this.FesApi.fetch('/datasource/addAttach', params, {
                method: 'post',
                headers: {
                    'Content-Type': 'multipart/form-data'
                }
            }).then(() => {
                this.sourceFormShow = false;
                this.$Toast.success(this.$t('manager.CJSJYCG'));
                this.searchQuery();
            }).catch(() => {
                this.loading = false;
            });
        },
        sourceUpdate(params) {
            this.loading = true;
            this.FesApi.fetch('/datasource/updateAttach', params, {
                method: 'post',
                headers: {
                    'Content-Type': 'multipart/form-data'
                }
            }).then(() => {
                this.sourceFormShow = false;
                this.$Toast.success(this.$t('manager.GXCG'));
                this.searchQuery();
                this.loading = false;
            });
        },
        sourceConnect(params) {
            this.loading = true;
            this.FesApi.fetch(`/datasource/connect/check/${this.currentType.toLowerCase()}`, params, {
                method: 'post',
                headers: {
                    'Content-Type': 'multipart/form-data'
                },
                timeout: '60000'
            }).then(() => {
                this.loading = false;
                this.$Toast.success(this.$t('manager.LJSJYCG'));
            }).catch(() => {
                this.loading = false;
            });
        },
        sourceDelete(item) {
            if (!this.checkAuthority(item, 'DELETE')) return this.$Toast.warn(this.$t('pageDs.YHWSCQX'));
            this.$Message.confirm(this.$t('manager.SCSJY'), `${this.$t('manager.SFSCSJY', { name: item.sourceName })}?`).then((index) => {
                if (index === 0) {
                    this.loading = true;
                    this.FesApi.fetch(`/datasource/delete/${item.id}`, {}, 'delete').then(() => {
                        this.$Toast.success(this.$t('manager.SCSJYCG'));
                        this.searchQuery();
                    }).catch(() => {
                        this.loading = false;
                    });
                }
            });
        },
        sourceModify(item) {
            if (!this.checkAuthority(item, 'WRITE')) return this.$Toast.warn(this.$t('pageDs.YHWBJQX'));
            const title = () => {
                if (item.sourceType === 'hive') return `HIVE${this.$t('manager.SJY')}`;
                if (item.sourceType === 'hdfs') return `HDFS${this.$t('manager.SJY')}`;
                if (item.sourceType === 'sftp') return `SFTP${this.$t('manager.SJY')}`;
                if (item.sourceType === 'mysql') return `MYSQL${this.$t('manager.SJY')}`;
            };
            this.sourceFormShow = true;
            this.formTitle = title();
            this.currentType = item.sourceType.toUpperCase();
            this.activeType = 'update';
            this.modifyData = item;
        },
        sourceDetail(item) {
            if (!this.checkAuthority(item, 'READ')) return this.$Toast.warn(this.$t('pageDs.YHWBJQX'));
            this.FesApi.fetch(`/datasource/view/${item.id}`, {}, 'get').then((res) => {
                const title = () => {
                    if (res.sourceType === 'hive') return `HIVE${this.$t('manager.SJY')}`;
                    if (res.sourceType === 'hdfs') return `HDFS${this.$t('manager.SJY')}`;
                    if (res.sourceType === 'sftp') return `SFTP${this.$t('manager.SJY')}`;
                    if (res.sourceType === 'mysql') return `MYSQL${this.$t('manager.SJY')}`;
                };
                this.sourceFormShow = true;
                this.formTitle = title();
                this.currentType = res.sourceType.toUpperCase();
                this.activeType = 'detail';
                this.modifyData = res;
            });
        },
        checkAuthority(data, type = '') {
            const userRole = this.FesStorage.get('userRole');
            if (data.createUser === this.userName || ['super', 'admin'].includes(userRole)) {
                return true;
            }
            if (type && data.authScopes && data.authScopes.includes(type)) {
                return true;
            }
            return false;
        }
    }
};
</script>
<style scoped lang="scss">
.main {
    background-color: #f7f7f7;
    height: 100%;
    overflow: auto;
}
.header-bar {
    height: 95px;
    padding: 0 30px;
    font-size: 18px;
    background-color: #fff;
    box-shadow: 0px 0px 5px 0px rgba(0, 0, 0, 0.2);
    display: flex;
    flex-direction: column;
    justify-content: center;
    align-items:flex-start;
    .header-title {
        color: black;
    }
    .header-des {
        font-size: 14px;
        padding-top: 15px;
    }
}
.main-content {
    width: 97%;
    margin: 0 auto;
    background-color: #fff;
    margin-top: 25px;
    min-height: 500px;
    border-radius: 10px;
    box-shadow: 0px 0px 5px 0px rgba(0, 0, 0, 0.2);
    overflow: hidden;
    padding-bottom: 65px;
    position: relative;
    .top-bar {
        padding: 25px 25px;
        // margin-top: 15px;
        display: flex;
        justify-content: flex-start;
        align-items: center;
        border-bottom: 1px solid #e8e8e8;
        .query-button {
            margin-left: 40px;
        }
        .data-source {
            margin-left:40px;
        }
    }
    .add-button {
        padding: 20px 0 0 0px;
        .button {
            width: 100%;
            border-style: dashed;
        }
    }
    .lists-bar {
        padding: 0 25px;
        .list-item {
            display: flex;
            justify-content: flex-start;
            align-items: center;
            padding: 15px 0;
            border-bottom: 1px solid #e8e8e8;
            .item-icon {
                height: 55px;
                border-radius: 50%;
                color: rgba(0, 0, 0, 0.5);
                background-color: #e8e8e8;
                flex-basis: 55px;
                line-height: 55px;
                text-align: center;
                font-style: normal;
                font-weight: 800;
                font-size: 10px;
                &::before {
                    font-size: 30px;
                }
            }
            .item-col {
                display: flex;
                flex-direction: column;
                justify-content: space-around;
                align-items: flex-start;
                .project-name {
                    padding: 0 10px;
                    background-color: #ff9988;
                    overflow: hidden;
                    text-overflow: ellipsis;
                    white-space: nowrap;
                    max-width: 90px;
                    border-radius: 5px;
                    color: #f7f7f7;
                }
            }
            .item-name {
                flex: 3;
                padding: 0 15px;
                .title {
                    font-size: 15px;
                    color: rgba(0, 0, 0, 0.8);
                }
                .desc {
                    font-size: 14px;
                    margin-top: 6px;
                    color: rgba(0, 0, 0, 0.45);
                }
            }
            .Owner, .type, .time, .createUser {
                flex: 1;
                padding: 0 15px;
                font-size: 14px;
                color: rgba(0, 0, 0, 0.45);
                line-height: 25px;
            }
            .option {
                flex: 1;
                display: flex;
                justify-content: space-around;
                align-items: center;
                color: #3399ff;
                cursor: pointer;
                box-sizing: border-box;
                .text {
                    flex: 1;
                    text-align: center;
                    font-size: 14px;
                }
                .line {
                    color: rgba(0, 0, 0, 0.3);
                    padding: 0 5px;
                }
            }
        }
    }
}
</style>
