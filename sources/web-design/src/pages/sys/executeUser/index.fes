<template>
    <main class="main full-height">
        <div class="header-bar">
            <span class="header-title">
                {{ $t('sys.Performusermanagement') }}
            </span>
            <p class="header-des">
                {{ $t('sys.Performusermanagement') }}
            </p>
        </div>
        <div class="main-content">
            <Row class="top-bar">
                <div class="data-source">
                    <label class="ui-form-label">
                    {{ $t('sys.Theusername') }}
                    </label>
                </div>
                <Cell span="4">
                    <Wb-input v-model="searchName" :placeholder="$t('manager.SRSZYM')" @on-enter="searchQuery()" />
                </Cell>
                <Cell span="4" class="query-button">
                    <Wb-button type="primary" icon="search" @click="searchQuery()">
                    {{ $t('manager.CX') }}
                    </Wb-button>
                </Cell>
            </Row>
            <div class="lists-bar">
                <div class="add-button">
                    <Wb-button class="button" type="ghost" icon="plus" @click="showChooseWind">
                    {{ $t('sys.Thenewperformuser') }}
                    </Wb-button>
                </div>
                <div v-for="item in sourceData" :key="item.id" class="list-item">
                        <Icon class="item-icon" type="md-person" size="35" />

                    <div class="item item-col">
                        <span class="title">
                        {{ $t('sys.Theusername') }}
                        </span>
                        <span class="desc">
                        {{ item.execUser }}
                        </span>
                    </div>
                    <div class="item item-col">
                        <span class="title">
                            ID
                        </span>
                        <span class="desc">
                        {{ item.id }}
                        </span>
                    </div>
                    <div class="time item-col">
                        <span>{{ $t('manager.CJZSJ') }}</span>
                        <span>{{ item.createTime }}</span>
                    </div>
                    <div class="option">
                        <span class="text" @click="sourceDelete(item)">
                        {{ $t('manager.SC') }}
                        </span>
                    </div>
                </div>
            </div>
            <div class="page-pagination">
                <Pagination :loking="pagination.locking" :current="pagination.current"
                            :size="pagination.size" :total="pagination.total" @on-change="pageChange" />
            </div>
        </div>
        <weModal v-model="addExecutor" :title="$t('sys.Thenewperformuser')" @onConfirm="addConfirm">
            <Wb-form ref="source_validate" label-position="left" :rule="sourceRule">
                <Form-item :label="$t('sys.Theusername')" prop="executeName">
                    <wb-input v-model="executeName" :placeholder="$t('sys.Pleasefillinusername')" />
                </Form-item>
                <Form-item :label="$t('sys.describe')" prop="executeDes">
                    <wb-input v-model="executeDes" :placeholder="$t('sys.Pleasefillintheusername')" />
                </Form-item>
            </Wb-form>
        </weModal>
        <weLoading v-show="loading" />
    </main>
</template>
<script>
import weModal from '../../../components/uiTemplate/weModal';
import weLoading from '../../../components/uiTemplate/weLoading.fes';

export default {
    components: {
        weModal,
        weLoading
    },
    FesData() {
        return {
            loading: false,
            searchName: '',
            sourceData: '',
            pagination: {
                size: 10,
                current: 1,
                total: 0
            },
            executeName: '',
            executeDes: '',
            addExecutor: false,
            sourceRule: {
                executeName: [
                    {required: true, message: this.$t('sys.Pleasefillinusername')},
                    {
                        type: 'string',
                        pattern: /^[a-zA-Z][a-zA-Z0-9_]*$/,
                        message: `${this.$t('sys.Musthavealetter')}，${this.$t('sys.Andonlysupportletter')}、${this.$t('sys.digital')}、${this.$t('sys.Theunderline')}`,
                        trigger: 'change'
                    }
                ]
            }
        }
    },
    FesReady() {
        this.loadOwners();
        this.searchQuery();
    },
    methods: {
        loadOwners() {
            this.FesApi.fetch('/admin/exec/user/list', 'get').then(res => {
                this.dsOwners = res;
            }).catch((error) => {
                console.log(error);
            });
        },
        searchQuery(turn = 1, size = 10) {
            this.loading = true;
            this.FesApi.fetch(`/admin/exec/user/pager?execUser=${this.searchName}`, {
                'page': turn,
                'pageSize': size
            }, 'get').then((data) => {
                this.loading = false
                this.sourceData = data.data;
                this.pagination.size = data.pageSize;
                this.pagination.current = data.page;
                this.pagination.total = data.totalPages;
            }).catch(() => {
                this.loading = false
            });
        },
        showChooseWind() {
            this.addExecutor = true;
        },
        addConfirm() {
            this.$refs.source_validate.validate((valid) => {
                if (valid) {
                    this.FesApi.fetch('/admin/exec/user', {
                        description: this.executeDes,
                        execUser: this.executeName
                    }, 'post').then(() => {
                        this.searchQuery(this.pagination.current, this.pagination.size);
                        this.$Toast.success(this.$t('sys.Addausersuccessfully'));
                    })
                } else {
                    this.addExecutor = true;
                }
            })

        },
        pageChange({ current, size }) {
            this.searchQuery(current, size)
        },
        sourceDelete(item) {
            this.$Message.confirm(this.$t('sys.Deleteperformuser'), `${this.$t('sys.Whetheryouwanttodelete')}${item.execUser}？`).then((index) => {
                if (index === 0) {
                    this.loading = true;
                    this.FesApi.fetch('/admin/exec/user/' + item.id, {}, 'delete').then(() => {
                        this.$Toast.success(this.$t('sys.Deletetheusersuccessfully'));
                        this.searchQuery(this.pagination.current, this.pagination.size);
                    }).catch(() => {
                        this.loading = false;
                    });
                }
            });
        }
    }
}
</script>
<style scoped lang="scss">
.main {
    background-color: #f7f7f7;
    min-height: 100%;
}
.header-bar {
    height: 95px;
    padding: 0 30px;
    font-size: 18px;
    background-color: #fff;
    box-shadow: 0px 0px 5px 0px rgba(0, 0, 0, 0.2);
    display: flex;
    flex-direction: column;
    justify-content: center;
    align-items:flex-start;
    .header-title {
        color: black;
    }
    .header-des {
        font-size: 14px;
        padding-top: 15px;
    }
}
.main-content {
    width: 97%;
    margin: 0 auto;
    background-color: #fff;
    margin-top: 25px;
    min-height: 500px;
    border-radius: 10px;
    box-shadow: 0px 0px 5px 0px rgba(0, 0, 0, 0.2);
    overflow: hidden;
    padding-bottom: 65px;
    position: relative;
    .top-bar {
        padding: 25px 25px;
        display: flex;
        justify-content: flex-start;
        align-items: center;
        border-bottom: 1px solid #e8e8e8;
        .query-button {
            margin-left: 40px;
        }
        .data-source {
            margin-left:40px;
        }
    }
    .add-button {
        padding: 20px 0 0 0px;
        .button {
            width: 100%;
            border-style: dashed;
        }
    }
    .lists-bar {
        padding: 0 25px;
        .list-item {
            display: flex;
            justify-content: flex-start;
            align-items: center;
            padding: 15px 0;
            border-bottom: 1px solid #e8e8e8;
            .item-icon {
                width: 50px;
                height: 50px;
                border-radius: 50%;
                color: rgba(0, 0, 0, 0.5);
                background-color: #e8e8e8;
                flex-basis: 50px;
                line-height: 50px;
                text-align: center;
                &::before {
                    font-size: 30px;
                }
            }
            .item-col {
                flex: 2;
                display: flex;
                flex-direction: column;
                justify-content: space-around;
                align-items: flex-start;
                padding: 0 15px;
                .title {
                    font-size: 15px;
                    color: rgba(0, 0, 0, 0.8);
                }
                .desc {
                    font-size: 14px;
                    margin-top: 6px;
                    color: rgba(0, 0, 0, 0.45);
                }
            }
            .Owner, .type, .time, .createUser {
                flex: 1;
                padding: 0 15px;
                font-size: 14px;
                color: rgba(0, 0, 0, 0.45);
                line-height: 25px;
            }
            .option {
                flex: 1;
                display: flex;
                justify-content: space-around;
                align-items: center;
                color: #3399ff;
                cursor: pointer;
                box-sizing: border-box;
                .text {
                    flex: 1;
                    text-align: center;
                    font-size: 14px;
                }
                .line {
                    color: rgba(0, 0, 0, 0.3);
                }
            }
        }
    }
}
</style>
