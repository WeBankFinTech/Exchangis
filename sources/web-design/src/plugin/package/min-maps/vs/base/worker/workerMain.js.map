{"version":3,"sources":["vs/base/worker/fake","vs/base/worker/vs/loader.js","vs/base/worker/file:/Users/penlv/code/vscode/out-editor-src/vs/base/common/arrays.ts","vs/base/worker/file:/Users/penlv/code/vscode/out-editor-src/vs/base/common/diff/diffChange.ts","vs/base/worker/file:/Users/penlv/code/vscode/out-editor-src/vs/base/common/diff/diff.ts","vs/base/worker/file:/Users/penlv/code/vscode/out-editor-src/vs/base/common/errors.ts","vs/base/worker/file:/Users/penlv/code/vscode/out-editor-src/vs/base/common/functional.ts","vs/base/worker/file:/Users/penlv/code/vscode/out-editor-src/vs/base/common/iterator.ts","vs/base/worker/file:/Users/penlv/code/vscode/out-editor-src/vs/base/common/keyCodes.ts","vs/base/worker/file:/Users/penlv/code/vscode/out-editor-src/vs/base/common/lifecycle.ts","vs/base/worker/file:/Users/penlv/code/vscode/out-editor-src/vs/base/common/linkedList.ts","vs/base/worker/file:/Users/penlv/code/vscode/out-editor-src/vs/base/common/event.ts","vs/base/worker/file:/Users/penlv/code/vscode/out-editor-src/vs/base/common/cancellation.ts","vs/base/worker/file:/Users/penlv/code/vscode/out-editor-src/vs/base/common/platform.ts","vs/base/worker/file:/Users/penlv/code/vscode/out-editor-src/vs/base/common/strings.ts","vs/base/worker/file:/Users/penlv/code/vscode/out-editor-src/vs/base/common/types.ts","vs/base/worker/file:/Users/penlv/code/vscode/out-editor-src/vs/base/common/uri.ts","vs/base/worker/file:/Users/penlv/code/vscode/out-editor-src/vs/base/common/worker/simpleWorker.ts","vs/base/worker/file:/Users/penlv/code/vscode/out-editor-src/vs/editor/common/core/position.ts","vs/base/worker/file:/Users/penlv/code/vscode/out-editor-src/vs/editor/common/core/range.ts","vs/base/worker/file:/Users/penlv/code/vscode/out-editor-src/vs/editor/common/core/selection.ts","vs/base/worker/file:/Users/penlv/code/vscode/out-editor-src/vs/editor/common/core/token.ts","vs/base/worker/file:/Users/penlv/code/vscode/out-editor-src/vs/editor/common/core/uint.ts","vs/base/worker/file:/Users/penlv/code/vscode/out-editor-src/vs/editor/common/core/characterClassifier.ts","vs/base/worker/file:/Users/penlv/code/vscode/out-editor-src/vs/editor/common/diff/diffComputer.ts","vs/base/worker/file:/Users/penlv/code/vscode/out-editor-src/vs/editor/common/model/wordHelper.ts","vs/base/worker/file:/Users/penlv/code/vscode/out-editor-src/vs/editor/common/modes/linkComputer.ts","vs/base/worker/file:/Users/penlv/code/vscode/out-editor-src/vs/editor/common/modes/supports/inplaceReplaceSupport.ts","vs/base/worker/vs/editor/common/standalone/promise-polyfill/polyfill.js","vs/base/worker/file:/Users/penlv/code/vscode/out-editor-src/vs/editor/common/standalone/standaloneEnums.ts","vs/base/worker/file:/Users/penlv/code/vscode/out-editor-src/vs/editor/common/standalone/standaloneBase.ts","vs/base/worker/file:/Users/penlv/code/vscode/out-editor-src/vs/editor/common/viewModel/prefixSumComputer.ts","vs/base/worker/file:/Users/penlv/code/vscode/out-editor-src/vs/editor/common/model/mirrorTextModel.ts","vs/base/worker/file:/Users/penlv/code/vscode/out-editor-src/vs/editor/common/services/editorSimpleWorker.ts","vs/base/worker/file:/Users/penlv/code/vscode/out-editor-src/vs/base/worker/workerMain.ts"],"names":["__m","__M","deps","result","i","len","length","_amdLoaderGlobal","this","_commonjsGlobal","global","AMDLoader","Environment","_detected","_isWindows","_isNode","_isElectronRenderer","_isWebWorker","Object","defineProperty","prototype","get","_detect","enumerable","configurable","module","exports","process","versions","electron","type","importScripts","navigator","userAgent","indexOf","platform","LoaderEvent","detail","timestamp","LoaderEventRecorder","loaderAvailableTimestamp","_events","record","push","Utilities","getHighPerformanceTimestamp","getEvents","NullLoaderEventRecorder","INSTANCE","fileUriToFilePath","isWindows","uri","decodeURI","replace","test","substr","startsWith","haystack","needle","endsWith","containsQueryString","url","isAbsolutePath","forEachProperty","obj","callback","key","hasOwnProperty","isEmpty","recursiveClone","Array","isArray","value","generateAnonymousModule","NEXT_ANONYMOUS_ID","isAnonymousModule","id","PERFORMANCE_NOW_PROBED","HAS_PERFORMANCE_NOW","performance","now","Date","ConfigurationOptionsUtil","validateConfigurationOptions","options","defaultOnError","err","errorCode","console","error","moduleId","stack","neededBy","baseUrl","isBuild","paths","config","catchError","urlArgs","onError","ignoreDuplicateModules","cspNonce","nodeModules","nodeCachedData","seed","writeDelay","onData","warn","path","undefined","mergeConfigurationOptions","overwrite","base","concat","key2","value2","Configuration","env","_env","_createIgnoreDuplicateModulesMap","_createNodeModulesMap","_createSortedPathsRules","nodeRequire","main","filename","isNode","nodeMain","dirnameIndex","Math","max","lastIndexOf","substring","ignoreDuplicateModulesMap","nodeModulesMap","create","_i","_a","nodeModule","_this","sortedPathsRules","from","to","sort","a","b","cloneAndMerge","getOptionsLiteral","_applyPaths","pathRule","j","lenJ","_addUrlArgsToUrl","_addUrlArgsIfNecessaryToUrl","_addUrlArgsIfNecessaryToUrls","urls","moduleIdToPaths","results","requireToUrl","isDuplicateMessageIgnoredFor","getConfigForModule","shouldCatchError","shouldRecordStats","recordStats","OnlyOnceScriptLoader","_scriptLoader","_callbackMap","load","moduleManager","scriptSrc","errorback","isWebWorker","WorkerScriptLoader","NodeScriptLoader","BrowserScriptLoader","scriptCallbacks","triggerCallback","triggerErrorback","attachListeners","script","unbind","removeEventListener","loadEventListener","errorEventListener","e","addEventListener","document","createElement","setAttribute","getConfig","getElementsByTagName","appendChild","_didInitialize","_didPatchNodeRequire","_hasCreateCachedData","_init","_fs","_vm","_path","_crypto","Script","_initNodeRequire","that","Module","_compile","content","wrapper","wrap","cachedDataPath","_getCachedDataPath","cachedData","readFileSync","produceCachedData","compileWrapper","runInThisContext","dirname","require","mod","constructor","resolve","request","_resolveFilename","mainModule","extensions","_extensions","cache","_cache","makeRequireFunction","args","Buffer","apply","_processCachedData","opts","nodeInstrumenter","c","recorder","getRecorder","pieces","split","moduleExports_1","enqueueDefineAnonymousModule","readFile","encoding","data","normalizedScriptSrc","normalize","vmScriptSrc","isElectronRenderer","driveLetterMatch","match","toUpperCase","contents","prefix","charCodeAt","_BOM","cachedDataPath_1","_err","_loadAndEvalScript","r","globalDefineFunc","getGlobalAMDDefineFunc","receivedDefineCall","localDefineFunc","arguments","amd","call","getGlobalAMDRequireFunc","Error","basedir","hash","createHash","update","digest","basename","join","createCachedData","cachedDataRejected","_runSoon","unlink","cachedDataProduced","writeFile","minTimeout","timeout","ceil","random","setTimeout","createScriptLoader","ModuleIdResolver","fromModuleId","lastSlash","fromModulePath","_normalizeModuleId","pattern","resolveModule","ROOT","strId","dependencies","moduleIdResolver","_callback","_errorback","exportsPassedIn","unresolvedDependenciesCount","_isComplete","_safeInvokeFunction","returnedValue","producedError","_invokeFactory","strModuleId","dependenciesValues","complete","onDependencyError","isComplete","ModuleIdProvider","_nextId","_strModuleIdToIntModuleId","Map","_intModuleIdToStrModuleId","getModuleId","getMaxModuleId","set","getStrModuleId","RegularDependency","EXPORTS","MODULE","REQUIRE","PluginDependency","pluginId","pluginParam","ModuleManager","scriptLoader","defineFunc","requireFunc","_loaderAvailableTimestamp","_defineFunc","_requireFunc","_moduleIdProvider","_config","_modules2","_knownModules2","_inverseDependencies2","_inversePluginDependencies2","_currentAnnonymousDefineCall","_recorder","_buildInfoPath","_buildInfoDefineStack","_buildInfoDependencies","reset","_findRelevantLocationInStack","str","normalizedPath","stackPieces","m","stackPath","stackLine","stackColumn","trimPathOffset","line","parseInt","col","getBuildInfo","resultLen","location_1","defineStack","defineLocation","shim","getLoaderEvents","defineModule","_normalizeDependencies","map","dep","_resolve","_normalizeDependency","dependency","bangIndex","strPluginId","dependencyId","_relativeRequire","synchronousRequire","_strModuleId","configure","params","shouldOverwrite","oldShouldRecordStats","_onLoad","defineCall","_createLoadError","intModuleId","_onLoadError","seenModuleId","someoneNotified","queue","queueElement","shift","inverseDeps","inverseDep","_hasDependencyPath","fromId","toId","inQueue","dependencyModule","_findCyclePath","depth","_createRequire","toUrl","getStats","__$__nodeRequire","_loadModule","lastPathIndex","loadNextPath","currentPath_1","recorder_1","_loadPluginDependency","plugin","pluginDependency","cyclePath","reverse","inversePluginDeps","_onModuleComplete","inverseDependencyId","inverseDependency","delete","define","init","_nodeRequire_1","what","RequireFunc","DefineFunc","jQuery","_requireFunc_config","doNotInitLoader","mergeSort","compare","_sort","lo","hi","aux","mid","leftIdx","rightIdx","_merge","firstIndex","array","fn","tail","n","tail2","arr","slice","equals","one","other","itemEquals","binarySearch","comparator","low","high","comp","findFirstInSorted","p","floor","groupBy","currentGroup","element","coalesce","filter","isFalsyOrEmpty","isNonEmptyArray","distinct","keyFn","position","seen","elem","distinctES6","Set","has","add","first","notFoundValue","index","flatten","range","arg","arrayInsert","target","insertIndex","insertArr","before","after","pushToStart","splice","unshift","pushToEnd","asArray","x","DiffChange","originalStart","originalLength","modifiedStart","modifiedLength","getOriginalEnd","getModifiedEnd","createStringSequence","getLength","getElementAtIndex","pos","stringDiff","original","modified","pretty","LcsDiff","ComputeDiff","Debug","Assert","condition","message","MyArray","Copy","sourceArray","sourceIndex","destinationArray","destinationIndex","DiffChangeHelper","m_changes","m_originalStart","Number","MAX_VALUE","m_modifiedStart","m_originalCount","m_modifiedCount","MarkNextChange","diffChange_1","AddOriginalElement","originalIndex","modifiedIndex","min","AddModifiedElement","getChanges","getReverseChanges","originalSequence","newSequence","continueProcessingPredicate","OriginalSequence","ModifiedSequence","ContinueProcessingPredicate","m_forwardHistory","m_reverseHistory","ElementsAreEqual","newIndex","OriginalElementsAreEqual","index1","index2","ModifiedElementsAreEqual","_ComputeDiff","originalEnd","modifiedEnd","changes","ComputeDiffRecursive","PrettifyChanges","quitEarlyArr","midOriginalArr","midModifiedArr","ComputeRecursionPoint","midOriginal","midModified","leftChanges","rightChanges","ConcatenateChanges","WALKTRACE","diagonalForwardBase","diagonalForwardStart","diagonalForwardEnd","diagonalForwardOffset","diagonalReverseBase","diagonalReverseStart","diagonalReverseEnd","diagonalReverseOffset","forwardPoints","reversePoints","deltaIsEven","diagonal","forwardChanges","reverseChanges","changeHelper","diagonalMin","diagonalMax","diagonalRelative","lastOriginalIndex","MIN_VALUE","historyIndex","originalStartPoint","modifiedStartPoint","lastForwardChange","numDifferences","maxDifferences","numDiagonals","tempOriginalIndex","furthestOriginalIndex","furthestModifiedIndex","ClipDiagonalBound","abs","matchLengthOfLongest","temp","change","originalStop","modifiedStop","checkOriginal","checkModified","mergedChangeArr","ChangesOverlap","prevChange","bestDelta","bestScore","_boundaryScore","delta","score","_OriginalIsBoundary","_OriginalRegionIsBoundary","_ModifiedIsBoundary","_ModifiedRegionIsBoundary","left","right","diagonalBaseIndex","diagonalsAbove","diffEven","isPromiseCanceledError","name","canceledName","ErrorHandler","listeners","unexpectedErrorHandler","emit","forEach","listener","onUnexpectedError","onUnexpectedExternalError","errorHandler","transformErrorForSerialization","$isError","stacktrace","canceled","illegalArgument","illegalState","once","didCall","FIN","done","Iterator","iterator","next","_empty","empty","fromArray","elements","collect","getSequenceIterator","ArrayIterator","items","start","end","current","ArrayNavigator","_super","__extends","previous","last","parent","MappedIterator","createSimpleKeybinding","keybinding","OS","ctrlCmd","winCtrl","SimpleKeybinding","KeyCodeStrMap","_keyCodeToStr","_strToKeyCode","keyCode","toLowerCase","keyCodeToStr","strToKeyCode","uiMap","userSettingsUSMap","userSettingsGeneralMap","uiLabel","usUserSettingsLabel","generalUserSettingsLabel","KeyCodeUtils","toString","fromString","toUserSettingsUS","toUserSettingsGeneral","fromUserSettings","KeyChord","firstPart","secondPart","createKeybinding","chordPart","ChordKeybinding","ctrlKey","shiftKey","altKey","metaKey","isModifierKey","toChord","isDuplicateModifierCase","parts","errors_1","ResolvedKeybindingPart","kbLabel","kbAriaLabel","keyLabel","keyAriaLabel","ResolvedKeybinding","dispose","rest","d","isDisposable","thing","combinedDisposable","disposables","toDisposable","Disposable","_toDispose","_lifecycle_disposable_isDisposed","_register","t","None","freeze","ImmortalReference","object","Node","Undefined","prev","LinkedList","_first","_last","_size","clear","_insert","atTheEnd","newNode","oldLast","oldFirst","didRemove","_remove","res","node","anchor","iterator_1","toArray","Event","event","thisArgs","didFire","snapshot","each","reduce","merge","initial","output","emitter","Emitter","onFirstListenerAdd","fire","onLastListenerRemove","latch","firstCall","shouldEmit","_disposable","signal","any","events","lifecycle_1","debounce","delay","leading","leakWarningThreshold","subscription","handle","numDebouncedCalls","cur","clearTimeout","_output","stopwatch","getTime","_","buffer","nextTick","_buffer","flush","onFirstListenerDidAdd","ChainableEvent","on","chain","fromNodeEventEmitter","eventName","removeListener","fromPromise","promise","then","toPromise","Promise","_globalLeakWarningThreshold","LeakageMonitor","customThreshold","_warnCountdown","_stacks","check","listenerCount","threshold","count","topStack_1","topCount_1","_disposed","_options","_leakageMon","_event","_listeners","linkedList_1","firstListener","remove","onListenerDidAdd","removeMonitor","size","_noop","_deliveryQueue","iter","event_1","PauseableEmitter","_isPaused","_eventQueue","_mergeFn","pause","resume","EventMultiplexer","hasListeners","hook","functional_1","unhook","idx","EventBufferer","buffers","wrapEvent","bufferEvents","pop","Relay","listening","inputEvent","inputEventListener","CancellationToken","shortcutEvent","context","bind","isCancellationToken","Cancelled","MutableToken","isCancellationRequested","onCancellationRequested","_isCancelled","_emitter","cancel","CancellationTokenSource","_token","_parentListener","_isMacintosh","_isLinux","_isNative","_isWeb","rawNlsConfig","nlsConfig","JSON","parse","resolved","availableLanguages","locale","_translationsConfigFile","language","isMacintosh","isLinux","isNative","isWeb","_globals","self","globals","_setImmediate","setImmediate","escapeRegExpCharacters","ltrim","needleLen","offset","rtrim","haystackLen","isLowerAsciiLetter","code","isUpperAsciiLetter","isAsciiLetter","doEqualsIgnoreCase","stopAt","codeA","codeB","diff","String","fromCharCode","isFullWidthCharacter","charCode","isFalsyOrWhitespace","trim","pad","l","char","_formatRegexp","format","group","isNaN","escape","html","convertSimple2RegExpPattern","createRegExp","searchString","isRegex","wholeWord","charAt","modifiers","matchCase","multiline","unicode","RegExp","regExpLeadsToEndlessLoop","regexp","source","exec","lastIndex","regExpFlags","ignoreCase","firstNonWhitespaceIndex","chCode","getLeadingWhitespace","lastNonWhitespaceIndex","startIndex","equalsIgnoreCase","startsWithIgnoreCase","candidate","candidateLength","commonPrefixLength","commonSuffixLength","aLastIndex","bLastIndex","isHighSurrogate","isLowSurrogate","CONTAINS_RTL","containsRTL","CONTAINS_EMOJI","containsEmoji","IS_BASIC_ASCII","isBasicASCII","containsFullWidthCharacter","UTF8_BOM_CHARACTER","startsWithUTF8BOM","safeBtoa","btoa","encodeURIComponent","repeat","s","isString","_typeof","string","isObject","isUndefined","isUndefinedOrNull","isFunction","function","validateConstraint","constraint","number","isNumber","isBoolean","isEmptyObject","validateConstraints","constraints","getAllPropertyNames","proto","getPrototypeOf","getOwnPropertyNames","withNullAsUndefined","withUndefinedAsNull","encodeURIComponentFast","uriComponent","allowSlash","nativeEncodePos","escaped","encodeTable","_makeFsPath","authority","scheme","platform_1","_asFormatted","skipEncoding","encoder","query","fragment","_slash","userinfo","_schemePattern","_singleSlashStart","_doubleSlashStart","_throwOnMissingSchema","_regexp","URI","schemeOrData","_strict","trace","_schemeFix","_referenceResolution","ret","_validateUri","isUri","fsPath","with","_URI","decodeURIComponent","file","components","toJSON","revive","_fsPath","_formatted","external","$mid","INITIALIZE","webWorkerWarningLogged","logOnceWebWorkerWarning","SimpleWorkerProtocol","handler","_workerId","_handler","_lastSentReq","_pendingReplies","setWorkerId","workerId","sendMessage","method","req","reject","_send","vsWorker","handleMessage","serializedMessage","_handleMessage","msg","seq","replyMessage","reply","requestMessage","strMsg","stringify","SimpleWorkerClient","workerFactory","lazyProxyReject","_worker","_protocol","postMessage","getId","loaderConfiguration","requirejs","contexts","_onModuleLoaded","_lazyProxy","availableMethods","proxy","availableMethods_1","methodName","createProxyMethod","proxyMethodRequest","_onError","_request","getProxyObject","info","SimpleWorkerServer","postSerializedMessage","requestHandler","_requestHandler","onmessage","initialize","loaderConfig","methods","types_1","prop","vs","handlerModule","_b","Position","lineNumber","column","newLineNumber","newColumn","deltaLineNumber","deltaColumn","isBefore","isBeforeOrEqual","aLineNumber","bLineNumber","clone","lift","isIPosition","Range","startLineNumber","startColumn","endLineNumber","endColumn","containsPosition","containsRange","otherRange","plusRange","intersectRanges","resultStartLineNumber","resultStartColumn","resultEndLineNumber","resultEndColumn","otherStartLineNumber","otherStartColumn","otherEndLineNumber","otherEndColumn","equalsRange","getEndPosition","position_1","getStartPosition","setEndPosition","setStartPosition","collapseToStart","fromPositions","isIRange","areIntersectingOrTouching","areIntersecting","compareRangesUsingStarts","aStartLineNumber","bStartLineNumber","aStartColumn","bStartColumn","aEndLineNumber","bEndLineNumber","compareRangesUsingEnds","spansMultipleLines","Selection","selectionStartLineNumber","selectionStartColumn","positionLineNumber","positionColumn","equalsSelection","selectionsEqual","getDirection","getPosition","liftSelection","sel","selectionsArrEqual","isISelection","createWithDirection","direction","range_1","Token","TokenizationResult","tokens","endState","TokenizationResult2","toUint32","v","Uint8Matrix","rows","cols","defaultValue","Uint8Array","_data","row","toUint8","toUint32Array","Uint32Array","CharacterClassifier","_defaultValue","uint_1","_asciiMap","_createAsciiMap","_map","asciiMap","_value","CharacterSet","_actual","computeDiff","modifiedSequence","diff_1","MAXIMUM_RUN_TIME","MINIMUM_MATCHING_CHARACTER_LENGTH","LineMarkerSequence","lines","startColumns","endColumns","length_1","_getFirstNonBlankColumn","_getLastNonBlankColumn","_lines","_startColumns","_endColumns","getStartLineNumber","getEndLineNumber","txt","strings","getCharSequence","shouldIgnoreTrimWhitespace","endIndex","charCodes","lineNumbers","columns","lineContent","CharSequence","_charCodes","_lineNumbers","_columns","getStartColumn","getEndColumn","CharChange","originalStartLineNumber","originalStartColumn","originalEndLineNumber","originalEndColumn","modifiedStartLineNumber","modifiedStartColumn","modifiedEndLineNumber","modifiedEndColumn","createFromDiffChange","diffChange","originalCharSequence","modifiedCharSequence","LineChange","charChanges","createFromDiffResult","originalLineSequence","modifiedLineSequence","shouldComputeCharChanges","shouldPostProcessCharChanges","rawChanges","currChange","originalMatchingLength","modifiedMatchingLength","postProcessCharChanges","length_2","DiffComputer","originalLines","modifiedLines","shouldMakePrettyDiff","maximumRunTimeMs","computationStartTime","_continueProcessingPredicate","lineChanges","length_3","originalLineIndex","modifiedLineIndex","nextChange","originalLine","modifiedLine","originalChar","modifiedChar","_pushTrimWhitespaceCharChange","originalMaxColumn","modifiedMaxColumn","originalLineNumber","modifiedLineNumber","_mergeTrimWhitespaceCharChange","USUAL_WORD_SEPARATORS","DEFAULT_WORD_REGEXP","allowInWords","USUAL_WORD_SEPARATORS_1","sep","createWordRegExp","ensureValidWordDefinition","wordDefinition","flags","getWordAtText","text","textOffset","matchIndex","word","getWordAtPosSlow","getWordAtPosFast","StateMachine","edges","maxCharCode","maxState","states","_states","_maxCharCode","nextState","currentState","_stateMachine","_classifier","LinkComputer","_createLink","classifier","linkBeginIndex","linkEndIndex","lastIncludedCharIndex","charCodeBeforeLink","lastCharCodeInLink","computeLinks","model","stateMachine","characterClassifier_1","getClassifier","lineCount","getLineCount","getLineContent","linkBeginChCode","state","hasOpenParens","hasOpenSquareBracket","hasOpenCurlyBracket","resetStateMachine","chClass","BasicInplaceReplace","_defaultValueSet","navigateValueSet","range1","text1","range2","text2","up","doNavigateValueSet","numberResult","numberReplace","textReplace","precision","pow","n1","n2","parseFloat","valueSetsReplace","valueSets","valueSetReplace","valueSet","factory","finallyConstructor","reason","noop","TypeError","_state","_handled","_deferreds","doResolve","deferred","_immediateFn","cb","onFulfilled","onRejected","newValue","finale","thisArg","_unhandledRejectionFn","ex","setTimeoutFunc","prom","all","val","remaining","race","values","globalNS","window","MarkerTag","MarkerSeverity","KeyCode","SelectionDirection","ScrollbarVisibility","OverviewRulerLane","EndOfLinePreference","DefaultEndOfLine","EndOfLineSequence","TrackedRangeStickiness","ScrollType","CursorChangeReason","RenderMinimap","WrappingIndent","TextEditorCursorBlinkingStyle","TextEditorCursorStyle","RenderLineNumbersType","ContentWidgetPositionPreference","OverlayWidgetPositionPreference","MouseTargetType","IndentAction","CompletionItemKind","CompletionItemInsertTextRule","CompletionTriggerKind","SignatureHelpTriggerKind","DocumentHighlightKind","SymbolKind","KeyMod","chord","keyCodes_1","CtrlCmd","Shift","Alt","WinCtrl","createMonacoBaseAPI","editor","languages","cancellation_1","standaloneEnums","selection_1","Uri","uri_1","token_1","PrefixSumIndexOfResult","remainder","PrefixSumComputer","prefixSum","prefixSumValidIndex","Int32Array","getCount","insertValues","oldValues","oldPrefixSum","insertValuesLen","subarray","changeValue","removeValues","cnt","maxCnt","getTotalValue","_getAccumulatedValue","getAccumulatedValue","getIndexOf","accumulatedValue","midStop","midStart","PrefixSumComputerWithCache","_cacheAccumulatedValueStart","_bustCache","cacheIndex","warmUpCache","accumulatedValueStart","accumulatedValueEnd","newCache","MirrorTextModel","eol","versionId","_uri","_eol","_versionId","_lineStarts","getText","onEvents","changes_1","_acceptDeleteRange","_acceptInsertText","_ensureLineStarts","eolLength","linesLength","lineStartValues","prefixSumComputer_1","_setLineText","lineIndex","insertText","insertLines","newLengths","MirrorModel","getValue","getLinesContent","getWordAtPosition","wordAtText","wordHelper_1","getWordUntilPosition","wordAtPosition","createWordIterator","lineText","wordRangesIdx","wordRanges","_wordenize","getLineWords","words","ranges_1","getValueInRange","_validateRange","lineEnding","startLineIndex","endLineIndex","resultLines","offsetAt","_validatePosition","positionAt","out","lineLength","hasChanged","maxCharacter","mirrorTextModel_1","BaseEditorSimpleWorker","foreignModuleFactory","_foreignModuleFactory","_foreignModule","originalUrl","modifiedUrl","ignoreTrimWhitespace","_getModel","diffComputer_1","identical","_modelsAreIdentical","originalLineCount","computeMoreMinimalEdits","modelUrl","edits","lastEol","edits_1","arrays_1","_diffLimit","editOffset","newEdit","linkComputer_1","textualSuggest","wordDef","wordDefFlags","suggestions","wordDefRegExp","wordUntil","wordAt","_suggestionsLimit","kind","label","computeWordRanges","words_1","selectionText","wordRange","inplaceReplaceSupport_1","loadForeignModule","createData","ctx","getMirrorModels","_getModels","foreignModule","fmr","EditorSimpleWorkerImpl","_models","keys","acceptNewModel","EOL","acceptModelChanged","strURL","acceptRemovedModel","monaco","standaloneBase_1","MonacoEnvironment","monacoBaseUrl","isFirstMessage","beforeReadyMessages","ws","messageHandler","loadCode"],"mappings":"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","file":"workerMain.js","sourcesContent":["}).call(this);","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n/*---------------------------------------------------------------------------------------------\n *---------------------------------------------------------------------------------------------\n *---------------------------------------------------------------------------------------------\n *---------------------------------------------------------------------------------------------\n *---------------------------------------------------------------------------------------------\n * Please make sure to make edits in the .ts file at https://github.com/Microsoft/vscode-loader/\n *---------------------------------------------------------------------------------------------\n *---------------------------------------------------------------------------------------------\n *---------------------------------------------------------------------------------------------\n *---------------------------------------------------------------------------------------------\n *--------------------------------------------------------------------------------------------*/\nvar _amdLoaderGlobal = this;\nvar _commonjsGlobal = typeof global === 'object' ? global : {};\nvar AMDLoader;\n(function (AMDLoader) {\n    AMDLoader.global = _amdLoaderGlobal;\n    var Environment = (function () {\n        function Environment() {\n            this._detected = false;\n            this._isWindows = false;\n            this._isNode = false;\n            this._isElectronRenderer = false;\n            this._isWebWorker = false;\n        }\n        Object.defineProperty(Environment.prototype, \"isWindows\", {\n            get: function () {\n                this._detect();\n                return this._isWindows;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(Environment.prototype, \"isNode\", {\n            get: function () {\n                this._detect();\n                return this._isNode;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(Environment.prototype, \"isElectronRenderer\", {\n            get: function () {\n                this._detect();\n                return this._isElectronRenderer;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(Environment.prototype, \"isWebWorker\", {\n            get: function () {\n                this._detect();\n                return this._isWebWorker;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Environment.prototype._detect = function () {\n            if (this._detected) {\n                return;\n            }\n            this._detected = true;\n            this._isWindows = Environment._isWindows();\n            this._isNode = (typeof module !== 'undefined' && !!module.exports);\n            this._isElectronRenderer = (typeof process !== 'undefined' && typeof process.versions !== 'undefined' && typeof process.versions.electron !== 'undefined' && process.type === 'renderer');\n            this._isWebWorker = (typeof AMDLoader.global.importScripts === 'function');\n        };\n        Environment._isWindows = function () {\n            if (typeof navigator !== 'undefined') {\n                if (navigator.userAgent && navigator.userAgent.indexOf('Windows') >= 0) {\n                    return true;\n                }\n            }\n            if (typeof process !== 'undefined') {\n                return (process.platform === 'win32');\n            }\n            return false;\n        };\n        return Environment;\n    }());\n    AMDLoader.Environment = Environment;\n})(AMDLoader || (AMDLoader = {}));\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar AMDLoader;\n(function (AMDLoader) {\n    var LoaderEvent = (function () {\n        function LoaderEvent(type, detail, timestamp) {\n            this.type = type;\n            this.detail = detail;\n            this.timestamp = timestamp;\n        }\n        return LoaderEvent;\n    }());\n    AMDLoader.LoaderEvent = LoaderEvent;\n    var LoaderEventRecorder = (function () {\n        function LoaderEventRecorder(loaderAvailableTimestamp) {\n            this._events = [new LoaderEvent(1 /* LoaderAvailable */, '', loaderAvailableTimestamp)];\n        }\n        LoaderEventRecorder.prototype.record = function (type, detail) {\n            this._events.push(new LoaderEvent(type, detail, AMDLoader.Utilities.getHighPerformanceTimestamp()));\n        };\n        LoaderEventRecorder.prototype.getEvents = function () {\n            return this._events;\n        };\n        return LoaderEventRecorder;\n    }());\n    AMDLoader.LoaderEventRecorder = LoaderEventRecorder;\n    var NullLoaderEventRecorder = (function () {\n        function NullLoaderEventRecorder() {\n        }\n        NullLoaderEventRecorder.prototype.record = function (type, detail) {\n            // Nothing to do\n        };\n        NullLoaderEventRecorder.prototype.getEvents = function () {\n            return [];\n        };\n        return NullLoaderEventRecorder;\n    }());\n    NullLoaderEventRecorder.INSTANCE = new NullLoaderEventRecorder();\n    AMDLoader.NullLoaderEventRecorder = NullLoaderEventRecorder;\n})(AMDLoader || (AMDLoader = {}));\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar AMDLoader;\n(function (AMDLoader) {\n    var Utilities = (function () {\n        function Utilities() {\n        }\n        /**\n         * This method does not take care of / vs \\\n         */\n        Utilities.fileUriToFilePath = function (isWindows, uri) {\n            uri = decodeURI(uri).replace(/%23/g, '#');\n            if (isWindows) {\n                if (/^file:\\/\\/\\//.test(uri)) {\n                    // This is a URI without a hostname => return only the path segment\n                    return uri.substr(8);\n                }\n                if (/^file:\\/\\//.test(uri)) {\n                    return uri.substr(5);\n                }\n            }\n            else {\n                if (/^file:\\/\\//.test(uri)) {\n                    return uri.substr(7);\n                }\n            }\n            // Not sure...\n            return uri;\n        };\n        Utilities.startsWith = function (haystack, needle) {\n            return haystack.length >= needle.length && haystack.substr(0, needle.length) === needle;\n        };\n        Utilities.endsWith = function (haystack, needle) {\n            return haystack.length >= needle.length && haystack.substr(haystack.length - needle.length) === needle;\n        };\n        // only check for \"?\" before \"#\" to ensure that there is a real Query-String\n        Utilities.containsQueryString = function (url) {\n            return /^[^\\#]*\\?/gi.test(url);\n        };\n        /**\n         * Does `url` start with http:// or https:// or file:// or / ?\n         */\n        Utilities.isAbsolutePath = function (url) {\n            return /^((http:\\/\\/)|(https:\\/\\/)|(file:\\/\\/)|(\\/))/.test(url);\n        };\n        Utilities.forEachProperty = function (obj, callback) {\n            if (obj) {\n                var key = void 0;\n                for (key in obj) {\n                    if (obj.hasOwnProperty(key)) {\n                        callback(key, obj[key]);\n                    }\n                }\n            }\n        };\n        Utilities.isEmpty = function (obj) {\n            var isEmpty = true;\n            Utilities.forEachProperty(obj, function () {\n                isEmpty = false;\n            });\n            return isEmpty;\n        };\n        Utilities.recursiveClone = function (obj) {\n            if (!obj || typeof obj !== 'object') {\n                return obj;\n            }\n            var result = Array.isArray(obj) ? [] : {};\n            Utilities.forEachProperty(obj, function (key, value) {\n                if (value && typeof value === 'object') {\n                    result[key] = Utilities.recursiveClone(value);\n                }\n                else {\n                    result[key] = value;\n                }\n            });\n            return result;\n        };\n        Utilities.generateAnonymousModule = function () {\n            return '===anonymous' + (Utilities.NEXT_ANONYMOUS_ID++) + '===';\n        };\n        Utilities.isAnonymousModule = function (id) {\n            return Utilities.startsWith(id, '===anonymous');\n        };\n        Utilities.getHighPerformanceTimestamp = function () {\n            if (!this.PERFORMANCE_NOW_PROBED) {\n                this.PERFORMANCE_NOW_PROBED = true;\n                this.HAS_PERFORMANCE_NOW = (AMDLoader.global.performance && typeof AMDLoader.global.performance.now === 'function');\n            }\n            return (this.HAS_PERFORMANCE_NOW ? AMDLoader.global.performance.now() : Date.now());\n        };\n        return Utilities;\n    }());\n    Utilities.NEXT_ANONYMOUS_ID = 1;\n    Utilities.PERFORMANCE_NOW_PROBED = false;\n    Utilities.HAS_PERFORMANCE_NOW = false;\n    AMDLoader.Utilities = Utilities;\n})(AMDLoader || (AMDLoader = {}));\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar AMDLoader;\n(function (AMDLoader) {\n    var ConfigurationOptionsUtil = (function () {\n        function ConfigurationOptionsUtil() {\n        }\n        /**\n         * Ensure configuration options make sense\n         */\n        ConfigurationOptionsUtil.validateConfigurationOptions = function (options) {\n            function defaultOnError(err) {\n                if (err.errorCode === 'load') {\n                    console.error('Loading \"' + err.moduleId + '\" failed');\n                    console.error('Detail: ', err.detail);\n                    if (err.detail && err.detail.stack) {\n                        console.error(err.detail.stack);\n                    }\n                    console.error('Here are the modules that depend on it:');\n                    console.error(err.neededBy);\n                    return;\n                }\n                if (err.errorCode === 'factory') {\n                    console.error('The factory method of \"' + err.moduleId + '\" has thrown an exception');\n                    console.error(err.detail);\n                    if (err.detail && err.detail.stack) {\n                        console.error(err.detail.stack);\n                    }\n                    return;\n                }\n            }\n            options = options || {};\n            if (typeof options.baseUrl !== 'string') {\n                options.baseUrl = '';\n            }\n            if (typeof options.isBuild !== 'boolean') {\n                options.isBuild = false;\n            }\n            if (typeof options.paths !== 'object') {\n                options.paths = {};\n            }\n            if (typeof options.config !== 'object') {\n                options.config = {};\n            }\n            if (typeof options.catchError === 'undefined') {\n                options.catchError = false;\n            }\n            if (typeof options.urlArgs !== 'string') {\n                options.urlArgs = '';\n            }\n            if (typeof options.onError !== 'function') {\n                options.onError = defaultOnError;\n            }\n            if (typeof options.ignoreDuplicateModules !== 'object' || !Array.isArray(options.ignoreDuplicateModules)) {\n                options.ignoreDuplicateModules = [];\n            }\n            if (options.baseUrl.length > 0) {\n                if (!AMDLoader.Utilities.endsWith(options.baseUrl, '/')) {\n                    options.baseUrl += '/';\n                }\n            }\n            if (typeof options.cspNonce !== 'string') {\n                options.cspNonce = '';\n            }\n            if (!Array.isArray(options.nodeModules)) {\n                options.nodeModules = [];\n            }\n            if (typeof options.nodeCachedData === 'object') {\n                if (typeof options.nodeCachedData.seed !== 'string') {\n                    options.nodeCachedData.seed = 'seed';\n                }\n                if (typeof options.nodeCachedData.writeDelay !== 'number' || options.nodeCachedData.writeDelay < 0) {\n                    options.nodeCachedData.writeDelay = 1000 * 7;\n                }\n                if (typeof options.nodeCachedData.onData !== 'function') {\n                    options.nodeCachedData.onData = function (err) {\n                        if (err && err.errorCode === 'cachedDataRejected') {\n                            console.warn('Rejected cached data from file: ' + err.path);\n                        }\n                        else if (err && err.errorCode) {\n                            console.error('Problems handling cached data file: ' + err.path);\n                            console.error(err.detail);\n                        }\n                        else if (err) {\n                            console.error(err);\n                        }\n                    };\n                }\n                if (!options.nodeCachedData.path || typeof options.nodeCachedData.path !== 'string') {\n                    options.nodeCachedData.onData('INVALID cached data configuration, \\'path\\' MUST be set');\n                    options.nodeCachedData = undefined;\n                }\n            }\n            return options;\n        };\n        ConfigurationOptionsUtil.mergeConfigurationOptions = function (overwrite, base) {\n            if (overwrite === void 0) { overwrite = null; }\n            if (base === void 0) { base = null; }\n            var result = AMDLoader.Utilities.recursiveClone(base || {});\n            // Merge known properties and overwrite the unknown ones\n            AMDLoader.Utilities.forEachProperty(overwrite, function (key, value) {\n                if (key === 'ignoreDuplicateModules' && typeof result.ignoreDuplicateModules !== 'undefined') {\n                    result.ignoreDuplicateModules = result.ignoreDuplicateModules.concat(value);\n                }\n                else if (key === 'paths' && typeof result.paths !== 'undefined') {\n                    AMDLoader.Utilities.forEachProperty(value, function (key2, value2) { return result.paths[key2] = value2; });\n                }\n                else if (key === 'config' && typeof result.config !== 'undefined') {\n                    AMDLoader.Utilities.forEachProperty(value, function (key2, value2) { return result.config[key2] = value2; });\n                }\n                else {\n                    result[key] = AMDLoader.Utilities.recursiveClone(value);\n                }\n            });\n            return ConfigurationOptionsUtil.validateConfigurationOptions(result);\n        };\n        return ConfigurationOptionsUtil;\n    }());\n    AMDLoader.ConfigurationOptionsUtil = ConfigurationOptionsUtil;\n    var Configuration = (function () {\n        function Configuration(env, options) {\n            this._env = env;\n            this.options = ConfigurationOptionsUtil.mergeConfigurationOptions(options);\n            this._createIgnoreDuplicateModulesMap();\n            this._createNodeModulesMap();\n            this._createSortedPathsRules();\n            if (this.options.baseUrl === '') {\n                if (this.options.nodeRequire && this.options.nodeRequire.main && this.options.nodeRequire.main.filename && this._env.isNode) {\n                    var nodeMain = this.options.nodeRequire.main.filename;\n                    var dirnameIndex = Math.max(nodeMain.lastIndexOf('/'), nodeMain.lastIndexOf('\\\\'));\n                    this.options.baseUrl = nodeMain.substring(0, dirnameIndex + 1);\n                }\n                if (this.options.nodeMain && this._env.isNode) {\n                    var nodeMain = this.options.nodeMain;\n                    var dirnameIndex = Math.max(nodeMain.lastIndexOf('/'), nodeMain.lastIndexOf('\\\\'));\n                    this.options.baseUrl = nodeMain.substring(0, dirnameIndex + 1);\n                }\n            }\n        }\n        Configuration.prototype._createIgnoreDuplicateModulesMap = function () {\n            // Build a map out of the ignoreDuplicateModules array\n            this.ignoreDuplicateModulesMap = {};\n            for (var i = 0; i < this.options.ignoreDuplicateModules.length; i++) {\n                this.ignoreDuplicateModulesMap[this.options.ignoreDuplicateModules[i]] = true;\n            }\n        };\n        Configuration.prototype._createNodeModulesMap = function () {\n            // Build a map out of nodeModules array\n            this.nodeModulesMap = Object.create(null);\n            for (var _i = 0, _a = this.options.nodeModules; _i < _a.length; _i++) {\n                var nodeModule = _a[_i];\n                this.nodeModulesMap[nodeModule] = true;\n            }\n        };\n        Configuration.prototype._createSortedPathsRules = function () {\n            var _this = this;\n            // Create an array our of the paths rules, sorted descending by length to\n            // result in a more specific -> less specific order\n            this.sortedPathsRules = [];\n            AMDLoader.Utilities.forEachProperty(this.options.paths, function (from, to) {\n                if (!Array.isArray(to)) {\n                    _this.sortedPathsRules.push({\n                        from: from,\n                        to: [to]\n                    });\n                }\n                else {\n                    _this.sortedPathsRules.push({\n                        from: from,\n                        to: to\n                    });\n                }\n            });\n            this.sortedPathsRules.sort(function (a, b) {\n                return b.from.length - a.from.length;\n            });\n        };\n        /**\n         * Clone current configuration and overwrite options selectively.\n         * @param options The selective options to overwrite with.\n         * @result A new configuration\n         */\n        Configuration.prototype.cloneAndMerge = function (options) {\n            return new Configuration(this._env, ConfigurationOptionsUtil.mergeConfigurationOptions(options, this.options));\n        };\n        /**\n         * Get current options bag. Useful for passing it forward to plugins.\n         */\n        Configuration.prototype.getOptionsLiteral = function () {\n            return this.options;\n        };\n        Configuration.prototype._applyPaths = function (moduleId) {\n            var pathRule;\n            for (var i = 0, len = this.sortedPathsRules.length; i < len; i++) {\n                pathRule = this.sortedPathsRules[i];\n                if (AMDLoader.Utilities.startsWith(moduleId, pathRule.from)) {\n                    var result = [];\n                    for (var j = 0, lenJ = pathRule.to.length; j < lenJ; j++) {\n                        result.push(pathRule.to[j] + moduleId.substr(pathRule.from.length));\n                    }\n                    return result;\n                }\n            }\n            return [moduleId];\n        };\n        Configuration.prototype._addUrlArgsToUrl = function (url) {\n            if (AMDLoader.Utilities.containsQueryString(url)) {\n                return url + '&' + this.options.urlArgs;\n            }\n            else {\n                return url + '?' + this.options.urlArgs;\n            }\n        };\n        Configuration.prototype._addUrlArgsIfNecessaryToUrl = function (url) {\n            if (this.options.urlArgs) {\n                return this._addUrlArgsToUrl(url);\n            }\n            return url;\n        };\n        Configuration.prototype._addUrlArgsIfNecessaryToUrls = function (urls) {\n            if (this.options.urlArgs) {\n                for (var i = 0, len = urls.length; i < len; i++) {\n                    urls[i] = this._addUrlArgsToUrl(urls[i]);\n                }\n            }\n            return urls;\n        };\n        /**\n         * Transform a module id to a location. Appends .js to module ids\n         */\n        Configuration.prototype.moduleIdToPaths = function (moduleId) {\n            if (this.nodeModulesMap[moduleId] === true) {\n                // This is a node module...\n                if (this.isBuild()) {\n                    // ...and we are at build time, drop it\n                    return ['empty:'];\n                }\n                else {\n                    // ...and at runtime we create a `shortcut`-path\n                    return ['node|' + moduleId];\n                }\n            }\n            var result = moduleId;\n            var results;\n            if (!AMDLoader.Utilities.endsWith(result, '.js') && !AMDLoader.Utilities.isAbsolutePath(result)) {\n                results = this._applyPaths(result);\n                for (var i = 0, len = results.length; i < len; i++) {\n                    if (this.isBuild() && results[i] === 'empty:') {\n                        continue;\n                    }\n                    if (!AMDLoader.Utilities.isAbsolutePath(results[i])) {\n                        results[i] = this.options.baseUrl + results[i];\n                    }\n                    if (!AMDLoader.Utilities.endsWith(results[i], '.js') && !AMDLoader.Utilities.containsQueryString(results[i])) {\n                        results[i] = results[i] + '.js';\n                    }\n                }\n            }\n            else {\n                if (!AMDLoader.Utilities.endsWith(result, '.js') && !AMDLoader.Utilities.containsQueryString(result)) {\n                    result = result + '.js';\n                }\n                results = [result];\n            }\n            return this._addUrlArgsIfNecessaryToUrls(results);\n        };\n        /**\n         * Transform a module id or url to a location.\n         */\n        Configuration.prototype.requireToUrl = function (url) {\n            var result = url;\n            if (!AMDLoader.Utilities.isAbsolutePath(result)) {\n                result = this._applyPaths(result)[0];\n                if (!AMDLoader.Utilities.isAbsolutePath(result)) {\n                    result = this.options.baseUrl + result;\n                }\n            }\n            return this._addUrlArgsIfNecessaryToUrl(result);\n        };\n        /**\n         * Flag to indicate if current execution is as part of a build.\n         */\n        Configuration.prototype.isBuild = function () {\n            return this.options.isBuild;\n        };\n        /**\n         * Test if module `moduleId` is expected to be defined multiple times\n         */\n        Configuration.prototype.isDuplicateMessageIgnoredFor = function (moduleId) {\n            return this.ignoreDuplicateModulesMap.hasOwnProperty(moduleId);\n        };\n        /**\n         * Get the configuration settings for the provided module id\n         */\n        Configuration.prototype.getConfigForModule = function (moduleId) {\n            if (this.options.config) {\n                return this.options.config[moduleId];\n            }\n        };\n        /**\n         * Should errors be caught when executing module factories?\n         */\n        Configuration.prototype.shouldCatchError = function () {\n            return this.options.catchError;\n        };\n        /**\n         * Should statistics be recorded?\n         */\n        Configuration.prototype.shouldRecordStats = function () {\n            return this.options.recordStats;\n        };\n        /**\n         * Forward an error to the error handler.\n         */\n        Configuration.prototype.onError = function (err) {\n            this.options.onError(err);\n        };\n        return Configuration;\n    }());\n    AMDLoader.Configuration = Configuration;\n})(AMDLoader || (AMDLoader = {}));\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar AMDLoader;\n(function (AMDLoader) {\n    /**\n     * Load `scriptSrc` only once (avoid multiple <script> tags)\n     */\n    var OnlyOnceScriptLoader = (function () {\n        function OnlyOnceScriptLoader(env) {\n            this._env = env;\n            this._scriptLoader = null;\n            this._callbackMap = {};\n        }\n        OnlyOnceScriptLoader.prototype.load = function (moduleManager, scriptSrc, callback, errorback) {\n            var _this = this;\n            if (!this._scriptLoader) {\n                this._scriptLoader = (this._env.isWebWorker\n                    ? new WorkerScriptLoader()\n                    : this._env.isNode\n                        ? new NodeScriptLoader(this._env)\n                        : new BrowserScriptLoader());\n            }\n            var scriptCallbacks = {\n                callback: callback,\n                errorback: errorback\n            };\n            if (this._callbackMap.hasOwnProperty(scriptSrc)) {\n                this._callbackMap[scriptSrc].push(scriptCallbacks);\n                return;\n            }\n            this._callbackMap[scriptSrc] = [scriptCallbacks];\n            this._scriptLoader.load(moduleManager, scriptSrc, function () { return _this.triggerCallback(scriptSrc); }, function (err) { return _this.triggerErrorback(scriptSrc, err); });\n        };\n        OnlyOnceScriptLoader.prototype.triggerCallback = function (scriptSrc) {\n            var scriptCallbacks = this._callbackMap[scriptSrc];\n            delete this._callbackMap[scriptSrc];\n            for (var i = 0; i < scriptCallbacks.length; i++) {\n                scriptCallbacks[i].callback();\n            }\n        };\n        OnlyOnceScriptLoader.prototype.triggerErrorback = function (scriptSrc, err) {\n            var scriptCallbacks = this._callbackMap[scriptSrc];\n            delete this._callbackMap[scriptSrc];\n            for (var i = 0; i < scriptCallbacks.length; i++) {\n                scriptCallbacks[i].errorback(err);\n            }\n        };\n        return OnlyOnceScriptLoader;\n    }());\n    var BrowserScriptLoader = (function () {\n        function BrowserScriptLoader() {\n        }\n        /**\n         * Attach load / error listeners to a script element and remove them when either one has fired.\n         * Implemented for browssers supporting HTML5 standard 'load' and 'error' events.\n         */\n        BrowserScriptLoader.prototype.attachListeners = function (script, callback, errorback) {\n            var unbind = function () {\n                script.removeEventListener('load', loadEventListener);\n                script.removeEventListener('error', errorEventListener);\n            };\n            var loadEventListener = function (e) {\n                unbind();\n                callback();\n            };\n            var errorEventListener = function (e) {\n                unbind();\n                errorback(e);\n            };\n            script.addEventListener('load', loadEventListener);\n            script.addEventListener('error', errorEventListener);\n        };\n        BrowserScriptLoader.prototype.load = function (moduleManager, scriptSrc, callback, errorback) {\n            var script = document.createElement('script');\n            script.setAttribute('async', 'async');\n            script.setAttribute('type', 'text/javascript');\n            this.attachListeners(script, callback, errorback);\n            script.setAttribute('src', scriptSrc);\n            // Propagate CSP nonce to dynamically created script tag.\n            var cspNonce = moduleManager.getConfig().getOptionsLiteral().cspNonce;\n            if (cspNonce) {\n                script.setAttribute('nonce', cspNonce);\n            }\n            document.getElementsByTagName('head')[0].appendChild(script);\n        };\n        return BrowserScriptLoader;\n    }());\n    var WorkerScriptLoader = (function () {\n        function WorkerScriptLoader() {\n        }\n        WorkerScriptLoader.prototype.load = function (moduleManager, scriptSrc, callback, errorback) {\n            try {\n                importScripts(scriptSrc);\n                callback();\n            }\n            catch (e) {\n                errorback(e);\n            }\n        };\n        return WorkerScriptLoader;\n    }());\n    var NodeScriptLoader = (function () {\n        function NodeScriptLoader(env) {\n            this._env = env;\n            this._didInitialize = false;\n            this._didPatchNodeRequire = false;\n            this._hasCreateCachedData = false;\n        }\n        NodeScriptLoader.prototype._init = function (nodeRequire) {\n            if (this._didInitialize) {\n                return;\n            }\n            this._didInitialize = true;\n            // capture node modules\n            this._fs = nodeRequire('fs');\n            this._vm = nodeRequire('vm');\n            this._path = nodeRequire('path');\n            this._crypto = nodeRequire('crypto');\n            // check for `createCachedData`-api\n            this._hasCreateCachedData = typeof (new this._vm.Script('').createCachedData) === 'function';\n        };\n        // patch require-function of nodejs such that we can manually create a script\n        // from cached data. this is done by overriding the `Module._compile` function\n        NodeScriptLoader.prototype._initNodeRequire = function (nodeRequire, moduleManager) {\n            var nodeCachedData = moduleManager.getConfig().getOptionsLiteral().nodeCachedData;\n            if (!nodeCachedData || this._didPatchNodeRequire) {\n                return;\n            }\n            this._didPatchNodeRequire = true;\n            var that = this;\n            var Module = nodeRequire('module');\n            function makeRequireFunction(mod) {\n                var Module = mod.constructor;\n                var require = function require(path) {\n                    try {\n                        return mod.require(path);\n                    }\n                    finally {\n                        // nothing\n                    }\n                };\n                require.resolve = function resolve(request) {\n                    return Module._resolveFilename(request, mod);\n                };\n                require.main = process.mainModule;\n                require.extensions = Module._extensions;\n                require.cache = Module._cache;\n                return require;\n            }\n            Module.prototype._compile = function (content, filename) {\n                // remove shebang\n                content = content.replace(/^#!.*/, '');\n                // create wrapper function\n                var wrapper = Module.wrap(content);\n                var cachedDataPath = that._getCachedDataPath(nodeCachedData.seed, nodeCachedData.path, filename);\n                var options = { filename: filename };\n                try {\n                    options.cachedData = that._fs.readFileSync(cachedDataPath);\n                }\n                catch (e) {\n                    options.produceCachedData = !that._hasCreateCachedData;\n                }\n                var script = new that._vm.Script(wrapper, options);\n                var compileWrapper = script.runInThisContext(options);\n                var dirname = that._path.dirname(filename);\n                var require = makeRequireFunction(this);\n                var args = [this.exports, require, this, filename, dirname, process, _commonjsGlobal, Buffer];\n                var result = compileWrapper.apply(this.exports, args);\n                that._processCachedData(moduleManager, script, wrapper, cachedDataPath, !options.cachedData);\n                return result;\n            };\n        };\n        NodeScriptLoader.prototype.load = function (moduleManager, scriptSrc, callback, errorback) {\n            var _this = this;\n            var opts = moduleManager.getConfig().getOptionsLiteral();\n            var nodeRequire = (opts.nodeRequire || AMDLoader.global.nodeRequire);\n            var nodeInstrumenter = (opts.nodeInstrumenter || function (c) { return c; });\n            this._init(nodeRequire);\n            this._initNodeRequire(nodeRequire, moduleManager);\n            var recorder = moduleManager.getRecorder();\n            if (/^node\\|/.test(scriptSrc)) {\n                var pieces = scriptSrc.split('|');\n                var moduleExports_1 = null;\n                try {\n                    moduleExports_1 = nodeRequire(pieces[1]);\n                }\n                catch (err) {\n                    errorback(err);\n                    return;\n                }\n                moduleManager.enqueueDefineAnonymousModule([], function () { return moduleExports_1; });\n                callback();\n            }\n            else {\n                scriptSrc = AMDLoader.Utilities.fileUriToFilePath(this._env.isWindows, scriptSrc);\n                this._fs.readFile(scriptSrc, { encoding: 'utf8' }, function (err, data) {\n                    if (err) {\n                        errorback(err);\n                        return;\n                    }\n                    var normalizedScriptSrc = _this._path.normalize(scriptSrc);\n                    var vmScriptSrc = normalizedScriptSrc;\n                    // Make the script src friendly towards electron\n                    if (_this._env.isElectronRenderer) {\n                        var driveLetterMatch = vmScriptSrc.match(/^([a-z])\\:(.*)/i);\n                        if (driveLetterMatch) {\n                            // windows\n                            vmScriptSrc = \"file:///\" + (driveLetterMatch[1].toUpperCase() + ':' + driveLetterMatch[2]).replace(/\\\\/g, '/');\n                        }\n                        else {\n                            // nix\n                            vmScriptSrc = \"file://\" + vmScriptSrc;\n                        }\n                    }\n                    var contents, prefix = '(function (require, define, __filename, __dirname) { ', suffix = '\\n});';\n                    if (data.charCodeAt(0) === NodeScriptLoader._BOM) {\n                        contents = prefix + data.substring(1) + suffix;\n                    }\n                    else {\n                        contents = prefix + data + suffix;\n                    }\n                    contents = nodeInstrumenter(contents, normalizedScriptSrc);\n                    if (!opts.nodeCachedData) {\n                        _this._loadAndEvalScript(moduleManager, scriptSrc, vmScriptSrc, contents, { filename: vmScriptSrc }, recorder, callback, errorback);\n                    }\n                    else {\n                        var cachedDataPath_1 = _this._getCachedDataPath(opts.nodeCachedData.seed, opts.nodeCachedData.path, scriptSrc);\n                        _this._fs.readFile(cachedDataPath_1, function (_err, cachedData) {\n                            // create script options\n                            var options = {\n                                filename: vmScriptSrc,\n                                produceCachedData: !_this._hasCreateCachedData && typeof cachedData === 'undefined',\n                                cachedData: cachedData\n                            };\n                            var script = _this._loadAndEvalScript(moduleManager, scriptSrc, vmScriptSrc, contents, options, recorder, callback, errorback);\n                            _this._processCachedData(moduleManager, script, contents, cachedDataPath_1, !options.cachedData);\n                        });\n                    }\n                });\n            }\n        };\n        NodeScriptLoader.prototype._loadAndEvalScript = function (moduleManager, scriptSrc, vmScriptSrc, contents, options, recorder, callback, errorback) {\n            // create script, run script\n            recorder.record(31 /* NodeBeginEvaluatingScript */, scriptSrc);\n            var script = new this._vm.Script(contents, options);\n            var r = script.runInThisContext(options);\n            var globalDefineFunc = moduleManager.getGlobalAMDDefineFunc();\n            var receivedDefineCall = false;\n            var localDefineFunc = function () {\n                receivedDefineCall = true;\n                return globalDefineFunc.apply(null, arguments);\n            };\n            localDefineFunc.amd = globalDefineFunc.amd;\n            r.call(AMDLoader.global, moduleManager.getGlobalAMDRequireFunc(), localDefineFunc, vmScriptSrc, this._path.dirname(scriptSrc));\n            // signal done\n            recorder.record(32 /* NodeEndEvaluatingScript */, scriptSrc);\n            if (receivedDefineCall) {\n                callback();\n            }\n            else {\n                errorback(new Error(\"Didn't receive define call in \" + scriptSrc + \"!\"));\n            }\n            return script;\n        };\n        NodeScriptLoader.prototype._getCachedDataPath = function (seed, basedir, filename) {\n            var hash = this._crypto.createHash('md5').update(filename, 'utf8').update(seed, 'utf8').digest('hex');\n            var basename = this._path.basename(filename).replace(/\\.js$/, '');\n            return this._path.join(basedir, basename + \"-\" + hash + \".code\");\n        };\n        NodeScriptLoader.prototype._processCachedData = function (moduleManager, script, contents, cachedDataPath, createCachedData) {\n            var _this = this;\n            if (script.cachedDataRejected) {\n                // data rejected => delete cache file\n                moduleManager.getConfig().getOptionsLiteral().nodeCachedData.onData({\n                    errorCode: 'cachedDataRejected',\n                    path: cachedDataPath\n                });\n                NodeScriptLoader._runSoon(function () {\n                    return _this._fs.unlink(cachedDataPath, function (err) {\n                        if (err) {\n                            moduleManager.getConfig().getOptionsLiteral().nodeCachedData.onData({\n                                errorCode: 'unlink',\n                                path: cachedDataPath,\n                                detail: err\n                            });\n                        }\n                    });\n                }, moduleManager.getConfig().getOptionsLiteral().nodeCachedData.writeDelay / 2);\n            }\n            else if (script.cachedDataProduced) {\n                // data produced => tell outside world\n                moduleManager.getConfig().getOptionsLiteral().nodeCachedData.onData(undefined, {\n                    path: cachedDataPath\n                });\n                // data produced => write cache file\n                NodeScriptLoader._runSoon(function () {\n                    return _this._fs.writeFile(cachedDataPath, script.cachedData, function (err) {\n                        if (err) {\n                            moduleManager.getConfig().getOptionsLiteral().nodeCachedData.onData({\n                                errorCode: 'writeFile',\n                                path: cachedDataPath,\n                                detail: err\n                            });\n                        }\n                    });\n                }, moduleManager.getConfig().getOptionsLiteral().nodeCachedData.writeDelay);\n            }\n            else if (this._hasCreateCachedData && createCachedData) {\n                // NEW world\n                // data produced => tell outside world\n                moduleManager.getConfig().getOptionsLiteral().nodeCachedData.onData(undefined, {\n                    path: cachedDataPath\n                });\n                // soon'ish create and save cached data\n                NodeScriptLoader._runSoon(function () {\n                    var data = script.createCachedData(contents);\n                    _this._fs.writeFile(cachedDataPath, data, function (err) {\n                        if (!err) {\n                            return;\n                        }\n                        moduleManager.getConfig().getOptionsLiteral().nodeCachedData.onData({\n                            errorCode: 'writeFile',\n                            path: cachedDataPath,\n                            detail: err\n                        });\n                    });\n                }, moduleManager.getConfig().getOptionsLiteral().nodeCachedData.writeDelay);\n            }\n        };\n        NodeScriptLoader._runSoon = function (callback, minTimeout) {\n            var timeout = minTimeout + Math.ceil(Math.random() * minTimeout);\n            setTimeout(callback, timeout);\n        };\n        return NodeScriptLoader;\n    }());\n    NodeScriptLoader._BOM = 0xFEFF;\n    function createScriptLoader(env) {\n        return new OnlyOnceScriptLoader(env);\n    }\n    AMDLoader.createScriptLoader = createScriptLoader;\n})(AMDLoader || (AMDLoader = {}));\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar AMDLoader;\n(function (AMDLoader) {\n    // ------------------------------------------------------------------------\n    // ModuleIdResolver\n    var ModuleIdResolver = (function () {\n        function ModuleIdResolver(fromModuleId) {\n            var lastSlash = fromModuleId.lastIndexOf('/');\n            if (lastSlash !== -1) {\n                this.fromModulePath = fromModuleId.substr(0, lastSlash + 1);\n            }\n            else {\n                this.fromModulePath = '';\n            }\n        }\n        /**\n         * Normalize 'a/../name' to 'name', etc.\n         */\n        ModuleIdResolver._normalizeModuleId = function (moduleId) {\n            var r = moduleId, pattern;\n            // replace /./ => /\n            pattern = /\\/\\.\\//;\n            while (pattern.test(r)) {\n                r = r.replace(pattern, '/');\n            }\n            // replace ^./ => nothing\n            r = r.replace(/^\\.\\//g, '');\n            // replace /aa/../ => / (BUT IGNORE /../../)\n            pattern = /\\/(([^\\/])|([^\\/][^\\/\\.])|([^\\/\\.][^\\/])|([^\\/][^\\/][^\\/]+))\\/\\.\\.\\//;\n            while (pattern.test(r)) {\n                r = r.replace(pattern, '/');\n            }\n            // replace ^aa/../ => nothing (BUT IGNORE ../../)\n            r = r.replace(/^(([^\\/])|([^\\/][^\\/\\.])|([^\\/\\.][^\\/])|([^\\/][^\\/][^\\/]+))\\/\\.\\.\\//, '');\n            return r;\n        };\n        /**\n         * Resolve relative module ids\n         */\n        ModuleIdResolver.prototype.resolveModule = function (moduleId) {\n            var result = moduleId;\n            if (!AMDLoader.Utilities.isAbsolutePath(result)) {\n                if (AMDLoader.Utilities.startsWith(result, './') || AMDLoader.Utilities.startsWith(result, '../')) {\n                    result = ModuleIdResolver._normalizeModuleId(this.fromModulePath + result);\n                }\n            }\n            return result;\n        };\n        return ModuleIdResolver;\n    }());\n    ModuleIdResolver.ROOT = new ModuleIdResolver('');\n    AMDLoader.ModuleIdResolver = ModuleIdResolver;\n    // ------------------------------------------------------------------------\n    // Module\n    var Module = (function () {\n        function Module(id, strId, dependencies, callback, errorback, moduleIdResolver) {\n            this.id = id;\n            this.strId = strId;\n            this.dependencies = dependencies;\n            this._callback = callback;\n            this._errorback = errorback;\n            this.moduleIdResolver = moduleIdResolver;\n            this.exports = {};\n            this.exportsPassedIn = false;\n            this.unresolvedDependenciesCount = this.dependencies.length;\n            this._isComplete = false;\n        }\n        Module._safeInvokeFunction = function (callback, args) {\n            try {\n                return {\n                    returnedValue: callback.apply(AMDLoader.global, args),\n                    producedError: null\n                };\n            }\n            catch (e) {\n                return {\n                    returnedValue: null,\n                    producedError: e\n                };\n            }\n        };\n        Module._invokeFactory = function (config, strModuleId, callback, dependenciesValues) {\n            if (config.isBuild() && !AMDLoader.Utilities.isAnonymousModule(strModuleId)) {\n                return {\n                    returnedValue: null,\n                    producedError: null\n                };\n            }\n            if (config.shouldCatchError()) {\n                return this._safeInvokeFunction(callback, dependenciesValues);\n            }\n            return {\n                returnedValue: callback.apply(AMDLoader.global, dependenciesValues),\n                producedError: null\n            };\n        };\n        Module.prototype.complete = function (recorder, config, dependenciesValues) {\n            this._isComplete = true;\n            var producedError = null;\n            if (this._callback) {\n                if (typeof this._callback === 'function') {\n                    recorder.record(21 /* BeginInvokeFactory */, this.strId);\n                    var r = Module._invokeFactory(config, this.strId, this._callback, dependenciesValues);\n                    producedError = r.producedError;\n                    recorder.record(22 /* EndInvokeFactory */, this.strId);\n                    if (!producedError && typeof r.returnedValue !== 'undefined' && (!this.exportsPassedIn || AMDLoader.Utilities.isEmpty(this.exports))) {\n                        this.exports = r.returnedValue;\n                    }\n                }\n                else {\n                    this.exports = this._callback;\n                }\n            }\n            if (producedError) {\n                config.onError({\n                    errorCode: 'factory',\n                    moduleId: this.strId,\n                    detail: producedError\n                });\n            }\n            this.dependencies = null;\n            this._callback = null;\n            this._errorback = null;\n            this.moduleIdResolver = null;\n        };\n        /**\n         * One of the direct dependencies or a transitive dependency has failed to load.\n         */\n        Module.prototype.onDependencyError = function (err) {\n            if (this._errorback) {\n                this._errorback(err);\n                return true;\n            }\n            return false;\n        };\n        /**\n         * Is the current module complete?\n         */\n        Module.prototype.isComplete = function () {\n            return this._isComplete;\n        };\n        return Module;\n    }());\n    AMDLoader.Module = Module;\n    var ModuleIdProvider = (function () {\n        function ModuleIdProvider() {\n            this._nextId = 0;\n            this._strModuleIdToIntModuleId = new Map();\n            this._intModuleIdToStrModuleId = [];\n            // Ensure values 0, 1, 2 are assigned accordingly with ModuleId\n            this.getModuleId('exports');\n            this.getModuleId('module');\n            this.getModuleId('require');\n        }\n        ModuleIdProvider.prototype.getMaxModuleId = function () {\n            return this._nextId;\n        };\n        ModuleIdProvider.prototype.getModuleId = function (strModuleId) {\n            var id = this._strModuleIdToIntModuleId.get(strModuleId);\n            if (typeof id === 'undefined') {\n                id = this._nextId++;\n                this._strModuleIdToIntModuleId.set(strModuleId, id);\n                this._intModuleIdToStrModuleId[id] = strModuleId;\n            }\n            return id;\n        };\n        ModuleIdProvider.prototype.getStrModuleId = function (moduleId) {\n            return this._intModuleIdToStrModuleId[moduleId];\n        };\n        return ModuleIdProvider;\n    }());\n    var RegularDependency = (function () {\n        function RegularDependency(id) {\n            this.id = id;\n        }\n        return RegularDependency;\n    }());\n    RegularDependency.EXPORTS = new RegularDependency(0 /* EXPORTS */);\n    RegularDependency.MODULE = new RegularDependency(1 /* MODULE */);\n    RegularDependency.REQUIRE = new RegularDependency(2 /* REQUIRE */);\n    AMDLoader.RegularDependency = RegularDependency;\n    var PluginDependency = (function () {\n        function PluginDependency(id, pluginId, pluginParam) {\n            this.id = id;\n            this.pluginId = pluginId;\n            this.pluginParam = pluginParam;\n        }\n        return PluginDependency;\n    }());\n    AMDLoader.PluginDependency = PluginDependency;\n    var ModuleManager = (function () {\n        function ModuleManager(env, scriptLoader, defineFunc, requireFunc, loaderAvailableTimestamp) {\n            if (loaderAvailableTimestamp === void 0) { loaderAvailableTimestamp = 0; }\n            this._env = env;\n            this._scriptLoader = scriptLoader;\n            this._loaderAvailableTimestamp = loaderAvailableTimestamp;\n            this._defineFunc = defineFunc;\n            this._requireFunc = requireFunc;\n            this._moduleIdProvider = new ModuleIdProvider();\n            this._config = new AMDLoader.Configuration(this._env);\n            this._modules2 = [];\n            this._knownModules2 = [];\n            this._inverseDependencies2 = [];\n            this._inversePluginDependencies2 = new Map();\n            this._currentAnnonymousDefineCall = null;\n            this._recorder = null;\n            this._buildInfoPath = [];\n            this._buildInfoDefineStack = [];\n            this._buildInfoDependencies = [];\n        }\n        ModuleManager.prototype.reset = function () {\n            return new ModuleManager(this._env, this._scriptLoader, this._defineFunc, this._requireFunc, this._loaderAvailableTimestamp);\n        };\n        ModuleManager.prototype.getGlobalAMDDefineFunc = function () {\n            return this._defineFunc;\n        };\n        ModuleManager.prototype.getGlobalAMDRequireFunc = function () {\n            return this._requireFunc;\n        };\n        ModuleManager._findRelevantLocationInStack = function (needle, stack) {\n            var normalize = function (str) { return str.replace(/\\\\/g, '/'); };\n            var normalizedPath = normalize(needle);\n            var stackPieces = stack.split(/\\n/);\n            for (var i = 0; i < stackPieces.length; i++) {\n                var m = stackPieces[i].match(/(.*):(\\d+):(\\d+)\\)?$/);\n                if (m) {\n                    var stackPath = m[1];\n                    var stackLine = m[2];\n                    var stackColumn = m[3];\n                    var trimPathOffset = Math.max(stackPath.lastIndexOf(' ') + 1, stackPath.lastIndexOf('(') + 1);\n                    stackPath = stackPath.substr(trimPathOffset);\n                    stackPath = normalize(stackPath);\n                    if (stackPath === normalizedPath) {\n                        var r = {\n                            line: parseInt(stackLine, 10),\n                            col: parseInt(stackColumn, 10)\n                        };\n                        if (r.line === 1) {\n                            r.col -= '(function (require, define, __filename, __dirname) { '.length;\n                        }\n                        return r;\n                    }\n                }\n            }\n            throw new Error('Could not correlate define call site for needle ' + needle);\n        };\n        ModuleManager.prototype.getBuildInfo = function () {\n            if (!this._config.isBuild()) {\n                return null;\n            }\n            var result = [], resultLen = 0;\n            for (var i = 0, len = this._modules2.length; i < len; i++) {\n                var m = this._modules2[i];\n                if (!m) {\n                    continue;\n                }\n                var location_1 = this._buildInfoPath[m.id] || null;\n                var defineStack = this._buildInfoDefineStack[m.id] || null;\n                var dependencies = this._buildInfoDependencies[m.id];\n                result[resultLen++] = {\n                    id: m.strId,\n                    path: location_1,\n                    defineLocation: (location_1 && defineStack ? ModuleManager._findRelevantLocationInStack(location_1, defineStack) : null),\n                    dependencies: dependencies,\n                    shim: null,\n                    exports: m.exports\n                };\n            }\n            return result;\n        };\n        ModuleManager.prototype.getRecorder = function () {\n            if (!this._recorder) {\n                if (this._config.shouldRecordStats()) {\n                    this._recorder = new AMDLoader.LoaderEventRecorder(this._loaderAvailableTimestamp);\n                }\n                else {\n                    this._recorder = AMDLoader.NullLoaderEventRecorder.INSTANCE;\n                }\n            }\n            return this._recorder;\n        };\n        ModuleManager.prototype.getLoaderEvents = function () {\n            return this.getRecorder().getEvents();\n        };\n        /**\n         * Defines an anonymous module (without an id). Its name will be resolved as we receive a callback from the scriptLoader.\n         * @param dependecies @see defineModule\n         * @param callback @see defineModule\n         */\n        ModuleManager.prototype.enqueueDefineAnonymousModule = function (dependencies, callback) {\n            if (this._currentAnnonymousDefineCall !== null) {\n                throw new Error('Can only have one anonymous define call per script file');\n            }\n            var stack = null;\n            if (this._config.isBuild()) {\n                stack = new Error('StackLocation').stack;\n            }\n            this._currentAnnonymousDefineCall = {\n                stack: stack,\n                dependencies: dependencies,\n                callback: callback\n            };\n        };\n        /**\n         * Creates a module and stores it in _modules. The manager will immediately begin resolving its dependencies.\n         * @param strModuleId An unique and absolute id of the module. This must not collide with another module's id\n         * @param dependencies An array with the dependencies of the module. Special keys are: \"require\", \"exports\" and \"module\"\n         * @param callback if callback is a function, it will be called with the resolved dependencies. if callback is an object, it will be considered as the exports of the module.\n         */\n        ModuleManager.prototype.defineModule = function (strModuleId, dependencies, callback, errorback, stack, moduleIdResolver) {\n            var _this = this;\n            if (moduleIdResolver === void 0) { moduleIdResolver = new ModuleIdResolver(strModuleId); }\n            var moduleId = this._moduleIdProvider.getModuleId(strModuleId);\n            if (this._modules2[moduleId]) {\n                if (!this._config.isDuplicateMessageIgnoredFor(strModuleId)) {\n                    console.warn('Duplicate definition of module \\'' + strModuleId + '\\'');\n                }\n                // Super important! Completely ignore duplicate module definition\n                return;\n            }\n            var m = new Module(moduleId, strModuleId, this._normalizeDependencies(dependencies, moduleIdResolver), callback, errorback, moduleIdResolver);\n            this._modules2[moduleId] = m;\n            if (this._config.isBuild()) {\n                this._buildInfoDefineStack[moduleId] = stack;\n                this._buildInfoDependencies[moduleId] = m.dependencies.map(function (dep) { return _this._moduleIdProvider.getStrModuleId(dep.id); });\n            }\n            // Resolving of dependencies is immediate (not in a timeout). If there's a need to support a packer that concatenates in an\n            // unordered manner, in order to finish processing the file, execute the following method in a timeout\n            this._resolve(m);\n        };\n        ModuleManager.prototype._normalizeDependency = function (dependency, moduleIdResolver) {\n            if (dependency === 'exports') {\n                return RegularDependency.EXPORTS;\n            }\n            if (dependency === 'module') {\n                return RegularDependency.MODULE;\n            }\n            if (dependency === 'require') {\n                return RegularDependency.REQUIRE;\n            }\n            // Normalize dependency and then request it from the manager\n            var bangIndex = dependency.indexOf('!');\n            if (bangIndex >= 0) {\n                var strPluginId = moduleIdResolver.resolveModule(dependency.substr(0, bangIndex));\n                var pluginParam = moduleIdResolver.resolveModule(dependency.substr(bangIndex + 1));\n                var dependencyId = this._moduleIdProvider.getModuleId(strPluginId + '!' + pluginParam);\n                var pluginId = this._moduleIdProvider.getModuleId(strPluginId);\n                return new PluginDependency(dependencyId, pluginId, pluginParam);\n            }\n            return new RegularDependency(this._moduleIdProvider.getModuleId(moduleIdResolver.resolveModule(dependency)));\n        };\n        ModuleManager.prototype._normalizeDependencies = function (dependencies, moduleIdResolver) {\n            var result = [], resultLen = 0;\n            for (var i = 0, len = dependencies.length; i < len; i++) {\n                result[resultLen++] = this._normalizeDependency(dependencies[i], moduleIdResolver);\n            }\n            return result;\n        };\n        ModuleManager.prototype._relativeRequire = function (moduleIdResolver, dependencies, callback, errorback) {\n            if (typeof dependencies === 'string') {\n                return this.synchronousRequire(dependencies, moduleIdResolver);\n            }\n            this.defineModule(AMDLoader.Utilities.generateAnonymousModule(), dependencies, callback, errorback, null, moduleIdResolver);\n        };\n        /**\n         * Require synchronously a module by its absolute id. If the module is not loaded, an exception will be thrown.\n         * @param id The unique and absolute id of the required module\n         * @return The exports of module 'id'\n         */\n        ModuleManager.prototype.synchronousRequire = function (_strModuleId, moduleIdResolver) {\n            if (moduleIdResolver === void 0) { moduleIdResolver = new ModuleIdResolver(_strModuleId); }\n            var dependency = this._normalizeDependency(_strModuleId, moduleIdResolver);\n            var m = this._modules2[dependency.id];\n            if (!m) {\n                throw new Error('Check dependency list! Synchronous require cannot resolve module \\'' + _strModuleId + '\\'. This is the first mention of this module!');\n            }\n            if (!m.isComplete()) {\n                throw new Error('Check dependency list! Synchronous require cannot resolve module \\'' + _strModuleId + '\\'. This module has not been resolved completely yet.');\n            }\n            return m.exports;\n        };\n        ModuleManager.prototype.configure = function (params, shouldOverwrite) {\n            var oldShouldRecordStats = this._config.shouldRecordStats();\n            if (shouldOverwrite) {\n                this._config = new AMDLoader.Configuration(this._env, params);\n            }\n            else {\n                this._config = this._config.cloneAndMerge(params);\n            }\n            if (this._config.shouldRecordStats() && !oldShouldRecordStats) {\n                this._recorder = null;\n            }\n        };\n        ModuleManager.prototype.getConfig = function () {\n            return this._config;\n        };\n        /**\n         * Callback from the scriptLoader when a module has been loaded.\n         * This means its code is available and has been executed.\n         */\n        ModuleManager.prototype._onLoad = function (moduleId) {\n            if (this._currentAnnonymousDefineCall !== null) {\n                var defineCall = this._currentAnnonymousDefineCall;\n                this._currentAnnonymousDefineCall = null;\n                // Hit an anonymous define call\n                this.defineModule(this._moduleIdProvider.getStrModuleId(moduleId), defineCall.dependencies, defineCall.callback, null, defineCall.stack);\n            }\n        };\n        ModuleManager.prototype._createLoadError = function (moduleId, err) {\n            var _this = this;\n            var strModuleId = this._moduleIdProvider.getStrModuleId(moduleId);\n            var neededBy = (this._inverseDependencies2[moduleId] || []).map(function (intModuleId) { return _this._moduleIdProvider.getStrModuleId(intModuleId); });\n            return {\n                errorCode: 'load',\n                moduleId: strModuleId,\n                neededBy: neededBy,\n                detail: err\n            };\n        };\n        /**\n         * Callback from the scriptLoader when a module hasn't been loaded.\n         * This means that the script was not found (e.g. 404) or there was an error in the script.\n         */\n        ModuleManager.prototype._onLoadError = function (moduleId, err) {\n            var error = this._createLoadError(moduleId, err);\n            // Find any 'local' error handlers, walk the entire chain of inverse dependencies if necessary.\n            var seenModuleId = [];\n            for (var i = 0, len = this._moduleIdProvider.getMaxModuleId(); i < len; i++) {\n                seenModuleId[i] = false;\n            }\n            var someoneNotified = false;\n            var queue = [];\n            queue.push(moduleId);\n            seenModuleId[moduleId] = true;\n            while (queue.length > 0) {\n                var queueElement = queue.shift();\n                var m = this._modules2[queueElement];\n                if (m) {\n                    someoneNotified = m.onDependencyError(error) || someoneNotified;\n                }\n                var inverseDeps = this._inverseDependencies2[queueElement];\n                if (inverseDeps) {\n                    for (var i = 0, len = inverseDeps.length; i < len; i++) {\n                        var inverseDep = inverseDeps[i];\n                        if (!seenModuleId[inverseDep]) {\n                            queue.push(inverseDep);\n                            seenModuleId[inverseDep] = true;\n                        }\n                    }\n                }\n            }\n            if (!someoneNotified) {\n                this._config.onError(error);\n            }\n        };\n        /**\n         * Walks (recursively) the dependencies of 'from' in search of 'to'.\n         * Returns true if there is such a path or false otherwise.\n         * @param from Module id to start at\n         * @param to Module id to look for\n         */\n        ModuleManager.prototype._hasDependencyPath = function (fromId, toId) {\n            var from = this._modules2[fromId];\n            if (!from) {\n                return false;\n            }\n            var inQueue = [];\n            for (var i = 0, len = this._moduleIdProvider.getMaxModuleId(); i < len; i++) {\n                inQueue[i] = false;\n            }\n            var queue = [];\n            // Insert 'from' in queue\n            queue.push(from);\n            inQueue[fromId] = true;\n            while (queue.length > 0) {\n                // Pop first inserted element of queue\n                var element = queue.shift();\n                var dependencies = element.dependencies;\n                if (dependencies) {\n                    // Walk the element's dependencies\n                    for (var i = 0, len = dependencies.length; i < len; i++) {\n                        var dependency = dependencies[i];\n                        if (dependency.id === toId) {\n                            // There is a path to 'to'\n                            return true;\n                        }\n                        var dependencyModule = this._modules2[dependency.id];\n                        if (dependencyModule && !inQueue[dependency.id]) {\n                            // Insert 'dependency' in queue\n                            inQueue[dependency.id] = true;\n                            queue.push(dependencyModule);\n                        }\n                    }\n                }\n            }\n            // There is no path to 'to'\n            return false;\n        };\n        /**\n         * Walks (recursively) the dependencies of 'from' in search of 'to'.\n         * Returns cycle as array.\n         * @param from Module id to start at\n         * @param to Module id to look for\n         */\n        ModuleManager.prototype._findCyclePath = function (fromId, toId, depth) {\n            if (fromId === toId || depth === 50) {\n                return [fromId];\n            }\n            var from = this._modules2[fromId];\n            if (!from) {\n                return null;\n            }\n            // Walk the element's dependencies\n            var dependencies = from.dependencies;\n            for (var i = 0, len = dependencies.length; i < len; i++) {\n                var path = this._findCyclePath(dependencies[i].id, toId, depth + 1);\n                if (path !== null) {\n                    path.push(fromId);\n                    return path;\n                }\n            }\n            return null;\n        };\n        /**\n         * Create the local 'require' that is passed into modules\n         */\n        ModuleManager.prototype._createRequire = function (moduleIdResolver) {\n            var _this = this;\n            var result = (function (dependencies, callback, errorback) {\n                return _this._relativeRequire(moduleIdResolver, dependencies, callback, errorback);\n            });\n            result.toUrl = function (id) {\n                return _this._config.requireToUrl(moduleIdResolver.resolveModule(id));\n            };\n            result.getStats = function () {\n                return _this.getLoaderEvents();\n            };\n            result.__$__nodeRequire = AMDLoader.global.nodeRequire;\n            return result;\n        };\n        ModuleManager.prototype._loadModule = function (moduleId) {\n            var _this = this;\n            if (this._modules2[moduleId] || this._knownModules2[moduleId]) {\n                // known module\n                return;\n            }\n            this._knownModules2[moduleId] = true;\n            var strModuleId = this._moduleIdProvider.getStrModuleId(moduleId);\n            var paths = this._config.moduleIdToPaths(strModuleId);\n            var scopedPackageRegex = /^@[^\\/]+\\/[^\\/]+$/; // matches @scope/package-name\n            if (this._env.isNode && (strModuleId.indexOf('/') === -1 || scopedPackageRegex.test(strModuleId))) {\n                paths.push('node|' + strModuleId);\n            }\n            var lastPathIndex = -1;\n            var loadNextPath = function (err) {\n                lastPathIndex++;\n                if (lastPathIndex >= paths.length) {\n                    // No more paths to try\n                    _this._onLoadError(moduleId, err);\n                }\n                else {\n                    var currentPath_1 = paths[lastPathIndex];\n                    var recorder_1 = _this.getRecorder();\n                    if (_this._config.isBuild() && currentPath_1 === 'empty:') {\n                        _this._buildInfoPath[moduleId] = currentPath_1;\n                        _this.defineModule(_this._moduleIdProvider.getStrModuleId(moduleId), [], null, null, null);\n                        _this._onLoad(moduleId);\n                        return;\n                    }\n                    recorder_1.record(10 /* BeginLoadingScript */, currentPath_1);\n                    _this._scriptLoader.load(_this, currentPath_1, function () {\n                        if (_this._config.isBuild()) {\n                            _this._buildInfoPath[moduleId] = currentPath_1;\n                        }\n                        recorder_1.record(11 /* EndLoadingScriptOK */, currentPath_1);\n                        _this._onLoad(moduleId);\n                    }, function (err) {\n                        recorder_1.record(12 /* EndLoadingScriptError */, currentPath_1);\n                        loadNextPath(err);\n                    });\n                }\n            };\n            loadNextPath(null);\n        };\n        /**\n         * Resolve a plugin dependency with the plugin loaded & complete\n         * @param module The module that has this dependency\n         * @param pluginDependency The semi-normalized dependency that appears in the module. e.g. 'vs/css!./mycssfile'. Only the plugin part (before !) is normalized\n         * @param plugin The plugin (what the plugin exports)\n         */\n        ModuleManager.prototype._loadPluginDependency = function (plugin, pluginDependency) {\n            var _this = this;\n            if (this._modules2[pluginDependency.id] || this._knownModules2[pluginDependency.id]) {\n                // known module\n                return;\n            }\n            this._knownModules2[pluginDependency.id] = true;\n            // Delegate the loading of the resource to the plugin\n            var load = (function (value) {\n                _this.defineModule(_this._moduleIdProvider.getStrModuleId(pluginDependency.id), [], value, null, null);\n            });\n            load.error = function (err) {\n                _this._config.onError(_this._createLoadError(pluginDependency.id, err));\n            };\n            plugin.load(pluginDependency.pluginParam, this._createRequire(ModuleIdResolver.ROOT), load, this._config.getOptionsLiteral());\n        };\n        /**\n         * Examine the dependencies of module 'module' and resolve them as needed.\n         */\n        ModuleManager.prototype._resolve = function (module) {\n            var _this = this;\n            var dependencies = module.dependencies;\n            for (var i = 0, len = dependencies.length; i < len; i++) {\n                var dependency = dependencies[i];\n                if (dependency === RegularDependency.EXPORTS) {\n                    module.exportsPassedIn = true;\n                    module.unresolvedDependenciesCount--;\n                    continue;\n                }\n                if (dependency === RegularDependency.MODULE) {\n                    module.unresolvedDependenciesCount--;\n                    continue;\n                }\n                if (dependency === RegularDependency.REQUIRE) {\n                    module.unresolvedDependenciesCount--;\n                    continue;\n                }\n                var dependencyModule = this._modules2[dependency.id];\n                if (dependencyModule && dependencyModule.isComplete()) {\n                    module.unresolvedDependenciesCount--;\n                    continue;\n                }\n                if (this._hasDependencyPath(dependency.id, module.id)) {\n                    console.warn('There is a dependency cycle between \\'' + this._moduleIdProvider.getStrModuleId(dependency.id) + '\\' and \\'' + this._moduleIdProvider.getStrModuleId(module.id) + '\\'. The cyclic path follows:');\n                    var cyclePath = this._findCyclePath(dependency.id, module.id, 0);\n                    cyclePath.reverse();\n                    cyclePath.push(dependency.id);\n                    console.warn(cyclePath.map(function (id) { return _this._moduleIdProvider.getStrModuleId(id); }).join(' => \\n'));\n                    // Break the cycle\n                    module.unresolvedDependenciesCount--;\n                    continue;\n                }\n                // record inverse dependency\n                this._inverseDependencies2[dependency.id] = this._inverseDependencies2[dependency.id] || [];\n                this._inverseDependencies2[dependency.id].push(module.id);\n                if (dependency instanceof PluginDependency) {\n                    var plugin = this._modules2[dependency.pluginId];\n                    if (plugin && plugin.isComplete()) {\n                        this._loadPluginDependency(plugin.exports, dependency);\n                        continue;\n                    }\n                    // Record dependency for when the plugin gets loaded\n                    var inversePluginDeps = this._inversePluginDependencies2.get(dependency.pluginId);\n                    if (!inversePluginDeps) {\n                        inversePluginDeps = [];\n                        this._inversePluginDependencies2.set(dependency.pluginId, inversePluginDeps);\n                    }\n                    inversePluginDeps.push(dependency);\n                    this._loadModule(dependency.pluginId);\n                    continue;\n                }\n                this._loadModule(dependency.id);\n            }\n            if (module.unresolvedDependenciesCount === 0) {\n                this._onModuleComplete(module);\n            }\n        };\n        ModuleManager.prototype._onModuleComplete = function (module) {\n            var _this = this;\n            var recorder = this.getRecorder();\n            if (module.isComplete()) {\n                // already done\n                return;\n            }\n            var dependencies = module.dependencies;\n            var dependenciesValues = [];\n            for (var i = 0, len = dependencies.length; i < len; i++) {\n                var dependency = dependencies[i];\n                if (dependency === RegularDependency.EXPORTS) {\n                    dependenciesValues[i] = module.exports;\n                    continue;\n                }\n                if (dependency === RegularDependency.MODULE) {\n                    dependenciesValues[i] = {\n                        id: module.strId,\n                        config: function () {\n                            return _this._config.getConfigForModule(module.strId);\n                        }\n                    };\n                    continue;\n                }\n                if (dependency === RegularDependency.REQUIRE) {\n                    dependenciesValues[i] = this._createRequire(module.moduleIdResolver);\n                    continue;\n                }\n                var dependencyModule = this._modules2[dependency.id];\n                if (dependencyModule) {\n                    dependenciesValues[i] = dependencyModule.exports;\n                    continue;\n                }\n                dependenciesValues[i] = null;\n            }\n            module.complete(recorder, this._config, dependenciesValues);\n            // Fetch and clear inverse dependencies\n            var inverseDeps = this._inverseDependencies2[module.id];\n            this._inverseDependencies2[module.id] = null;\n            if (inverseDeps) {\n                // Resolve one inverse dependency at a time, always\n                // on the lookout for a completed module.\n                for (var i = 0, len = inverseDeps.length; i < len; i++) {\n                    var inverseDependencyId = inverseDeps[i];\n                    var inverseDependency = this._modules2[inverseDependencyId];\n                    inverseDependency.unresolvedDependenciesCount--;\n                    if (inverseDependency.unresolvedDependenciesCount === 0) {\n                        this._onModuleComplete(inverseDependency);\n                    }\n                }\n            }\n            var inversePluginDeps = this._inversePluginDependencies2.get(module.id);\n            if (inversePluginDeps) {\n                // This module is used as a plugin at least once\n                // Fetch and clear these inverse plugin dependencies\n                this._inversePluginDependencies2.delete(module.id);\n                // Resolve plugin dependencies one at a time\n                for (var i = 0, len = inversePluginDeps.length; i < len; i++) {\n                    this._loadPluginDependency(module.exports, inversePluginDeps[i]);\n                }\n            }\n        };\n        return ModuleManager;\n    }());\n    AMDLoader.ModuleManager = ModuleManager;\n})(AMDLoader || (AMDLoader = {}));\nvar define;\nvar AMDLoader;\n(function (AMDLoader) {\n    var env = new AMDLoader.Environment();\n    var moduleManager = null;\n    var DefineFunc = function (id, dependencies, callback) {\n        if (typeof id !== 'string') {\n            callback = dependencies;\n            dependencies = id;\n            id = null;\n        }\n        if (typeof dependencies !== 'object' || !Array.isArray(dependencies)) {\n            callback = dependencies;\n            dependencies = null;\n        }\n        if (!dependencies) {\n            dependencies = ['require', 'exports', 'module'];\n        }\n        if (id) {\n            moduleManager.defineModule(id, dependencies, callback, null, null);\n        }\n        else {\n            moduleManager.enqueueDefineAnonymousModule(dependencies, callback);\n        }\n    };\n    DefineFunc.amd = {\n        jQuery: true\n    };\n    var _requireFunc_config = function (params, shouldOverwrite) {\n        if (shouldOverwrite === void 0) { shouldOverwrite = false; }\n        moduleManager.configure(params, shouldOverwrite);\n    };\n    var RequireFunc = function () {\n        if (arguments.length === 1) {\n            if ((arguments[0] instanceof Object) && !Array.isArray(arguments[0])) {\n                _requireFunc_config(arguments[0]);\n                return;\n            }\n            if (typeof arguments[0] === 'string') {\n                return moduleManager.synchronousRequire(arguments[0]);\n            }\n        }\n        if (arguments.length === 2 || arguments.length === 3) {\n            if (Array.isArray(arguments[0])) {\n                moduleManager.defineModule(AMDLoader.Utilities.generateAnonymousModule(), arguments[0], arguments[1], arguments[2], null);\n                return;\n            }\n        }\n        throw new Error('Unrecognized require call');\n    };\n    RequireFunc.config = _requireFunc_config;\n    RequireFunc.getConfig = function () {\n        return moduleManager.getConfig().getOptionsLiteral();\n    };\n    RequireFunc.reset = function () {\n        moduleManager = moduleManager.reset();\n    };\n    RequireFunc.getBuildInfo = function () {\n        return moduleManager.getBuildInfo();\n    };\n    RequireFunc.getStats = function () {\n        return moduleManager.getLoaderEvents();\n    };\n    RequireFunc.define = function () {\n        return DefineFunc.apply(null, arguments);\n    };\n    function init() {\n        if (typeof AMDLoader.global.require !== 'undefined' || typeof require !== 'undefined') {\n            var _nodeRequire_1 = (AMDLoader.global.require || require);\n            if (typeof _nodeRequire_1 === 'function' && typeof _nodeRequire_1.resolve === 'function') {\n                // re-expose node's require function\n                var nodeRequire = function (what) {\n                    moduleManager.getRecorder().record(33 /* NodeBeginNativeRequire */, what);\n                    try {\n                        return _nodeRequire_1(what);\n                    }\n                    finally {\n                        moduleManager.getRecorder().record(34 /* NodeEndNativeRequire */, what);\n                    }\n                };\n                AMDLoader.global.nodeRequire = nodeRequire;\n                RequireFunc.nodeRequire = nodeRequire;\n                RequireFunc.__$__nodeRequire = nodeRequire;\n            }\n        }\n        if (env.isNode && !env.isElectronRenderer) {\n            module.exports = RequireFunc;\n            require = RequireFunc;\n        }\n        else {\n            if (!env.isElectronRenderer) {\n                AMDLoader.global.define = DefineFunc;\n            }\n            AMDLoader.global.require = RequireFunc;\n        }\n    }\n    AMDLoader.init = init;\n    if (typeof AMDLoader.global.define !== 'function' || !AMDLoader.global.define.amd) {\n        moduleManager = new AMDLoader.ModuleManager(env, AMDLoader.createScriptLoader(env), DefineFunc, RequireFunc, AMDLoader.Utilities.getHighPerformanceTimestamp());\n        // The global variable require can configure the loader\n        if (typeof AMDLoader.global.require !== 'undefined' && typeof AMDLoader.global.require !== 'function') {\n            RequireFunc.config(AMDLoader.global.require);\n        }\n        // This define is for the local closure defined in node in the case that the loader is concatenated\n        define = function () {\n            return DefineFunc.apply(null, arguments);\n        };\n        define.amd = DefineFunc.amd;\n        if (typeof doNotInitLoader === 'undefined') {\n            init();\n        }\n    }\n})(AMDLoader || (AMDLoader = {}));\n","\n\n/**\n * Returns the last element of an array.\n * @param array The array.\n * @param n Which element from the end (default is zero).\n */\nexport function tail<T>(array: ArrayLike<T>, n: number = 0): T {\n\treturn array[array.length - (1 + n)];\n}\n\nexport function tail2<T>(arr: T[]): [T[], T] {\n\tif (arr.length === 0) {\n\t\tthrow new Error('Invalid tail call');\n\t}\n\n\treturn [arr.slice(0, arr.length - 1), arr[arr.length - 1]];\n}\n\nexport function equals<T>(one: ReadonlyArray<T> | undefined, other: ReadonlyArray<T> | undefined, itemEquals: (a: T, b: T) => boolean = (a, b) => a === b): boolean {\n\tif (one === other) {\n\t\treturn true;\n\t}\n\n\tif (!one || !other) {\n\t\treturn false;\n\t}\n\n\tif (one.length !== other.length) {\n\t\treturn false;\n\t}\n\n\tfor (let i = 0, len = one.length; i < len; i++) {\n\t\tif (!itemEquals(one[i], other[i])) {\n\t\t\treturn false;\n\t\t}\n\t}\n\n\treturn true;\n}\n\nexport function binarySearch<T>(array: ReadonlyArray<T>, key: T, comparator: (op1: T, op2: T) => number): number {\n\tlet low = 0,\n\t\thigh = array.length - 1;\n\n\twhile (low <= high) {\n\t\tconst mid = ((low + high) / 2) | 0;\n\t\tconst comp = comparator(array[mid], key);\n\t\tif (comp < 0) {\n\t\t\tlow = mid + 1;\n\t\t} else if (comp > 0) {\n\t\t\thigh = mid - 1;\n\t\t} else {\n\t\t\treturn mid;\n\t\t}\n\t}\n\treturn -(low + 1);\n}\n\n/**\n * Takes a sorted array and a function p. The array is sorted in such a way that all elements where p(x) is false\n * are located before all elements where p(x) is true.\n * @returns the least x for which p(x) is true or array.length if no element fullfills the given function.\n */\nexport function findFirstInSorted<T>(array: ReadonlyArray<T>, p: (x: T) => boolean): number {\n\tlet low = 0, high = array.length;\n\tif (high === 0) {\n\t\treturn 0; // no children\n\t}\n\twhile (low < high) {\n\t\tconst mid = Math.floor((low + high) / 2);\n\t\tif (p(array[mid])) {\n\t\t\thigh = mid;\n\t\t} else {\n\t\t\tlow = mid + 1;\n\t\t}\n\t}\n\treturn low;\n}\n\ntype Compare<T> = (a: T, b: T) => number;\n\n/**\n * Like `Array#sort` but always stable. Usually runs a little slower `than Array#sort`\n * so only use this when actually needing stable sort.\n */\nexport function mergeSort<T>(data: T[], compare: Compare<T>): T[] {\n\t_sort(data, compare, 0, data.length - 1, []);\n\treturn data;\n}\n\nfunction _merge<T>(a: T[], compare: Compare<T>, lo: number, mid: number, hi: number, aux: T[]): void {\n\tlet leftIdx = lo, rightIdx = mid + 1;\n\tfor (let i = lo; i <= hi; i++) {\n\t\taux[i] = a[i];\n\t}\n\tfor (let i = lo; i <= hi; i++) {\n\t\tif (leftIdx > mid) {\n\t\t\t// left side consumed\n\t\t\ta[i] = aux[rightIdx++];\n\t\t} else if (rightIdx > hi) {\n\t\t\t// right side consumed\n\t\t\ta[i] = aux[leftIdx++];\n\t\t} else if (compare(aux[rightIdx], aux[leftIdx]) < 0) {\n\t\t\t// right element is less -> comes first\n\t\t\ta[i] = aux[rightIdx++];\n\t\t} else {\n\t\t\t// left element comes first (less or equal)\n\t\t\ta[i] = aux[leftIdx++];\n\t\t}\n\t}\n}\n\nfunction _sort<T>(a: T[], compare: Compare<T>, lo: number, hi: number, aux: T[]) {\n\tif (hi <= lo) {\n\t\treturn;\n\t}\n\tconst mid = lo + ((hi - lo) / 2) | 0;\n\t_sort(a, compare, lo, mid, aux);\n\t_sort(a, compare, mid + 1, hi, aux);\n\tif (compare(a[mid], a[mid + 1]) <= 0) {\n\t\t// left and right are sorted and if the last-left element is less\n\t\t// or equals than the first-right element there is nothing else\n\t\t// to do\n\t\treturn;\n\t}\n\t_merge(a, compare, lo, mid, hi, aux);\n}\n\n\nexport function groupBy<T>(data: ReadonlyArray<T>, compare: (a: T, b: T) => number): T[][] {\n\tconst result: T[][] = [];\n\tlet currentGroup: T[] | undefined = undefined;\n\tfor (const element of mergeSort(data.slice(0), compare)) {\n\t\tif (!currentGroup || compare(currentGroup[0], element) !== 0) {\n\t\t\tcurrentGroup = [element];\n\t\t\tresult.push(currentGroup);\n\t\t} else {\n\t\t\tcurrentGroup.push(element);\n\t\t}\n\t}\n\treturn result;\n}\n\n/**\n * @returns a new array with all falsy values removed. The original array IS NOT modified.\n */\nexport function coalesce<T>(array: Array<T | undefined | null>): T[] {\n\tif (!array) {\n\t\treturn array;\n\t}\n\treturn <T[]>array.filter(e => !!e);\n}\n\n/**\n * @returns false if the provided object is an array and not empty.\n */\nexport function isFalsyOrEmpty(obj: any): boolean {\n\treturn !Array.isArray(obj) || obj.length === 0;\n}\n\n/**\n * @returns True if the provided object is an array and has at least one element.\n */\nexport function isNonEmptyArray<T>(obj: ReadonlyArray<T> | undefined | null): obj is Array<T> {\n\treturn Array.isArray(obj) && obj.length > 0;\n}\n\n/**\n * Removes duplicates from the given array. The optional keyFn allows to specify\n * how elements are checked for equalness by returning a unique string for each.\n */\nexport function distinct<T>(array: ReadonlyArray<T>, keyFn?: (t: T) => string): T[] {\n\tif (!keyFn) {\n\t\treturn array.filter((element, position) => {\n\t\t\treturn array.indexOf(element) === position;\n\t\t});\n\t}\n\n\tconst seen: { [key: string]: boolean; } = Object.create(null);\n\treturn array.filter((elem) => {\n\t\tconst key = keyFn(elem);\n\t\tif (seen[key]) {\n\t\t\treturn false;\n\t\t}\n\n\t\tseen[key] = true;\n\n\t\treturn true;\n\t});\n}\n\nexport function distinctES6<T>(array: ReadonlyArray<T>): T[] {\n\tconst seen = new Set<T>();\n\treturn array.filter(element => {\n\t\tif (seen.has(element)) {\n\t\t\treturn false;\n\t\t}\n\n\t\tseen.add(element);\n\t\treturn true;\n\t});\n}\n\nexport function firstIndex<T>(array: ReadonlyArray<T>, fn: (item: T) => boolean): number {\n\tfor (let i = 0; i < array.length; i++) {\n\t\tconst element = array[i];\n\n\t\tif (fn(element)) {\n\t\t\treturn i;\n\t\t}\n\t}\n\n\treturn -1;\n}\n\nexport function first<T>(array: ReadonlyArray<T>, fn: (item: T) => boolean, notFoundValue: T): T;\nexport function first<T>(array: ReadonlyArray<T>, fn: (item: T) => boolean): T | undefined;\nexport function first<T>(array: ReadonlyArray<T>, fn: (item: T) => boolean, notFoundValue: T | undefined = undefined): T | undefined {\n\tconst index = firstIndex(array, fn);\n\treturn index < 0 ? notFoundValue : array[index];\n}\n\nexport function flatten<T>(arr: T[][]): T[] {\n\treturn (<T[]>[]).concat(...arr);\n}\n\nexport function range(to: number): number[];\nexport function range(from: number, to: number): number[];\nexport function range(arg: number, to?: number): number[] {\n\tlet from = typeof to === 'number' ? arg : 0;\n\n\tif (typeof to === 'number') {\n\t\tfrom = arg;\n\t} else {\n\t\tfrom = 0;\n\t\tto = arg;\n\t}\n\n\tconst result: number[] = [];\n\n\tif (from <= to) {\n\t\tfor (let i = from; i < to; i++) {\n\t\t\tresult.push(i);\n\t\t}\n\t} else {\n\t\tfor (let i = from; i > to; i--) {\n\t\t\tresult.push(i);\n\t\t}\n\t}\n\n\treturn result;\n}\n\n/**\n * Insert `insertArr` inside `target` at `insertIndex`.\n * Please don't touch unless you understand https://jsperf.com/inserting-an-array-within-an-array\n */\nexport function arrayInsert<T>(target: T[], insertIndex: number, insertArr: T[]): T[] {\n\tconst before = target.slice(0, insertIndex);\n\tconst after = target.slice(insertIndex);\n\treturn before.concat(insertArr, after);\n}\n\n/**\n * Pushes an element to the start of the array, if found.\n */\nexport function pushToStart<T>(arr: T[], value: T): void {\n\tconst index = arr.indexOf(value);\n\n\tif (index > -1) {\n\t\tarr.splice(index, 1);\n\t\tarr.unshift(value);\n\t}\n}\n\n/**\n * Pushes an element to the end of the array, if found.\n */\nexport function pushToEnd<T>(arr: T[], value: T): void {\n\tconst index = arr.indexOf(value);\n\n\tif (index > -1) {\n\t\tarr.splice(index, 1);\n\t\tarr.push(value);\n\t}\n}\n\nexport function asArray<T>(x: T | T[]): T[] {\n\treturn Array.isArray(x) ? x : [x];\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\n/**\n * Represents information about a specific difference between two sequences.\n */\nexport class DiffChange {\n\n\t/**\n\t * The position of the first element in the original sequence which\n\t * this change affects.\n\t */\n\tpublic originalStart: number;\n\n\t/**\n\t * The number of elements from the original sequence which were\n\t * affected.\n\t */\n\tpublic originalLength: number;\n\n\t/**\n\t * The position of the first element in the modified sequence which\n\t * this change affects.\n\t */\n\tpublic modifiedStart: number;\n\n\t/**\n\t * The number of elements from the modified sequence which were\n\t * affected (added).\n\t */\n\tpublic modifiedLength: number;\n\n\t/**\n\t * Constructs a new DiffChange with the given sequence information\n\t * and content.\n\t */\n\tconstructor(originalStart: number, originalLength: number, modifiedStart: number, modifiedLength: number) {\n\t\t//Debug.Assert(originalLength > 0 || modifiedLength > 0, \"originalLength and modifiedLength cannot both be <= 0\");\n\t\tthis.originalStart = originalStart;\n\t\tthis.originalLength = originalLength;\n\t\tthis.modifiedStart = modifiedStart;\n\t\tthis.modifiedLength = modifiedLength;\n\t}\n\n\t/**\n\t * The end point (exclusive) of the change in the original sequence.\n\t */\n\tpublic getOriginalEnd() {\n\t\treturn this.originalStart + this.originalLength;\n\t}\n\n\t/**\n\t * The end point (exclusive) of the change in the modified sequence.\n\t */\n\tpublic getModifiedEnd() {\n\t\treturn this.modifiedStart + this.modifiedLength;\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { DiffChange } from 'vs/base/common/diff/diffChange';\n\nfunction createStringSequence(a: string): ISequence {\n\treturn {\n\t\tgetLength() { return a.length; },\n\t\tgetElementAtIndex(pos: number) { return a.charCodeAt(pos); }\n\t};\n}\n\nexport function stringDiff(original: string, modified: string, pretty: boolean): IDiffChange[] {\n\treturn new LcsDiff(createStringSequence(original), createStringSequence(modified)).ComputeDiff(pretty);\n}\n\n\nexport interface ISequence {\n\tgetLength(): number;\n\tgetElementAtIndex(index: number): number | string;\n}\n\nexport interface IDiffChange {\n\t/**\n\t * The position of the first element in the original sequence which\n\t * this change affects.\n\t */\n\toriginalStart: number;\n\n\t/**\n\t * The number of elements from the original sequence which were\n\t * affected.\n\t */\n\toriginalLength: number;\n\n\t/**\n\t * The position of the first element in the modified sequence which\n\t * this change affects.\n\t */\n\tmodifiedStart: number;\n\n\t/**\n\t * The number of elements from the modified sequence which were\n\t * affected (added).\n\t */\n\tmodifiedLength: number;\n}\n\nexport interface IContinueProcessingPredicate {\n\t(furthestOriginalIndex: number, originalSequence: ISequence, matchLengthOfLongest: number): boolean;\n}\n\n//\n// The code below has been ported from a C# implementation in VS\n//\n\nexport class Debug {\n\n\tpublic static Assert(condition: boolean, message: string): void {\n\t\tif (!condition) {\n\t\t\tthrow new Error(message);\n\t\t}\n\t}\n}\n\nexport class MyArray {\n\t/**\n\t * Copies a range of elements from an Array starting at the specified source index and pastes\n\t * them to another Array starting at the specified destination index. The length and the indexes\n\t * are specified as 64-bit integers.\n\t * sourceArray:\n\t *\t\tThe Array that contains the data to copy.\n\t * sourceIndex:\n\t *\t\tA 64-bit integer that represents the index in the sourceArray at which copying begins.\n\t * destinationArray:\n\t *\t\tThe Array that receives the data.\n\t * destinationIndex:\n\t *\t\tA 64-bit integer that represents the index in the destinationArray at which storing begins.\n\t * length:\n\t *\t\tA 64-bit integer that represents the number of elements to copy.\n\t */\n\tpublic static Copy(sourceArray: any[], sourceIndex: number, destinationArray: any[], destinationIndex: number, length: number) {\n\t\tfor (let i = 0; i < length; i++) {\n\t\t\tdestinationArray[destinationIndex + i] = sourceArray[sourceIndex + i];\n\t\t}\n\t}\n}\n\n//*****************************************************************************\n// LcsDiff.cs\n//\n// An implementation of the difference algorithm described in\n// \"An O(ND) Difference Algorithm and its variations\" by Eugene W. Myers\n//\n// Copyright (C) 2008 Microsoft Corporation @minifier_do_not_preserve\n//*****************************************************************************\n\n// Our total memory usage for storing history is (worst-case):\n// 2 * [(MaxDifferencesHistory + 1) * (MaxDifferencesHistory + 1) - 1] * sizeof(int)\n// 2 * [1448*1448 - 1] * 4 = 16773624 = 16MB\nlet MaxDifferencesHistory = 1447;\n//let MaxDifferencesHistory = 100;\n\n\n\n\n/**\n * A utility class which helps to create the set of DiffChanges from\n * a difference operation. This class accepts original DiffElements and\n * modified DiffElements that are involved in a particular change. The\n * MarktNextChange() method can be called to mark the separation between\n * distinct changes. At the end, the Changes property can be called to retrieve\n * the constructed changes.\n */\nclass DiffChangeHelper {\n\n\tprivate m_changes: DiffChange[];\n\tprivate m_originalStart: number;\n\tprivate m_modifiedStart: number;\n\tprivate m_originalCount: number;\n\tprivate m_modifiedCount: number;\n\n\t/**\n\t * Constructs a new DiffChangeHelper for the given DiffSequences.\n\t */\n\tconstructor() {\n\t\tthis.m_changes = [];\n\t\tthis.m_originalStart = Number.MAX_VALUE;\n\t\tthis.m_modifiedStart = Number.MAX_VALUE;\n\t\tthis.m_originalCount = 0;\n\t\tthis.m_modifiedCount = 0;\n\t}\n\n\t/**\n\t * Marks the beginning of the next change in the set of differences.\n\t */\n\tpublic MarkNextChange(): void {\n\t\t// Only add to the list if there is something to add\n\t\tif (this.m_originalCount > 0 || this.m_modifiedCount > 0) {\n\t\t\t// Add the new change to our list\n\t\t\tthis.m_changes.push(new DiffChange(this.m_originalStart, this.m_originalCount,\n\t\t\t\tthis.m_modifiedStart, this.m_modifiedCount));\n\t\t}\n\n\t\t// Reset for the next change\n\t\tthis.m_originalCount = 0;\n\t\tthis.m_modifiedCount = 0;\n\t\tthis.m_originalStart = Number.MAX_VALUE;\n\t\tthis.m_modifiedStart = Number.MAX_VALUE;\n\t}\n\n\t/**\n\t * Adds the original element at the given position to the elements\n\t * affected by the current change. The modified index gives context\n\t * to the change position with respect to the original sequence.\n\t * @param originalIndex The index of the original element to add.\n\t * @param modifiedIndex The index of the modified element that provides corresponding position in the modified sequence.\n\t */\n\tpublic AddOriginalElement(originalIndex: number, modifiedIndex: number) {\n\t\t// The 'true' start index is the smallest of the ones we've seen\n\t\tthis.m_originalStart = Math.min(this.m_originalStart, originalIndex);\n\t\tthis.m_modifiedStart = Math.min(this.m_modifiedStart, modifiedIndex);\n\n\t\tthis.m_originalCount++;\n\t}\n\n\t/**\n\t * Adds the modified element at the given position to the elements\n\t * affected by the current change. The original index gives context\n\t * to the change position with respect to the modified sequence.\n\t * @param originalIndex The index of the original element that provides corresponding position in the original sequence.\n\t * @param modifiedIndex The index of the modified element to add.\n\t */\n\tpublic AddModifiedElement(originalIndex: number, modifiedIndex: number): void {\n\t\t// The 'true' start index is the smallest of the ones we've seen\n\t\tthis.m_originalStart = Math.min(this.m_originalStart, originalIndex);\n\t\tthis.m_modifiedStart = Math.min(this.m_modifiedStart, modifiedIndex);\n\n\t\tthis.m_modifiedCount++;\n\t}\n\n\t/**\n\t * Retrieves all of the changes marked by the class.\n\t */\n\tpublic getChanges(): DiffChange[] {\n\t\tif (this.m_originalCount > 0 || this.m_modifiedCount > 0) {\n\t\t\t// Finish up on whatever is left\n\t\t\tthis.MarkNextChange();\n\t\t}\n\n\t\treturn this.m_changes;\n\t}\n\n\t/**\n\t * Retrieves all of the changes marked by the class in the reverse order\n\t */\n\tpublic getReverseChanges(): DiffChange[] {\n\t\tif (this.m_originalCount > 0 || this.m_modifiedCount > 0) {\n\t\t\t// Finish up on whatever is left\n\t\t\tthis.MarkNextChange();\n\t\t}\n\n\t\tthis.m_changes.reverse();\n\t\treturn this.m_changes;\n\t}\n\n}\n\n/**\n * An implementation of the difference algorithm described in\n * \"An O(ND) Difference Algorithm and its variations\" by Eugene W. Myers\n */\nexport class LcsDiff {\n\n\tprivate OriginalSequence: ISequence;\n\tprivate ModifiedSequence: ISequence;\n\tprivate ContinueProcessingPredicate: IContinueProcessingPredicate | null;\n\n\tprivate m_forwardHistory: number[][];\n\tprivate m_reverseHistory: number[][];\n\n\t/**\n\t * Constructs the DiffFinder\n\t */\n\tconstructor(originalSequence: ISequence, newSequence: ISequence, continueProcessingPredicate: IContinueProcessingPredicate | null = null) {\n\t\tthis.OriginalSequence = originalSequence;\n\t\tthis.ModifiedSequence = newSequence;\n\t\tthis.ContinueProcessingPredicate = continueProcessingPredicate;\n\n\t\tthis.m_forwardHistory = [];\n\t\tthis.m_reverseHistory = [];\n\t}\n\n\tprivate ElementsAreEqual(originalIndex: number, newIndex: number): boolean {\n\t\treturn (this.OriginalSequence.getElementAtIndex(originalIndex) === this.ModifiedSequence.getElementAtIndex(newIndex));\n\t}\n\n\tprivate OriginalElementsAreEqual(index1: number, index2: number): boolean {\n\t\treturn (this.OriginalSequence.getElementAtIndex(index1) === this.OriginalSequence.getElementAtIndex(index2));\n\t}\n\n\tprivate ModifiedElementsAreEqual(index1: number, index2: number): boolean {\n\t\treturn (this.ModifiedSequence.getElementAtIndex(index1) === this.ModifiedSequence.getElementAtIndex(index2));\n\t}\n\n\tpublic ComputeDiff(pretty: boolean): IDiffChange[] {\n\t\treturn this._ComputeDiff(0, this.OriginalSequence.getLength() - 1, 0, this.ModifiedSequence.getLength() - 1, pretty);\n\t}\n\n\t/**\n\t * Computes the differences between the original and modified input\n\t * sequences on the bounded range.\n\t * @returns An array of the differences between the two input sequences.\n\t */\n\tprivate _ComputeDiff(originalStart: number, originalEnd: number, modifiedStart: number, modifiedEnd: number, pretty: boolean): DiffChange[] {\n\t\tlet quitEarlyArr = [false];\n\t\tlet changes = this.ComputeDiffRecursive(originalStart, originalEnd, modifiedStart, modifiedEnd, quitEarlyArr);\n\n\t\tif (pretty) {\n\t\t\t// We have to clean up the computed diff to be more intuitive\n\t\t\t// but it turns out this cannot be done correctly until the entire set\n\t\t\t// of diffs have been computed\n\t\t\treturn this.PrettifyChanges(changes);\n\t\t}\n\n\t\treturn changes;\n\t}\n\n\t/**\n\t * Private helper method which computes the differences on the bounded range\n\t * recursively.\n\t * @returns An array of the differences between the two input sequences.\n\t */\n\tprivate ComputeDiffRecursive(originalStart: number, originalEnd: number, modifiedStart: number, modifiedEnd: number, quitEarlyArr: boolean[]): DiffChange[] {\n\t\tquitEarlyArr[0] = false;\n\n\t\t// Find the start of the differences\n\t\twhile (originalStart <= originalEnd && modifiedStart <= modifiedEnd && this.ElementsAreEqual(originalStart, modifiedStart)) {\n\t\t\toriginalStart++;\n\t\t\tmodifiedStart++;\n\t\t}\n\n\t\t// Find the end of the differences\n\t\twhile (originalEnd >= originalStart && modifiedEnd >= modifiedStart && this.ElementsAreEqual(originalEnd, modifiedEnd)) {\n\t\t\toriginalEnd--;\n\t\t\tmodifiedEnd--;\n\t\t}\n\n\t\t// In the special case where we either have all insertions or all deletions or the sequences are identical\n\t\tif (originalStart > originalEnd || modifiedStart > modifiedEnd) {\n\t\t\tlet changes: DiffChange[];\n\n\t\t\tif (modifiedStart <= modifiedEnd) {\n\t\t\t\tDebug.Assert(originalStart === originalEnd + 1, 'originalStart should only be one more than originalEnd');\n\n\t\t\t\t// All insertions\n\t\t\t\tchanges = [\n\t\t\t\t\tnew DiffChange(originalStart, 0, modifiedStart, modifiedEnd - modifiedStart + 1)\n\t\t\t\t];\n\t\t\t} else if (originalStart <= originalEnd) {\n\t\t\t\tDebug.Assert(modifiedStart === modifiedEnd + 1, 'modifiedStart should only be one more than modifiedEnd');\n\n\t\t\t\t// All deletions\n\t\t\t\tchanges = [\n\t\t\t\t\tnew DiffChange(originalStart, originalEnd - originalStart + 1, modifiedStart, 0)\n\t\t\t\t];\n\t\t\t} else {\n\t\t\t\tDebug.Assert(originalStart === originalEnd + 1, 'originalStart should only be one more than originalEnd');\n\t\t\t\tDebug.Assert(modifiedStart === modifiedEnd + 1, 'modifiedStart should only be one more than modifiedEnd');\n\n\t\t\t\t// Identical sequences - No differences\n\t\t\t\tchanges = [];\n\t\t\t}\n\n\t\t\treturn changes;\n\t\t}\n\n\t\t// This problem can be solved using the Divide-And-Conquer technique.\n\t\tlet midOriginalArr = [0], midModifiedArr = [0];\n\t\tlet result = this.ComputeRecursionPoint(originalStart, originalEnd, modifiedStart, modifiedEnd, midOriginalArr, midModifiedArr, quitEarlyArr);\n\n\t\tlet midOriginal = midOriginalArr[0];\n\t\tlet midModified = midModifiedArr[0];\n\n\t\tif (result !== null) {\n\t\t\t// Result is not-null when there was enough memory to compute the changes while\n\t\t\t// searching for the recursion point\n\t\t\treturn result;\n\t\t} else if (!quitEarlyArr[0]) {\n\t\t\t// We can break the problem down recursively by finding the changes in the\n\t\t\t// First Half:   (originalStart, modifiedStart) to (midOriginal, midModified)\n\t\t\t// Second Half:  (midOriginal + 1, minModified + 1) to (originalEnd, modifiedEnd)\n\t\t\t// NOTE: ComputeDiff() is inclusive, therefore the second range starts on the next point\n\n\t\t\tlet leftChanges = this.ComputeDiffRecursive(originalStart, midOriginal, modifiedStart, midModified, quitEarlyArr);\n\t\t\tlet rightChanges: DiffChange[] = [];\n\n\t\t\tif (!quitEarlyArr[0]) {\n\t\t\t\trightChanges = this.ComputeDiffRecursive(midOriginal + 1, originalEnd, midModified + 1, modifiedEnd, quitEarlyArr);\n\t\t\t} else {\n\t\t\t\t// We did't have time to finish the first half, so we don't have time to compute this half.\n\t\t\t\t// Consider the entire rest of the sequence different.\n\t\t\t\trightChanges = [\n\t\t\t\t\tnew DiffChange(midOriginal + 1, originalEnd - (midOriginal + 1) + 1, midModified + 1, modifiedEnd - (midModified + 1) + 1)\n\t\t\t\t];\n\t\t\t}\n\n\t\t\treturn this.ConcatenateChanges(leftChanges, rightChanges);\n\t\t}\n\n\t\t// If we hit here, we quit early, and so can't return anything meaningful\n\t\treturn [\n\t\t\tnew DiffChange(originalStart, originalEnd - originalStart + 1, modifiedStart, modifiedEnd - modifiedStart + 1)\n\t\t];\n\t}\n\n\tprivate WALKTRACE(diagonalForwardBase: number, diagonalForwardStart: number, diagonalForwardEnd: number, diagonalForwardOffset: number,\n\t\tdiagonalReverseBase: number, diagonalReverseStart: number, diagonalReverseEnd: number, diagonalReverseOffset: number,\n\t\tforwardPoints: number[], reversePoints: number[],\n\t\toriginalIndex: number, originalEnd: number, midOriginalArr: number[],\n\t\tmodifiedIndex: number, modifiedEnd: number, midModifiedArr: number[],\n\t\tdeltaIsEven: boolean, quitEarlyArr: boolean[]): DiffChange[] {\n\t\tlet forwardChanges: DiffChange[] | null = null, reverseChanges: DiffChange[] | null = null;\n\n\t\t// First, walk backward through the forward diagonals history\n\t\tlet changeHelper = new DiffChangeHelper();\n\t\tlet diagonalMin = diagonalForwardStart;\n\t\tlet diagonalMax = diagonalForwardEnd;\n\t\tlet diagonalRelative = (midOriginalArr[0] - midModifiedArr[0]) - diagonalForwardOffset;\n\t\tlet lastOriginalIndex = Number.MIN_VALUE;\n\t\tlet historyIndex = this.m_forwardHistory.length - 1;\n\t\tlet diagonal: number;\n\n\t\tdo {\n\t\t\t// Get the diagonal index from the relative diagonal number\n\t\t\tdiagonal = diagonalRelative + diagonalForwardBase;\n\n\t\t\t// Figure out where we came from\n\t\t\tif (diagonal === diagonalMin || (diagonal < diagonalMax && forwardPoints[diagonal - 1] < forwardPoints[diagonal + 1])) {\n\t\t\t\t// Vertical line (the element is an insert)\n\t\t\t\toriginalIndex = forwardPoints[diagonal + 1];\n\t\t\t\tmodifiedIndex = originalIndex - diagonalRelative - diagonalForwardOffset;\n\t\t\t\tif (originalIndex < lastOriginalIndex) {\n\t\t\t\t\tchangeHelper.MarkNextChange();\n\t\t\t\t}\n\t\t\t\tlastOriginalIndex = originalIndex;\n\t\t\t\tchangeHelper.AddModifiedElement(originalIndex + 1, modifiedIndex);\n\t\t\t\tdiagonalRelative = (diagonal + 1) - diagonalForwardBase; //Setup for the next iteration\n\t\t\t} else {\n\t\t\t\t// Horizontal line (the element is a deletion)\n\t\t\t\toriginalIndex = forwardPoints[diagonal - 1] + 1;\n\t\t\t\tmodifiedIndex = originalIndex - diagonalRelative - diagonalForwardOffset;\n\t\t\t\tif (originalIndex < lastOriginalIndex) {\n\t\t\t\t\tchangeHelper.MarkNextChange();\n\t\t\t\t}\n\t\t\t\tlastOriginalIndex = originalIndex - 1;\n\t\t\t\tchangeHelper.AddOriginalElement(originalIndex, modifiedIndex + 1);\n\t\t\t\tdiagonalRelative = (diagonal - 1) - diagonalForwardBase; //Setup for the next iteration\n\t\t\t}\n\n\t\t\tif (historyIndex >= 0) {\n\t\t\t\tforwardPoints = this.m_forwardHistory[historyIndex];\n\t\t\t\tdiagonalForwardBase = forwardPoints[0]; //We stored this in the first spot\n\t\t\t\tdiagonalMin = 1;\n\t\t\t\tdiagonalMax = forwardPoints.length - 1;\n\t\t\t}\n\t\t} while (--historyIndex >= -1);\n\n\t\t// Ironically, we get the forward changes as the reverse of the\n\t\t// order we added them since we technically added them backwards\n\t\tforwardChanges = changeHelper.getReverseChanges();\n\n\t\tif (quitEarlyArr[0]) {\n\t\t\t// TODO: Calculate a partial from the reverse diagonals.\n\t\t\t//       For now, just assume everything after the midOriginal/midModified point is a diff\n\n\t\t\tlet originalStartPoint = midOriginalArr[0] + 1;\n\t\t\tlet modifiedStartPoint = midModifiedArr[0] + 1;\n\n\t\t\tif (forwardChanges !== null && forwardChanges.length > 0) {\n\t\t\t\tlet lastForwardChange = forwardChanges[forwardChanges.length - 1];\n\t\t\t\toriginalStartPoint = Math.max(originalStartPoint, lastForwardChange.getOriginalEnd());\n\t\t\t\tmodifiedStartPoint = Math.max(modifiedStartPoint, lastForwardChange.getModifiedEnd());\n\t\t\t}\n\n\t\t\treverseChanges = [\n\t\t\t\tnew DiffChange(originalStartPoint, originalEnd - originalStartPoint + 1,\n\t\t\t\t\tmodifiedStartPoint, modifiedEnd - modifiedStartPoint + 1)\n\t\t\t];\n\t\t} else {\n\t\t\t// Now walk backward through the reverse diagonals history\n\t\t\tchangeHelper = new DiffChangeHelper();\n\t\t\tdiagonalMin = diagonalReverseStart;\n\t\t\tdiagonalMax = diagonalReverseEnd;\n\t\t\tdiagonalRelative = (midOriginalArr[0] - midModifiedArr[0]) - diagonalReverseOffset;\n\t\t\tlastOriginalIndex = Number.MAX_VALUE;\n\t\t\thistoryIndex = (deltaIsEven) ? this.m_reverseHistory.length - 1 : this.m_reverseHistory.length - 2;\n\n\t\t\tdo {\n\t\t\t\t// Get the diagonal index from the relative diagonal number\n\t\t\t\tdiagonal = diagonalRelative + diagonalReverseBase;\n\n\t\t\t\t// Figure out where we came from\n\t\t\t\tif (diagonal === diagonalMin || (diagonal < diagonalMax && reversePoints[diagonal - 1] >= reversePoints[diagonal + 1])) {\n\t\t\t\t\t// Horizontal line (the element is a deletion))\n\t\t\t\t\toriginalIndex = reversePoints[diagonal + 1] - 1;\n\t\t\t\t\tmodifiedIndex = originalIndex - diagonalRelative - diagonalReverseOffset;\n\t\t\t\t\tif (originalIndex > lastOriginalIndex) {\n\t\t\t\t\t\tchangeHelper.MarkNextChange();\n\t\t\t\t\t}\n\t\t\t\t\tlastOriginalIndex = originalIndex + 1;\n\t\t\t\t\tchangeHelper.AddOriginalElement(originalIndex + 1, modifiedIndex + 1);\n\t\t\t\t\tdiagonalRelative = (diagonal + 1) - diagonalReverseBase; //Setup for the next iteration\n\t\t\t\t} else {\n\t\t\t\t\t// Vertical line (the element is an insertion)\n\t\t\t\t\toriginalIndex = reversePoints[diagonal - 1];\n\t\t\t\t\tmodifiedIndex = originalIndex - diagonalRelative - diagonalReverseOffset;\n\t\t\t\t\tif (originalIndex > lastOriginalIndex) {\n\t\t\t\t\t\tchangeHelper.MarkNextChange();\n\t\t\t\t\t}\n\t\t\t\t\tlastOriginalIndex = originalIndex;\n\t\t\t\t\tchangeHelper.AddModifiedElement(originalIndex + 1, modifiedIndex + 1);\n\t\t\t\t\tdiagonalRelative = (diagonal - 1) - diagonalReverseBase; //Setup for the next iteration\n\t\t\t\t}\n\n\t\t\t\tif (historyIndex >= 0) {\n\t\t\t\t\treversePoints = this.m_reverseHistory[historyIndex];\n\t\t\t\t\tdiagonalReverseBase = reversePoints[0]; //We stored this in the first spot\n\t\t\t\t\tdiagonalMin = 1;\n\t\t\t\t\tdiagonalMax = reversePoints.length - 1;\n\t\t\t\t}\n\t\t\t} while (--historyIndex >= -1);\n\n\t\t\t// There are cases where the reverse history will find diffs that\n\t\t\t// are correct, but not intuitive, so we need shift them.\n\t\t\treverseChanges = changeHelper.getChanges();\n\t\t}\n\n\t\treturn this.ConcatenateChanges(forwardChanges, reverseChanges);\n\t}\n\n\t/**\n\t * Given the range to compute the diff on, this method finds the point:\n\t * (midOriginal, midModified)\n\t * that exists in the middle of the LCS of the two sequences and\n\t * is the point at which the LCS problem may be broken down recursively.\n\t * This method will try to keep the LCS trace in memory. If the LCS recursion\n\t * point is calculated and the full trace is available in memory, then this method\n\t * will return the change list.\n\t * @param originalStart The start bound of the original sequence range\n\t * @param originalEnd The end bound of the original sequence range\n\t * @param modifiedStart The start bound of the modified sequence range\n\t * @param modifiedEnd The end bound of the modified sequence range\n\t * @param midOriginal The middle point of the original sequence range\n\t * @param midModified The middle point of the modified sequence range\n\t * @returns The diff changes, if available, otherwise null\n\t */\n\tprivate ComputeRecursionPoint(originalStart: number, originalEnd: number, modifiedStart: number, modifiedEnd: number, midOriginalArr: number[], midModifiedArr: number[], quitEarlyArr: boolean[]) {\n\t\tlet originalIndex = 0, modifiedIndex = 0;\n\t\tlet diagonalForwardStart = 0, diagonalForwardEnd = 0;\n\t\tlet diagonalReverseStart = 0, diagonalReverseEnd = 0;\n\t\tlet numDifferences: number;\n\n\t\t// To traverse the edit graph and produce the proper LCS, our actual\n\t\t// start position is just outside the given boundary\n\t\toriginalStart--;\n\t\tmodifiedStart--;\n\n\t\t// We set these up to make the compiler happy, but they will\n\t\t// be replaced before we return with the actual recursion point\n\t\tmidOriginalArr[0] = 0;\n\t\tmidModifiedArr[0] = 0;\n\n\t\t// Clear out the history\n\t\tthis.m_forwardHistory = [];\n\t\tthis.m_reverseHistory = [];\n\n\t\t// Each cell in the two arrays corresponds to a diagonal in the edit graph.\n\t\t// The integer value in the cell represents the originalIndex of the furthest\n\t\t// reaching point found so far that ends in that diagonal.\n\t\t// The modifiedIndex can be computed mathematically from the originalIndex and the diagonal number.\n\t\tlet maxDifferences = (originalEnd - originalStart) + (modifiedEnd - modifiedStart);\n\t\tlet numDiagonals = maxDifferences + 1;\n\t\tlet forwardPoints: number[] = new Array<number>(numDiagonals);\n\t\tlet reversePoints: number[] = new Array<number>(numDiagonals);\n\t\t// diagonalForwardBase: Index into forwardPoints of the diagonal which passes through (originalStart, modifiedStart)\n\t\t// diagonalReverseBase: Index into reversePoints of the diagonal which passes through (originalEnd, modifiedEnd)\n\t\tlet diagonalForwardBase = (modifiedEnd - modifiedStart);\n\t\tlet diagonalReverseBase = (originalEnd - originalStart);\n\t\t// diagonalForwardOffset: Geometric offset which allows modifiedIndex to be computed from originalIndex and the\n\t\t//    diagonal number (relative to diagonalForwardBase)\n\t\t// diagonalReverseOffset: Geometric offset which allows modifiedIndex to be computed from originalIndex and the\n\t\t//    diagonal number (relative to diagonalReverseBase)\n\t\tlet diagonalForwardOffset = (originalStart - modifiedStart);\n\t\tlet diagonalReverseOffset = (originalEnd - modifiedEnd);\n\n\t\t// delta: The difference between the end diagonal and the start diagonal. This is used to relate diagonal numbers\n\t\t//   relative to the start diagonal with diagonal numbers relative to the end diagonal.\n\t\t// The Even/Oddn-ness of this delta is important for determining when we should check for overlap\n\t\tlet delta = diagonalReverseBase - diagonalForwardBase;\n\t\tlet deltaIsEven = (delta % 2 === 0);\n\n\t\t// Here we set up the start and end points as the furthest points found so far\n\t\t// in both the forward and reverse directions, respectively\n\t\tforwardPoints[diagonalForwardBase] = originalStart;\n\t\treversePoints[diagonalReverseBase] = originalEnd;\n\n\t\t// Remember if we quit early, and thus need to do a best-effort result instead of a real result.\n\t\tquitEarlyArr[0] = false;\n\n\n\n\t\t// A couple of points:\n\t\t// --With this method, we iterate on the number of differences between the two sequences.\n\t\t//   The more differences there actually are, the longer this will take.\n\t\t// --Also, as the number of differences increases, we have to search on diagonals further\n\t\t//   away from the reference diagonal (which is diagonalForwardBase for forward, diagonalReverseBase for reverse).\n\t\t// --We extend on even diagonals (relative to the reference diagonal) only when numDifferences\n\t\t//   is even and odd diagonals only when numDifferences is odd.\n\t\tlet diagonal: number, tempOriginalIndex: number;\n\t\tfor (numDifferences = 1; numDifferences <= (maxDifferences / 2) + 1; numDifferences++) {\n\t\t\tlet furthestOriginalIndex = 0;\n\t\t\tlet furthestModifiedIndex = 0;\n\n\t\t\t// Run the algorithm in the forward direction\n\t\t\tdiagonalForwardStart = this.ClipDiagonalBound(diagonalForwardBase - numDifferences, numDifferences, diagonalForwardBase, numDiagonals);\n\t\t\tdiagonalForwardEnd = this.ClipDiagonalBound(diagonalForwardBase + numDifferences, numDifferences, diagonalForwardBase, numDiagonals);\n\t\t\tfor (diagonal = diagonalForwardStart; diagonal <= diagonalForwardEnd; diagonal += 2) {\n\t\t\t\t// STEP 1: We extend the furthest reaching point in the present diagonal\n\t\t\t\t// by looking at the diagonals above and below and picking the one whose point\n\t\t\t\t// is further away from the start point (originalStart, modifiedStart)\n\t\t\t\tif (diagonal === diagonalForwardStart || (diagonal < diagonalForwardEnd && forwardPoints[diagonal - 1] < forwardPoints[diagonal + 1])) {\n\t\t\t\t\toriginalIndex = forwardPoints[diagonal + 1];\n\t\t\t\t} else {\n\t\t\t\t\toriginalIndex = forwardPoints[diagonal - 1] + 1;\n\t\t\t\t}\n\t\t\t\tmodifiedIndex = originalIndex - (diagonal - diagonalForwardBase) - diagonalForwardOffset;\n\n\t\t\t\t// Save the current originalIndex so we can test for false overlap in step 3\n\t\t\t\ttempOriginalIndex = originalIndex;\n\n\t\t\t\t// STEP 2: We can continue to extend the furthest reaching point in the present diagonal\n\t\t\t\t// so long as the elements are equal.\n\t\t\t\twhile (originalIndex < originalEnd && modifiedIndex < modifiedEnd && this.ElementsAreEqual(originalIndex + 1, modifiedIndex + 1)) {\n\t\t\t\t\toriginalIndex++;\n\t\t\t\t\tmodifiedIndex++;\n\t\t\t\t}\n\t\t\t\tforwardPoints[diagonal] = originalIndex;\n\n\t\t\t\tif (originalIndex + modifiedIndex > furthestOriginalIndex + furthestModifiedIndex) {\n\t\t\t\t\tfurthestOriginalIndex = originalIndex;\n\t\t\t\t\tfurthestModifiedIndex = modifiedIndex;\n\t\t\t\t}\n\n\t\t\t\t// STEP 3: If delta is odd (overlap first happens on forward when delta is odd)\n\t\t\t\t// and diagonal is in the range of reverse diagonals computed for numDifferences-1\n\t\t\t\t// (the previous iteration; we haven't computed reverse diagonals for numDifferences yet)\n\t\t\t\t// then check for overlap.\n\t\t\t\tif (!deltaIsEven && Math.abs(diagonal - diagonalReverseBase) <= (numDifferences - 1)) {\n\t\t\t\t\tif (originalIndex >= reversePoints[diagonal]) {\n\t\t\t\t\t\tmidOriginalArr[0] = originalIndex;\n\t\t\t\t\t\tmidModifiedArr[0] = modifiedIndex;\n\n\t\t\t\t\t\tif (tempOriginalIndex <= reversePoints[diagonal] && MaxDifferencesHistory > 0 && numDifferences <= (MaxDifferencesHistory + 1)) {\n\t\t\t\t\t\t\t// BINGO! We overlapped, and we have the full trace in memory!\n\t\t\t\t\t\t\treturn this.WALKTRACE(diagonalForwardBase, diagonalForwardStart, diagonalForwardEnd, diagonalForwardOffset,\n\t\t\t\t\t\t\t\tdiagonalReverseBase, diagonalReverseStart, diagonalReverseEnd, diagonalReverseOffset,\n\t\t\t\t\t\t\t\tforwardPoints, reversePoints,\n\t\t\t\t\t\t\t\toriginalIndex, originalEnd, midOriginalArr,\n\t\t\t\t\t\t\t\tmodifiedIndex, modifiedEnd, midModifiedArr,\n\t\t\t\t\t\t\t\tdeltaIsEven, quitEarlyArr\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t// Either false overlap, or we didn't have enough memory for the full trace\n\t\t\t\t\t\t\t// Just return the recursion point\n\t\t\t\t\t\t\treturn null;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Check to see if we should be quitting early, before moving on to the next iteration.\n\t\t\tlet matchLengthOfLongest = ((furthestOriginalIndex - originalStart) + (furthestModifiedIndex - modifiedStart) - numDifferences) / 2;\n\n\t\t\tif (this.ContinueProcessingPredicate !== null && !this.ContinueProcessingPredicate(furthestOriginalIndex, this.OriginalSequence, matchLengthOfLongest)) {\n\t\t\t\t// We can't finish, so skip ahead to generating a result from what we have.\n\t\t\t\tquitEarlyArr[0] = true;\n\n\t\t\t\t// Use the furthest distance we got in the forward direction.\n\t\t\t\tmidOriginalArr[0] = furthestOriginalIndex;\n\t\t\t\tmidModifiedArr[0] = furthestModifiedIndex;\n\n\t\t\t\tif (matchLengthOfLongest > 0 && MaxDifferencesHistory > 0 && numDifferences <= (MaxDifferencesHistory + 1)) {\n\t\t\t\t\t// Enough of the history is in memory to walk it backwards\n\t\t\t\t\treturn this.WALKTRACE(diagonalForwardBase, diagonalForwardStart, diagonalForwardEnd, diagonalForwardOffset,\n\t\t\t\t\t\tdiagonalReverseBase, diagonalReverseStart, diagonalReverseEnd, diagonalReverseOffset,\n\t\t\t\t\t\tforwardPoints, reversePoints,\n\t\t\t\t\t\toriginalIndex, originalEnd, midOriginalArr,\n\t\t\t\t\t\tmodifiedIndex, modifiedEnd, midModifiedArr,\n\t\t\t\t\t\tdeltaIsEven, quitEarlyArr\n\t\t\t\t\t);\n\t\t\t\t} else {\n\t\t\t\t\t// We didn't actually remember enough of the history.\n\n\t\t\t\t\t//Since we are quiting the diff early, we need to shift back the originalStart and modified start\n\t\t\t\t\t//back into the boundary limits since we decremented their value above beyond the boundary limit.\n\t\t\t\t\toriginalStart++;\n\t\t\t\t\tmodifiedStart++;\n\n\t\t\t\t\treturn [\n\t\t\t\t\t\tnew DiffChange(originalStart, originalEnd - originalStart + 1,\n\t\t\t\t\t\t\tmodifiedStart, modifiedEnd - modifiedStart + 1)\n\t\t\t\t\t];\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Run the algorithm in the reverse direction\n\t\t\tdiagonalReverseStart = this.ClipDiagonalBound(diagonalReverseBase - numDifferences, numDifferences, diagonalReverseBase, numDiagonals);\n\t\t\tdiagonalReverseEnd = this.ClipDiagonalBound(diagonalReverseBase + numDifferences, numDifferences, diagonalReverseBase, numDiagonals);\n\t\t\tfor (diagonal = diagonalReverseStart; diagonal <= diagonalReverseEnd; diagonal += 2) {\n\t\t\t\t// STEP 1: We extend the furthest reaching point in the present diagonal\n\t\t\t\t// by looking at the diagonals above and below and picking the one whose point\n\t\t\t\t// is further away from the start point (originalEnd, modifiedEnd)\n\t\t\t\tif (diagonal === diagonalReverseStart || (diagonal < diagonalReverseEnd && reversePoints[diagonal - 1] >= reversePoints[diagonal + 1])) {\n\t\t\t\t\toriginalIndex = reversePoints[diagonal + 1] - 1;\n\t\t\t\t} else {\n\t\t\t\t\toriginalIndex = reversePoints[diagonal - 1];\n\t\t\t\t}\n\t\t\t\tmodifiedIndex = originalIndex - (diagonal - diagonalReverseBase) - diagonalReverseOffset;\n\n\t\t\t\t// Save the current originalIndex so we can test for false overlap\n\t\t\t\ttempOriginalIndex = originalIndex;\n\n\t\t\t\t// STEP 2: We can continue to extend the furthest reaching point in the present diagonal\n\t\t\t\t// as long as the elements are equal.\n\t\t\t\twhile (originalIndex > originalStart && modifiedIndex > modifiedStart && this.ElementsAreEqual(originalIndex, modifiedIndex)) {\n\t\t\t\t\toriginalIndex--;\n\t\t\t\t\tmodifiedIndex--;\n\t\t\t\t}\n\t\t\t\treversePoints[diagonal] = originalIndex;\n\n\t\t\t\t// STEP 4: If delta is even (overlap first happens on reverse when delta is even)\n\t\t\t\t// and diagonal is in the range of forward diagonals computed for numDifferences\n\t\t\t\t// then check for overlap.\n\t\t\t\tif (deltaIsEven && Math.abs(diagonal - diagonalForwardBase) <= numDifferences) {\n\t\t\t\t\tif (originalIndex <= forwardPoints[diagonal]) {\n\t\t\t\t\t\tmidOriginalArr[0] = originalIndex;\n\t\t\t\t\t\tmidModifiedArr[0] = modifiedIndex;\n\n\t\t\t\t\t\tif (tempOriginalIndex >= forwardPoints[diagonal] && MaxDifferencesHistory > 0 && numDifferences <= (MaxDifferencesHistory + 1)) {\n\t\t\t\t\t\t\t// BINGO! We overlapped, and we have the full trace in memory!\n\t\t\t\t\t\t\treturn this.WALKTRACE(diagonalForwardBase, diagonalForwardStart, diagonalForwardEnd, diagonalForwardOffset,\n\t\t\t\t\t\t\t\tdiagonalReverseBase, diagonalReverseStart, diagonalReverseEnd, diagonalReverseOffset,\n\t\t\t\t\t\t\t\tforwardPoints, reversePoints,\n\t\t\t\t\t\t\t\toriginalIndex, originalEnd, midOriginalArr,\n\t\t\t\t\t\t\t\tmodifiedIndex, modifiedEnd, midModifiedArr,\n\t\t\t\t\t\t\t\tdeltaIsEven, quitEarlyArr\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t// Either false overlap, or we didn't have enough memory for the full trace\n\t\t\t\t\t\t\t// Just return the recursion point\n\t\t\t\t\t\t\treturn null;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Save current vectors to history before the next iteration\n\t\t\tif (numDifferences <= MaxDifferencesHistory) {\n\t\t\t\t// We are allocating space for one extra int, which we fill with\n\t\t\t\t// the index of the diagonal base index\n\t\t\t\tlet temp: number[] = new Array<number>(diagonalForwardEnd - diagonalForwardStart + 2);\n\t\t\t\ttemp[0] = diagonalForwardBase - diagonalForwardStart + 1;\n\t\t\t\tMyArray.Copy(forwardPoints, diagonalForwardStart, temp, 1, diagonalForwardEnd - diagonalForwardStart + 1);\n\t\t\t\tthis.m_forwardHistory.push(temp);\n\n\t\t\t\ttemp = new Array<number>(diagonalReverseEnd - diagonalReverseStart + 2);\n\t\t\t\ttemp[0] = diagonalReverseBase - diagonalReverseStart + 1;\n\t\t\t\tMyArray.Copy(reversePoints, diagonalReverseStart, temp, 1, diagonalReverseEnd - diagonalReverseStart + 1);\n\t\t\t\tthis.m_reverseHistory.push(temp);\n\t\t\t}\n\n\t\t}\n\n\n\n\t\t// If we got here, then we have the full trace in history. We just have to convert it to a change list\n\t\t// NOTE: This part is a bit messy\n\t\treturn this.WALKTRACE(diagonalForwardBase, diagonalForwardStart, diagonalForwardEnd, diagonalForwardOffset,\n\t\t\tdiagonalReverseBase, diagonalReverseStart, diagonalReverseEnd, diagonalReverseOffset,\n\t\t\tforwardPoints, reversePoints,\n\t\t\toriginalIndex, originalEnd, midOriginalArr,\n\t\t\tmodifiedIndex, modifiedEnd, midModifiedArr,\n\t\t\tdeltaIsEven, quitEarlyArr\n\t\t);\n\t}\n\n\t/**\n\t * Shifts the given changes to provide a more intuitive diff.\n\t * While the first element in a diff matches the first element after the diff,\n\t * we shift the diff down.\n\t *\n\t * @param changes The list of changes to shift\n\t * @returns The shifted changes\n\t */\n\tprivate PrettifyChanges(changes: DiffChange[]): DiffChange[] {\n\n\t\t// Shift all the changes down first\n\t\tfor (let i = 0; i < changes.length; i++) {\n\t\t\tconst change = changes[i];\n\t\t\tconst originalStop = (i < changes.length - 1) ? changes[i + 1].originalStart : this.OriginalSequence.getLength();\n\t\t\tconst modifiedStop = (i < changes.length - 1) ? changes[i + 1].modifiedStart : this.ModifiedSequence.getLength();\n\t\t\tconst checkOriginal = change.originalLength > 0;\n\t\t\tconst checkModified = change.modifiedLength > 0;\n\n\t\t\twhile (change.originalStart + change.originalLength < originalStop &&\n\t\t\t\tchange.modifiedStart + change.modifiedLength < modifiedStop &&\n\t\t\t\t(!checkOriginal || this.OriginalElementsAreEqual(change.originalStart, change.originalStart + change.originalLength)) &&\n\t\t\t\t(!checkModified || this.ModifiedElementsAreEqual(change.modifiedStart, change.modifiedStart + change.modifiedLength))) {\n\t\t\t\tchange.originalStart++;\n\t\t\t\tchange.modifiedStart++;\n\t\t\t}\n\n\t\t\tlet mergedChangeArr: Array<DiffChange | null> = [null];\n\t\t\tif (i < changes.length - 1 && this.ChangesOverlap(changes[i], changes[i + 1], mergedChangeArr)) {\n\t\t\t\tchanges[i] = mergedChangeArr[0]!;\n\t\t\t\tchanges.splice(i + 1, 1);\n\t\t\t\ti--;\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t}\n\n\t\t// Shift changes back up until we hit empty or whitespace-only lines\n\t\tfor (let i = changes.length - 1; i >= 0; i--) {\n\t\t\tconst change = changes[i];\n\n\t\t\tlet originalStop = 0;\n\t\t\tlet modifiedStop = 0;\n\t\t\tif (i > 0) {\n\t\t\t\tconst prevChange = changes[i - 1];\n\t\t\t\tif (prevChange.originalLength > 0) {\n\t\t\t\t\toriginalStop = prevChange.originalStart + prevChange.originalLength;\n\t\t\t\t}\n\t\t\t\tif (prevChange.modifiedLength > 0) {\n\t\t\t\t\tmodifiedStop = prevChange.modifiedStart + prevChange.modifiedLength;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tconst checkOriginal = change.originalLength > 0;\n\t\t\tconst checkModified = change.modifiedLength > 0;\n\n\t\t\tlet bestDelta = 0;\n\t\t\tlet bestScore = this._boundaryScore(change.originalStart, change.originalLength, change.modifiedStart, change.modifiedLength);\n\n\t\t\tfor (let delta = 1; ; delta++) {\n\t\t\t\tlet originalStart = change.originalStart - delta;\n\t\t\t\tlet modifiedStart = change.modifiedStart - delta;\n\n\t\t\t\tif (originalStart < originalStop || modifiedStart < modifiedStop) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t\tif (checkOriginal && !this.OriginalElementsAreEqual(originalStart, originalStart + change.originalLength)) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t\tif (checkModified && !this.ModifiedElementsAreEqual(modifiedStart, modifiedStart + change.modifiedLength)) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t\tlet score = this._boundaryScore(originalStart, change.originalLength, modifiedStart, change.modifiedLength);\n\n\t\t\t\tif (score > bestScore) {\n\t\t\t\t\tbestScore = score;\n\t\t\t\t\tbestDelta = delta;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tchange.originalStart -= bestDelta;\n\t\t\tchange.modifiedStart -= bestDelta;\n\t\t}\n\n\t\treturn changes;\n\t}\n\n\tprivate _OriginalIsBoundary(index: number): boolean {\n\t\tif (index <= 0 || index >= this.OriginalSequence.getLength() - 1) {\n\t\t\treturn true;\n\t\t}\n\t\tconst element = this.OriginalSequence.getElementAtIndex(index);\n\t\treturn (typeof element === 'string' && /^\\s*$/.test(element));\n\t}\n\n\tprivate _OriginalRegionIsBoundary(originalStart: number, originalLength: number): boolean {\n\t\tif (this._OriginalIsBoundary(originalStart) || this._OriginalIsBoundary(originalStart - 1)) {\n\t\t\treturn true;\n\t\t}\n\t\tif (originalLength > 0) {\n\t\t\tlet originalEnd = originalStart + originalLength;\n\t\t\tif (this._OriginalIsBoundary(originalEnd - 1) || this._OriginalIsBoundary(originalEnd)) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t}\n\n\tprivate _ModifiedIsBoundary(index: number): boolean {\n\t\tif (index <= 0 || index >= this.ModifiedSequence.getLength() - 1) {\n\t\t\treturn true;\n\t\t}\n\t\tconst element = this.ModifiedSequence.getElementAtIndex(index);\n\t\treturn (typeof element === 'string' && /^\\s*$/.test(element));\n\t}\n\n\tprivate _ModifiedRegionIsBoundary(modifiedStart: number, modifiedLength: number): boolean {\n\t\tif (this._ModifiedIsBoundary(modifiedStart) || this._ModifiedIsBoundary(modifiedStart - 1)) {\n\t\t\treturn true;\n\t\t}\n\t\tif (modifiedLength > 0) {\n\t\t\tlet modifiedEnd = modifiedStart + modifiedLength;\n\t\t\tif (this._ModifiedIsBoundary(modifiedEnd - 1) || this._ModifiedIsBoundary(modifiedEnd)) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t}\n\n\tprivate _boundaryScore(originalStart: number, originalLength: number, modifiedStart: number, modifiedLength: number): number {\n\t\tlet originalScore = (this._OriginalRegionIsBoundary(originalStart, originalLength) ? 1 : 0);\n\t\tlet modifiedScore = (this._ModifiedRegionIsBoundary(modifiedStart, modifiedLength) ? 1 : 0);\n\t\treturn (originalScore + modifiedScore);\n\t}\n\n\t/**\n\t * Concatenates the two input DiffChange lists and returns the resulting\n\t * list.\n\t * @param The left changes\n\t * @param The right changes\n\t * @returns The concatenated list\n\t */\n\tprivate ConcatenateChanges(left: DiffChange[], right: DiffChange[]): DiffChange[] {\n\t\tlet mergedChangeArr: DiffChange[] = [];\n\n\t\tif (left.length === 0 || right.length === 0) {\n\t\t\treturn (right.length > 0) ? right : left;\n\t\t} else if (this.ChangesOverlap(left[left.length - 1], right[0], mergedChangeArr)) {\n\t\t\t// Since we break the problem down recursively, it is possible that we\n\t\t\t// might recurse in the middle of a change thereby splitting it into\n\t\t\t// two changes. Here in the combining stage, we detect and fuse those\n\t\t\t// changes back together\n\t\t\tlet result = new Array<DiffChange>(left.length + right.length - 1);\n\t\t\tMyArray.Copy(left, 0, result, 0, left.length - 1);\n\t\t\tresult[left.length - 1] = mergedChangeArr[0];\n\t\t\tMyArray.Copy(right, 1, result, left.length, right.length - 1);\n\n\t\t\treturn result;\n\t\t} else {\n\t\t\tlet result = new Array<DiffChange>(left.length + right.length);\n\t\t\tMyArray.Copy(left, 0, result, 0, left.length);\n\t\t\tMyArray.Copy(right, 0, result, left.length, right.length);\n\n\t\t\treturn result;\n\t\t}\n\t}\n\n\t/**\n\t * Returns true if the two changes overlap and can be merged into a single\n\t * change\n\t * @param left The left change\n\t * @param right The right change\n\t * @param mergedChange The merged change if the two overlap, null otherwise\n\t * @returns True if the two changes overlap\n\t */\n\tprivate ChangesOverlap(left: DiffChange, right: DiffChange, mergedChangeArr: Array<DiffChange | null>): boolean {\n\t\tDebug.Assert(left.originalStart <= right.originalStart, 'Left change is not less than or equal to right change');\n\t\tDebug.Assert(left.modifiedStart <= right.modifiedStart, 'Left change is not less than or equal to right change');\n\n\t\tif (left.originalStart + left.originalLength >= right.originalStart || left.modifiedStart + left.modifiedLength >= right.modifiedStart) {\n\t\t\tlet originalStart = left.originalStart;\n\t\t\tlet originalLength = left.originalLength;\n\t\t\tlet modifiedStart = left.modifiedStart;\n\t\t\tlet modifiedLength = left.modifiedLength;\n\n\t\t\tif (left.originalStart + left.originalLength >= right.originalStart) {\n\t\t\t\toriginalLength = right.originalStart + right.originalLength - left.originalStart;\n\t\t\t}\n\t\t\tif (left.modifiedStart + left.modifiedLength >= right.modifiedStart) {\n\t\t\t\tmodifiedLength = right.modifiedStart + right.modifiedLength - left.modifiedStart;\n\t\t\t}\n\n\t\t\tmergedChangeArr[0] = new DiffChange(originalStart, originalLength, modifiedStart, modifiedLength);\n\t\t\treturn true;\n\t\t} else {\n\t\t\tmergedChangeArr[0] = null;\n\t\t\treturn false;\n\t\t}\n\t}\n\n\t/**\n\t * Helper method used to clip a diagonal index to the range of valid\n\t * diagonals. This also decides whether or not the diagonal index,\n\t * if it exceeds the boundary, should be clipped to the boundary or clipped\n\t * one inside the boundary depending on the Even/Odd status of the boundary\n\t * and numDifferences.\n\t * @param diagonal The index of the diagonal to clip.\n\t * @param numDifferences The current number of differences being iterated upon.\n\t * @param diagonalBaseIndex The base reference diagonal.\n\t * @param numDiagonals The total number of diagonals.\n\t * @returns The clipped diagonal index.\n\t */\n\tprivate ClipDiagonalBound(diagonal: number, numDifferences: number, diagonalBaseIndex: number, numDiagonals: number): number {\n\t\tif (diagonal >= 0 && diagonal < numDiagonals) {\n\t\t\t// Nothing to clip, its in range\n\t\t\treturn diagonal;\n\t\t}\n\n\t\t// diagonalsBelow: The number of diagonals below the reference diagonal\n\t\t// diagonalsAbove: The number of diagonals above the reference diagonal\n\t\tlet diagonalsBelow = diagonalBaseIndex;\n\t\tlet diagonalsAbove = numDiagonals - diagonalBaseIndex - 1;\n\t\tlet diffEven = (numDifferences % 2 === 0);\n\n\t\tif (diagonal < 0) {\n\t\t\tlet lowerBoundEven = (diagonalsBelow % 2 === 0);\n\t\t\treturn (diffEven === lowerBoundEven) ? 0 : 1;\n\t\t} else {\n\t\t\tlet upperBoundEven = (diagonalsAbove % 2 === 0);\n\t\t\treturn (diffEven === upperBoundEven) ? numDiagonals - 1 : numDiagonals - 2;\n\t\t}\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nexport interface ErrorListenerCallback {\n\t(error: any): void;\n}\n\n// Avoid circular dependency on EventEmitter by implementing a subset of the interface.\nexport class ErrorHandler {\n\tprivate unexpectedErrorHandler: (e: any) => void;\n\tprivate listeners: ErrorListenerCallback[];\n\n\tconstructor() {\n\n\t\tthis.listeners = [];\n\n\t\tthis.unexpectedErrorHandler = function (e: any) {\n\t\t\tsetTimeout(() => {\n\t\t\t\tif (e.stack) {\n\t\t\t\t\tthrow new Error(e.message + '\\n\\n' + e.stack);\n\t\t\t\t}\n\n\t\t\t\tthrow e;\n\t\t\t}, 0);\n\t\t};\n\t}\n\n\tprivate emit(e: any): void {\n\t\tthis.listeners.forEach((listener) => {\n\t\t\tlistener(e);\n\t\t});\n\t}\n\n\tpublic onUnexpectedError(e: any): void {\n\t\tthis.unexpectedErrorHandler(e);\n\t\tthis.emit(e);\n\t}\n\n\t// For external errors, we don't want the listeners to be called\n\tpublic onUnexpectedExternalError(e: any): void {\n\t\tthis.unexpectedErrorHandler(e);\n\t}\n}\n\nexport const errorHandler = new ErrorHandler();\n\nexport function onUnexpectedError(e: any): undefined {\n\t// ignore errors from cancelled promises\n\tif (!isPromiseCanceledError(e)) {\n\t\terrorHandler.onUnexpectedError(e);\n\t}\n\treturn undefined;\n}\n\nexport function onUnexpectedExternalError(e: any): undefined {\n\t// ignore errors from cancelled promises\n\tif (!isPromiseCanceledError(e)) {\n\t\terrorHandler.onUnexpectedExternalError(e);\n\t}\n\treturn undefined;\n}\n\nexport interface SerializedError {\n}\n\nexport function transformErrorForSerialization(error: Error): SerializedError;\nexport function transformErrorForSerialization(error: any): any;\nexport function transformErrorForSerialization(error: any): any {\n\tif (error instanceof Error) {\n\t\tlet { name, message } = error;\n\t\tconst stack: string = (<any>error).stacktrace || (<any>error).stack;\n\t\treturn {\n\t\t\t$isError: true,\n\t\t\tname,\n\t\t\tmessage,\n\t\t\tstack\n\t\t};\n\t}\n\n\t// return as is\n\treturn error;\n}\n\nconst canceledName = 'Canceled';\n\n/**\n * Checks if the given error is a promise in canceled state\n */\nexport function isPromiseCanceledError(error: any): boolean {\n\treturn error instanceof Error && error.name === canceledName && error.message === canceledName;\n}\n\n/**\n * Returns an error that signals cancellation.\n */\nexport function canceled(): Error {\n\tconst error = new Error(canceledName);\n\terror.name = error.message;\n\treturn error;\n}\n\nexport function illegalArgument(name?: string): Error {\n\tif (name) {\n\t\treturn new Error(`Illegal argument: ${name}`);\n\t} else {\n\t\treturn new Error('Illegal argument');\n\t}\n}\n\nexport function illegalState(name?: string): Error {\n\tif (name) {\n\t\treturn new Error(`Illegal state: ${name}`);\n\t} else {\n\t\treturn new Error('Illegal state');\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nexport function once<T extends Function>(this: any, fn: T): T {\n\tconst _this = this;\n\tlet didCall = false;\n\tlet result: any;\n\n\treturn function () {\n\t\tif (didCall) {\n\t\t\treturn result;\n\t\t}\n\n\t\tdidCall = true;\n\t\tresult = fn.apply(_this, arguments);\n\n\t\treturn result;\n\t} as any as T;\n}","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nexport interface IteratorDefinedResult<T> {\n\treadonly done: false;\n\treadonly value: T;\n}\nexport interface IteratorUndefinedResult {\n\treadonly done: true;\n\treadonly value: undefined;\n}\nexport const FIN: IteratorUndefinedResult = { done: true, value: undefined };\nexport type IteratorResult<T> = IteratorDefinedResult<T> | IteratorUndefinedResult;\n\nexport interface Iterator<T> {\n\tnext(): IteratorResult<T>;\n}\n\nexport module Iterator {\n\tconst _empty: Iterator<any> = {\n\t\tnext() {\n\t\t\treturn FIN;\n\t\t}\n\t};\n\n\texport function empty<T>(): Iterator<T> {\n\t\treturn _empty;\n\t}\n\n\texport function fromArray<T>(array: T[], index = 0, length = array.length): Iterator<T> {\n\t\treturn {\n\t\t\tnext(): IteratorResult<T> {\n\t\t\t\tif (index >= length) {\n\t\t\t\t\treturn FIN;\n\t\t\t\t}\n\n\t\t\t\treturn { done: false, value: array[index++] };\n\t\t\t}\n\t\t};\n\t}\n\n\texport function from<T>(elements: Iterator<T> | T[] | undefined): Iterator<T> {\n\t\tif (!elements) {\n\t\t\treturn Iterator.empty();\n\t\t} else if (Array.isArray(elements)) {\n\t\t\treturn Iterator.fromArray(elements);\n\t\t} else {\n\t\t\treturn elements;\n\t\t}\n\t}\n\n\texport function map<T, R>(iterator: Iterator<T>, fn: (t: T) => R): Iterator<R> {\n\t\treturn {\n\t\t\tnext() {\n\t\t\t\tconst element = iterator.next();\n\t\t\t\tif (element.done) {\n\t\t\t\t\treturn FIN;\n\t\t\t\t} else {\n\t\t\t\t\treturn { done: false, value: fn(element.value) };\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t}\n\n\texport function filter<T>(iterator: Iterator<T>, fn: (t: T) => boolean): Iterator<T> {\n\t\treturn {\n\t\t\tnext() {\n\t\t\t\twhile (true) {\n\t\t\t\t\tconst element = iterator.next();\n\t\t\t\t\tif (element.done) {\n\t\t\t\t\t\treturn FIN;\n\t\t\t\t\t}\n\t\t\t\t\tif (fn(element.value)) {\n\t\t\t\t\t\treturn { done: false, value: element.value };\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t}\n\n\texport function forEach<T>(iterator: Iterator<T>, fn: (t: T) => void): void {\n\t\tfor (let next = iterator.next(); !next.done; next = iterator.next()) {\n\t\t\tfn(next.value);\n\t\t}\n\t}\n\n\texport function collect<T>(iterator: Iterator<T>): T[] {\n\t\tconst result: T[] = [];\n\t\tforEach(iterator, value => result.push(value));\n\t\treturn result;\n\t}\n}\n\nexport type ISequence<T> = Iterator<T> | T[];\n\nexport function getSequenceIterator<T>(arg: Iterator<T> | T[]): Iterator<T> {\n\tif (Array.isArray(arg)) {\n\t\treturn Iterator.fromArray(arg);\n\t} else {\n\t\treturn arg;\n\t}\n}\n\nexport interface INextIterator<T> {\n\tnext(): T | null;\n}\n\nexport class ArrayIterator<T> implements INextIterator<T> {\n\n\tprivate items: T[];\n\tprotected start: number;\n\tprotected end: number;\n\tprotected index: number;\n\n\tconstructor(items: T[], start: number = 0, end: number = items.length, index = start - 1) {\n\t\tthis.items = items;\n\t\tthis.start = start;\n\t\tthis.end = end;\n\t\tthis.index = index;\n\t}\n\n\tpublic next(): T | null {\n\t\tthis.index = Math.min(this.index + 1, this.end);\n\t\treturn this.current();\n\t}\n\n\tprotected current(): T | null {\n\t\tif (this.index === this.start - 1 || this.index === this.end) {\n\t\t\treturn null;\n\t\t}\n\n\t\treturn this.items[this.index];\n\t}\n}\n\nexport class ArrayNavigator<T> extends ArrayIterator<T> implements INavigator<T> {\n\n\tconstructor(items: T[], start: number = 0, end: number = items.length, index = start - 1) {\n\t\tsuper(items, start, end, index);\n\t}\n\n\tpublic current(): T | null {\n\t\treturn super.current();\n\t}\n\n\tpublic previous(): T | null {\n\t\tthis.index = Math.max(this.index - 1, this.start - 1);\n\t\treturn this.current();\n\t}\n\n\tpublic first(): T | null {\n\t\tthis.index = this.start;\n\t\treturn this.current();\n\t}\n\n\tpublic last(): T | null {\n\t\tthis.index = this.end - 1;\n\t\treturn this.current();\n\t}\n\n\tpublic parent(): T | null {\n\t\treturn null;\n\t}\n}\n\nexport class MappedIterator<T, R> implements INextIterator<R> {\n\n\tconstructor(protected iterator: INextIterator<T>, protected fn: (item: T | null) => R) {\n\t\t// noop\n\t}\n\n\tnext() { return this.fn(this.iterator.next()); }\n}\n\nexport interface INavigator<T> extends INextIterator<T> {\n\tprevious(): T | null;\n\tparent(): T | null;\n\tfirst(): T | null;\n\tlast(): T | null;\n\tnext(): T | null;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { OperatingSystem } from 'vs/base/common/platform';\nimport { illegalArgument } from 'vs/base/common/errors';\n\n/**\n * Virtual Key Codes, the value does not hold any inherent meaning.\n * Inspired somewhat from https://msdn.microsoft.com/en-us/library/windows/desktop/dd375731(v=vs.85).aspx\n * But these are \"more general\", as they should work across browsers & OS`s.\n */\nexport const enum KeyCode {\n\t/**\n\t * Placed first to cover the 0 value of the enum.\n\t */\n\tUnknown = 0,\n\n\tBackspace = 1,\n\tTab = 2,\n\tEnter = 3,\n\tShift = 4,\n\tCtrl = 5,\n\tAlt = 6,\n\tPauseBreak = 7,\n\tCapsLock = 8,\n\tEscape = 9,\n\tSpace = 10,\n\tPageUp = 11,\n\tPageDown = 12,\n\tEnd = 13,\n\tHome = 14,\n\tLeftArrow = 15,\n\tUpArrow = 16,\n\tRightArrow = 17,\n\tDownArrow = 18,\n\tInsert = 19,\n\tDelete = 20,\n\n\tKEY_0 = 21,\n\tKEY_1 = 22,\n\tKEY_2 = 23,\n\tKEY_3 = 24,\n\tKEY_4 = 25,\n\tKEY_5 = 26,\n\tKEY_6 = 27,\n\tKEY_7 = 28,\n\tKEY_8 = 29,\n\tKEY_9 = 30,\n\n\tKEY_A = 31,\n\tKEY_B = 32,\n\tKEY_C = 33,\n\tKEY_D = 34,\n\tKEY_E = 35,\n\tKEY_F = 36,\n\tKEY_G = 37,\n\tKEY_H = 38,\n\tKEY_I = 39,\n\tKEY_J = 40,\n\tKEY_K = 41,\n\tKEY_L = 42,\n\tKEY_M = 43,\n\tKEY_N = 44,\n\tKEY_O = 45,\n\tKEY_P = 46,\n\tKEY_Q = 47,\n\tKEY_R = 48,\n\tKEY_S = 49,\n\tKEY_T = 50,\n\tKEY_U = 51,\n\tKEY_V = 52,\n\tKEY_W = 53,\n\tKEY_X = 54,\n\tKEY_Y = 55,\n\tKEY_Z = 56,\n\n\tMeta = 57,\n\tContextMenu = 58,\n\n\tF1 = 59,\n\tF2 = 60,\n\tF3 = 61,\n\tF4 = 62,\n\tF5 = 63,\n\tF6 = 64,\n\tF7 = 65,\n\tF8 = 66,\n\tF9 = 67,\n\tF10 = 68,\n\tF11 = 69,\n\tF12 = 70,\n\tF13 = 71,\n\tF14 = 72,\n\tF15 = 73,\n\tF16 = 74,\n\tF17 = 75,\n\tF18 = 76,\n\tF19 = 77,\n\n\tNumLock = 78,\n\tScrollLock = 79,\n\n\t/**\n\t * Used for miscellaneous characters; it can vary by keyboard.\n\t * For the US standard keyboard, the ';:' key\n\t */\n\tUS_SEMICOLON = 80,\n\t/**\n\t * For any country/region, the '+' key\n\t * For the US standard keyboard, the '=+' key\n\t */\n\tUS_EQUAL = 81,\n\t/**\n\t * For any country/region, the ',' key\n\t * For the US standard keyboard, the ',<' key\n\t */\n\tUS_COMMA = 82,\n\t/**\n\t * For any country/region, the '-' key\n\t * For the US standard keyboard, the '-_' key\n\t */\n\tUS_MINUS = 83,\n\t/**\n\t * For any country/region, the '.' key\n\t * For the US standard keyboard, the '.>' key\n\t */\n\tUS_DOT = 84,\n\t/**\n\t * Used for miscellaneous characters; it can vary by keyboard.\n\t * For the US standard keyboard, the '/?' key\n\t */\n\tUS_SLASH = 85,\n\t/**\n\t * Used for miscellaneous characters; it can vary by keyboard.\n\t * For the US standard keyboard, the '`~' key\n\t */\n\tUS_BACKTICK = 86,\n\t/**\n\t * Used for miscellaneous characters; it can vary by keyboard.\n\t * For the US standard keyboard, the '[{' key\n\t */\n\tUS_OPEN_SQUARE_BRACKET = 87,\n\t/**\n\t * Used for miscellaneous characters; it can vary by keyboard.\n\t * For the US standard keyboard, the '\\|' key\n\t */\n\tUS_BACKSLASH = 88,\n\t/**\n\t * Used for miscellaneous characters; it can vary by keyboard.\n\t * For the US standard keyboard, the ']}' key\n\t */\n\tUS_CLOSE_SQUARE_BRACKET = 89,\n\t/**\n\t * Used for miscellaneous characters; it can vary by keyboard.\n\t * For the US standard keyboard, the ''\"' key\n\t */\n\tUS_QUOTE = 90,\n\t/**\n\t * Used for miscellaneous characters; it can vary by keyboard.\n\t */\n\tOEM_8 = 91,\n\t/**\n\t * Either the angle bracket key or the backslash key on the RT 102-key keyboard.\n\t */\n\tOEM_102 = 92,\n\n\tNUMPAD_0 = 93, // VK_NUMPAD0, 0x60, Numeric keypad 0 key\n\tNUMPAD_1 = 94, // VK_NUMPAD1, 0x61, Numeric keypad 1 key\n\tNUMPAD_2 = 95, // VK_NUMPAD2, 0x62, Numeric keypad 2 key\n\tNUMPAD_3 = 96, // VK_NUMPAD3, 0x63, Numeric keypad 3 key\n\tNUMPAD_4 = 97, // VK_NUMPAD4, 0x64, Numeric keypad 4 key\n\tNUMPAD_5 = 98, // VK_NUMPAD5, 0x65, Numeric keypad 5 key\n\tNUMPAD_6 = 99, // VK_NUMPAD6, 0x66, Numeric keypad 6 key\n\tNUMPAD_7 = 100, // VK_NUMPAD7, 0x67, Numeric keypad 7 key\n\tNUMPAD_8 = 101, // VK_NUMPAD8, 0x68, Numeric keypad 8 key\n\tNUMPAD_9 = 102, // VK_NUMPAD9, 0x69, Numeric keypad 9 key\n\n\tNUMPAD_MULTIPLY = 103,\t// VK_MULTIPLY, 0x6A, Multiply key\n\tNUMPAD_ADD = 104,\t\t// VK_ADD, 0x6B, Add key\n\tNUMPAD_SEPARATOR = 105,\t// VK_SEPARATOR, 0x6C, Separator key\n\tNUMPAD_SUBTRACT = 106,\t// VK_SUBTRACT, 0x6D, Subtract key\n\tNUMPAD_DECIMAL = 107,\t// VK_DECIMAL, 0x6E, Decimal key\n\tNUMPAD_DIVIDE = 108,\t// VK_DIVIDE, 0x6F,\n\n\t/**\n\t * Cover all key codes when IME is processing input.\n\t */\n\tKEY_IN_COMPOSITION = 109,\n\n\tABNT_C1 = 110, // Brazilian (ABNT) Keyboard\n\tABNT_C2 = 111, // Brazilian (ABNT) Keyboard\n\n\t/**\n\t * Placed last to cover the length of the enum.\n\t * Please do not depend on this value!\n\t */\n\tMAX_VALUE\n}\n\nclass KeyCodeStrMap {\n\n\tprivate _keyCodeToStr: string[];\n\tprivate _strToKeyCode: { [str: string]: KeyCode; };\n\n\tconstructor() {\n\t\tthis._keyCodeToStr = [];\n\t\tthis._strToKeyCode = Object.create(null);\n\t}\n\n\tdefine(keyCode: KeyCode, str: string): void {\n\t\tthis._keyCodeToStr[keyCode] = str;\n\t\tthis._strToKeyCode[str.toLowerCase()] = keyCode;\n\t}\n\n\tkeyCodeToStr(keyCode: KeyCode): string {\n\t\treturn this._keyCodeToStr[keyCode];\n\t}\n\n\tstrToKeyCode(str: string): KeyCode {\n\t\treturn this._strToKeyCode[str.toLowerCase()] || KeyCode.Unknown;\n\t}\n}\n\nconst uiMap = new KeyCodeStrMap();\nconst userSettingsUSMap = new KeyCodeStrMap();\nconst userSettingsGeneralMap = new KeyCodeStrMap();\n\n(function () {\n\n\tfunction define(keyCode: KeyCode, uiLabel: string, usUserSettingsLabel: string = uiLabel, generalUserSettingsLabel: string = usUserSettingsLabel): void {\n\t\tuiMap.define(keyCode, uiLabel);\n\t\tuserSettingsUSMap.define(keyCode, usUserSettingsLabel);\n\t\tuserSettingsGeneralMap.define(keyCode, generalUserSettingsLabel);\n\t}\n\n\tdefine(KeyCode.Unknown, 'unknown');\n\n\tdefine(KeyCode.Backspace, 'Backspace');\n\tdefine(KeyCode.Tab, 'Tab');\n\tdefine(KeyCode.Enter, 'Enter');\n\tdefine(KeyCode.Shift, 'Shift');\n\tdefine(KeyCode.Ctrl, 'Ctrl');\n\tdefine(KeyCode.Alt, 'Alt');\n\tdefine(KeyCode.PauseBreak, 'PauseBreak');\n\tdefine(KeyCode.CapsLock, 'CapsLock');\n\tdefine(KeyCode.Escape, 'Escape');\n\tdefine(KeyCode.Space, 'Space');\n\tdefine(KeyCode.PageUp, 'PageUp');\n\tdefine(KeyCode.PageDown, 'PageDown');\n\tdefine(KeyCode.End, 'End');\n\tdefine(KeyCode.Home, 'Home');\n\n\tdefine(KeyCode.LeftArrow, 'LeftArrow', 'Left');\n\tdefine(KeyCode.UpArrow, 'UpArrow', 'Up');\n\tdefine(KeyCode.RightArrow, 'RightArrow', 'Right');\n\tdefine(KeyCode.DownArrow, 'DownArrow', 'Down');\n\tdefine(KeyCode.Insert, 'Insert');\n\tdefine(KeyCode.Delete, 'Delete');\n\n\tdefine(KeyCode.KEY_0, '0');\n\tdefine(KeyCode.KEY_1, '1');\n\tdefine(KeyCode.KEY_2, '2');\n\tdefine(KeyCode.KEY_3, '3');\n\tdefine(KeyCode.KEY_4, '4');\n\tdefine(KeyCode.KEY_5, '5');\n\tdefine(KeyCode.KEY_6, '6');\n\tdefine(KeyCode.KEY_7, '7');\n\tdefine(KeyCode.KEY_8, '8');\n\tdefine(KeyCode.KEY_9, '9');\n\n\tdefine(KeyCode.KEY_A, 'A');\n\tdefine(KeyCode.KEY_B, 'B');\n\tdefine(KeyCode.KEY_C, 'C');\n\tdefine(KeyCode.KEY_D, 'D');\n\tdefine(KeyCode.KEY_E, 'E');\n\tdefine(KeyCode.KEY_F, 'F');\n\tdefine(KeyCode.KEY_G, 'G');\n\tdefine(KeyCode.KEY_H, 'H');\n\tdefine(KeyCode.KEY_I, 'I');\n\tdefine(KeyCode.KEY_J, 'J');\n\tdefine(KeyCode.KEY_K, 'K');\n\tdefine(KeyCode.KEY_L, 'L');\n\tdefine(KeyCode.KEY_M, 'M');\n\tdefine(KeyCode.KEY_N, 'N');\n\tdefine(KeyCode.KEY_O, 'O');\n\tdefine(KeyCode.KEY_P, 'P');\n\tdefine(KeyCode.KEY_Q, 'Q');\n\tdefine(KeyCode.KEY_R, 'R');\n\tdefine(KeyCode.KEY_S, 'S');\n\tdefine(KeyCode.KEY_T, 'T');\n\tdefine(KeyCode.KEY_U, 'U');\n\tdefine(KeyCode.KEY_V, 'V');\n\tdefine(KeyCode.KEY_W, 'W');\n\tdefine(KeyCode.KEY_X, 'X');\n\tdefine(KeyCode.KEY_Y, 'Y');\n\tdefine(KeyCode.KEY_Z, 'Z');\n\n\tdefine(KeyCode.Meta, 'Meta');\n\tdefine(KeyCode.ContextMenu, 'ContextMenu');\n\n\tdefine(KeyCode.F1, 'F1');\n\tdefine(KeyCode.F2, 'F2');\n\tdefine(KeyCode.F3, 'F3');\n\tdefine(KeyCode.F4, 'F4');\n\tdefine(KeyCode.F5, 'F5');\n\tdefine(KeyCode.F6, 'F6');\n\tdefine(KeyCode.F7, 'F7');\n\tdefine(KeyCode.F8, 'F8');\n\tdefine(KeyCode.F9, 'F9');\n\tdefine(KeyCode.F10, 'F10');\n\tdefine(KeyCode.F11, 'F11');\n\tdefine(KeyCode.F12, 'F12');\n\tdefine(KeyCode.F13, 'F13');\n\tdefine(KeyCode.F14, 'F14');\n\tdefine(KeyCode.F15, 'F15');\n\tdefine(KeyCode.F16, 'F16');\n\tdefine(KeyCode.F17, 'F17');\n\tdefine(KeyCode.F18, 'F18');\n\tdefine(KeyCode.F19, 'F19');\n\n\tdefine(KeyCode.NumLock, 'NumLock');\n\tdefine(KeyCode.ScrollLock, 'ScrollLock');\n\n\tdefine(KeyCode.US_SEMICOLON, ';', ';', 'OEM_1');\n\tdefine(KeyCode.US_EQUAL, '=', '=', 'OEM_PLUS');\n\tdefine(KeyCode.US_COMMA, ',', ',', 'OEM_COMMA');\n\tdefine(KeyCode.US_MINUS, '-', '-', 'OEM_MINUS');\n\tdefine(KeyCode.US_DOT, '.', '.', 'OEM_PERIOD');\n\tdefine(KeyCode.US_SLASH, '/', '/', 'OEM_2');\n\tdefine(KeyCode.US_BACKTICK, '`', '`', 'OEM_3');\n\tdefine(KeyCode.ABNT_C1, 'ABNT_C1');\n\tdefine(KeyCode.ABNT_C2, 'ABNT_C2');\n\tdefine(KeyCode.US_OPEN_SQUARE_BRACKET, '[', '[', 'OEM_4');\n\tdefine(KeyCode.US_BACKSLASH, '\\\\', '\\\\', 'OEM_5');\n\tdefine(KeyCode.US_CLOSE_SQUARE_BRACKET, ']', ']', 'OEM_6');\n\tdefine(KeyCode.US_QUOTE, '\\'', '\\'', 'OEM_7');\n\tdefine(KeyCode.OEM_8, 'OEM_8');\n\tdefine(KeyCode.OEM_102, 'OEM_102');\n\n\tdefine(KeyCode.NUMPAD_0, 'NumPad0');\n\tdefine(KeyCode.NUMPAD_1, 'NumPad1');\n\tdefine(KeyCode.NUMPAD_2, 'NumPad2');\n\tdefine(KeyCode.NUMPAD_3, 'NumPad3');\n\tdefine(KeyCode.NUMPAD_4, 'NumPad4');\n\tdefine(KeyCode.NUMPAD_5, 'NumPad5');\n\tdefine(KeyCode.NUMPAD_6, 'NumPad6');\n\tdefine(KeyCode.NUMPAD_7, 'NumPad7');\n\tdefine(KeyCode.NUMPAD_8, 'NumPad8');\n\tdefine(KeyCode.NUMPAD_9, 'NumPad9');\n\n\tdefine(KeyCode.NUMPAD_MULTIPLY, 'NumPad_Multiply');\n\tdefine(KeyCode.NUMPAD_ADD, 'NumPad_Add');\n\tdefine(KeyCode.NUMPAD_SEPARATOR, 'NumPad_Separator');\n\tdefine(KeyCode.NUMPAD_SUBTRACT, 'NumPad_Subtract');\n\tdefine(KeyCode.NUMPAD_DECIMAL, 'NumPad_Decimal');\n\tdefine(KeyCode.NUMPAD_DIVIDE, 'NumPad_Divide');\n\n})();\n\nexport namespace KeyCodeUtils {\n\texport function toString(keyCode: KeyCode): string {\n\t\treturn uiMap.keyCodeToStr(keyCode);\n\t}\n\texport function fromString(key: string): KeyCode {\n\t\treturn uiMap.strToKeyCode(key);\n\t}\n\n\texport function toUserSettingsUS(keyCode: KeyCode): string {\n\t\treturn userSettingsUSMap.keyCodeToStr(keyCode);\n\t}\n\texport function toUserSettingsGeneral(keyCode: KeyCode): string {\n\t\treturn userSettingsGeneralMap.keyCodeToStr(keyCode);\n\t}\n\texport function fromUserSettings(key: string): KeyCode {\n\t\treturn userSettingsUSMap.strToKeyCode(key) || userSettingsGeneralMap.strToKeyCode(key);\n\t}\n}\n\n/**\n * Binary encoding strategy:\n * ```\n *    1111 11\n *    5432 1098 7654 3210\n *    ---- CSAW KKKK KKKK\n *  C = bit 11 = ctrlCmd flag\n *  S = bit 10 = shift flag\n *  A = bit 9 = alt flag\n *  W = bit 8 = winCtrl flag\n *  K = bits 0-7 = key code\n * ```\n */\nconst enum BinaryKeybindingsMask {\n\tCtrlCmd = (1 << 11) >>> 0,\n\tShift = (1 << 10) >>> 0,\n\tAlt = (1 << 9) >>> 0,\n\tWinCtrl = (1 << 8) >>> 0,\n\tKeyCode = 0x000000FF\n}\n\nexport const enum KeyMod {\n\tCtrlCmd = (1 << 11) >>> 0,\n\tShift = (1 << 10) >>> 0,\n\tAlt = (1 << 9) >>> 0,\n\tWinCtrl = (1 << 8) >>> 0,\n}\n\nexport function KeyChord(firstPart: number, secondPart: number): number {\n\tconst chordPart = ((secondPart & 0x0000FFFF) << 16) >>> 0;\n\treturn (firstPart | chordPart) >>> 0;\n}\n\nexport function createKeybinding(keybinding: number, OS: OperatingSystem): Keybinding | null {\n\tif (keybinding === 0) {\n\t\treturn null;\n\t}\n\tconst firstPart = (keybinding & 0x0000FFFF) >>> 0;\n\tconst chordPart = (keybinding & 0xFFFF0000) >>> 16;\n\tif (chordPart !== 0) {\n\t\treturn new ChordKeybinding([\n\t\t\tcreateSimpleKeybinding(firstPart, OS),\n\t\t\tcreateSimpleKeybinding(chordPart, OS)\n\t\t]);\n\t}\n\treturn new ChordKeybinding([createSimpleKeybinding(firstPart, OS)]);\n}\n\nexport function createSimpleKeybinding(keybinding: number, OS: OperatingSystem): SimpleKeybinding {\n\n\tconst ctrlCmd = (keybinding & BinaryKeybindingsMask.CtrlCmd ? true : false);\n\tconst winCtrl = (keybinding & BinaryKeybindingsMask.WinCtrl ? true : false);\n\n\tconst ctrlKey = (OS === OperatingSystem.Macintosh ? winCtrl : ctrlCmd);\n\tconst shiftKey = (keybinding & BinaryKeybindingsMask.Shift ? true : false);\n\tconst altKey = (keybinding & BinaryKeybindingsMask.Alt ? true : false);\n\tconst metaKey = (OS === OperatingSystem.Macintosh ? ctrlCmd : winCtrl);\n\tconst keyCode = (keybinding & BinaryKeybindingsMask.KeyCode);\n\n\treturn new SimpleKeybinding(ctrlKey, shiftKey, altKey, metaKey, keyCode);\n}\n\nexport class SimpleKeybinding {\n\tpublic readonly ctrlKey: boolean;\n\tpublic readonly shiftKey: boolean;\n\tpublic readonly altKey: boolean;\n\tpublic readonly metaKey: boolean;\n\tpublic readonly keyCode: KeyCode;\n\n\tconstructor(ctrlKey: boolean, shiftKey: boolean, altKey: boolean, metaKey: boolean, keyCode: KeyCode) {\n\t\tthis.ctrlKey = ctrlKey;\n\t\tthis.shiftKey = shiftKey;\n\t\tthis.altKey = altKey;\n\t\tthis.metaKey = metaKey;\n\t\tthis.keyCode = keyCode;\n\t}\n\n\tpublic equals(other: SimpleKeybinding): boolean {\n\t\treturn (\n\t\t\tthis.ctrlKey === other.ctrlKey\n\t\t\t&& this.shiftKey === other.shiftKey\n\t\t\t&& this.altKey === other.altKey\n\t\t\t&& this.metaKey === other.metaKey\n\t\t\t&& this.keyCode === other.keyCode\n\t\t);\n\t}\n\n\tpublic isModifierKey(): boolean {\n\t\treturn (\n\t\t\tthis.keyCode === KeyCode.Unknown\n\t\t\t|| this.keyCode === KeyCode.Ctrl\n\t\t\t|| this.keyCode === KeyCode.Meta\n\t\t\t|| this.keyCode === KeyCode.Alt\n\t\t\t|| this.keyCode === KeyCode.Shift\n\t\t);\n\t}\n\n\tpublic toChord(): ChordKeybinding {\n\t\treturn new ChordKeybinding([this]);\n\t}\n\n\t/**\n\t * Does this keybinding refer to the key code of a modifier and it also has the modifier flag?\n\t */\n\tpublic isDuplicateModifierCase(): boolean {\n\t\treturn (\n\t\t\t(this.ctrlKey && this.keyCode === KeyCode.Ctrl)\n\t\t\t|| (this.shiftKey && this.keyCode === KeyCode.Shift)\n\t\t\t|| (this.altKey && this.keyCode === KeyCode.Alt)\n\t\t\t|| (this.metaKey && this.keyCode === KeyCode.Meta)\n\t\t);\n\t}\n}\n\nexport class ChordKeybinding {\n\tpublic readonly parts: SimpleKeybinding[];\n\n\tconstructor(parts: SimpleKeybinding[]) {\n\t\tif (parts.length === 0) {\n\t\t\tthrow illegalArgument(`parts`);\n\t\t}\n\t\tthis.parts = parts;\n\t}\n\n\tpublic equals(other: ChordKeybinding | null): boolean {\n\t\tif (other === null) {\n\t\t\treturn false;\n\t\t}\n\t\tif (this.parts.length !== other.parts.length) {\n\t\t\treturn false;\n\t\t}\n\t\tfor (let i = 0; i < this.parts.length; i++) {\n\t\t\tif (!this.parts[i].equals(other.parts[i])) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t\treturn true;\n\t}\n}\n\nexport type Keybinding = ChordKeybinding;\n\nexport class ResolvedKeybindingPart {\n\treadonly ctrlKey: boolean;\n\treadonly shiftKey: boolean;\n\treadonly altKey: boolean;\n\treadonly metaKey: boolean;\n\n\treadonly keyLabel: string | null;\n\treadonly keyAriaLabel: string | null;\n\n\tconstructor(ctrlKey: boolean, shiftKey: boolean, altKey: boolean, metaKey: boolean, kbLabel: string | null, kbAriaLabel: string | null) {\n\t\tthis.ctrlKey = ctrlKey;\n\t\tthis.shiftKey = shiftKey;\n\t\tthis.altKey = altKey;\n\t\tthis.metaKey = metaKey;\n\t\tthis.keyLabel = kbLabel;\n\t\tthis.keyAriaLabel = kbAriaLabel;\n\t}\n}\n\n/**\n * A resolved keybinding. Can be a simple keybinding or a chord keybinding.\n */\nexport abstract class ResolvedKeybinding {\n\t/**\n\t * This prints the binding in a format suitable for displaying in the UI.\n\t */\n\tpublic abstract getLabel(): string | null;\n\t/**\n\t * This prints the binding in a format suitable for ARIA.\n\t */\n\tpublic abstract getAriaLabel(): string | null;\n\n\t/**\n\t * Is the binding a chord?\n\t */\n\tpublic abstract isChord(): boolean;\n\n\t/**\n\t * Returns the parts that comprise of the keybinding.\n\t * Simple keybindings return one element.\n\t */\n\tpublic abstract getParts(): ResolvedKeybindingPart[];\n\n\t/**\n\t * Returns the parts that should be used for dispatching.\n\t */\n\tpublic abstract getDispatchParts(): (string | null)[];\n}\n","\n\nexport interface IDisposable {\n\tdispose(): void;\n}\n\nexport function isDisposable<E extends object>(thing: E): thing is E & IDisposable {\n\treturn typeof (<IDisposable><any>thing).dispose === 'function'\n\t\t&& (<IDisposable><any>thing).dispose.length === 0;\n}\n\nexport function dispose<T extends IDisposable>(disposable: T): T;\nexport function dispose<T extends IDisposable>(...disposables: Array<T | undefined>): T[];\nexport function dispose<T extends IDisposable>(disposables: T[]): T[];\nexport function dispose<T extends IDisposable>(first: T | T[], ...rest: T[]): T | T[] | undefined {\n\tif (Array.isArray(first)) {\n\t\tfirst.forEach(d => d && d.dispose());\n\t\treturn [];\n\t} else if (rest.length === 0) {\n\t\tif (first) {\n\t\t\tfirst.dispose();\n\t\t\treturn first;\n\t\t}\n\t\treturn undefined;\n\t} else {\n\t\tdispose(first);\n\t\tdispose(rest);\n\t\treturn [];\n\t}\n}\n\nexport function combinedDisposable(disposables: IDisposable[]): IDisposable {\n\treturn { dispose: () => dispose(disposables) };\n}\n\nexport function toDisposable(fn: () => void): IDisposable {\n\treturn { dispose() { fn(); } };\n}\n\nexport abstract class Disposable implements IDisposable {\n\n\tstatic None = Object.freeze<IDisposable>({ dispose() { } });\n\n\tprotected _toDispose: IDisposable[] = [];\n\n\tprivate _lifecycle_disposable_isDisposed = false;\n\n\tpublic dispose(): void {\n\t\tthis._lifecycle_disposable_isDisposed = true;\n\t\tthis._toDispose = dispose(this._toDispose);\n\t}\n\n\tprotected _register<T extends IDisposable>(t: T): T {\n\t\tif (this._lifecycle_disposable_isDisposed) {\n\t\t\tconsole.warn('Registering disposable on object that has already been disposed.');\n\t\t\tt.dispose();\n\t\t} else {\n\t\t\tthis._toDispose.push(t);\n\t\t}\n\n\t\treturn t;\n\t}\n}\n\nexport interface IReference<T> extends IDisposable {\n\treadonly object: T;\n}\n\nexport class ImmortalReference<T> implements IReference<T> {\n\tconstructor(public object: T) { }\n\tdispose(): void { /* noop */ }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Iterator, IteratorResult, FIN } from 'vs/base/common/iterator';\n\nclass Node<E> {\n\n\tstatic readonly Undefined = new Node<any>(undefined);\n\n\telement: E;\n\tnext: Node<E>;\n\tprev: Node<E>;\n\n\tconstructor(element: E) {\n\t\tthis.element = element;\n\t\tthis.next = Node.Undefined;\n\t\tthis.prev = Node.Undefined;\n\t}\n}\n\nexport class LinkedList<E> {\n\n\tprivate _first: Node<E> = Node.Undefined;\n\tprivate _last: Node<E> = Node.Undefined;\n\tprivate _size: number = 0;\n\n\tget size(): number {\n\t\treturn this._size;\n\t}\n\n\tisEmpty(): boolean {\n\t\treturn this._first === Node.Undefined;\n\t}\n\n\tclear(): void {\n\t\tthis._first = Node.Undefined;\n\t\tthis._last = Node.Undefined;\n\t\tthis._size = 0;\n\t}\n\n\tunshift(element: E): () => void {\n\t\treturn this._insert(element, false);\n\t}\n\n\tpush(element: E): () => void {\n\t\treturn this._insert(element, true);\n\t}\n\n\tprivate _insert(element: E, atTheEnd: boolean): () => void {\n\t\tconst newNode = new Node(element);\n\t\tif (this._first === Node.Undefined) {\n\t\t\tthis._first = newNode;\n\t\t\tthis._last = newNode;\n\n\t\t} else if (atTheEnd) {\n\t\t\t// push\n\t\t\tconst oldLast = this._last!;\n\t\t\tthis._last = newNode;\n\t\t\tnewNode.prev = oldLast;\n\t\t\toldLast.next = newNode;\n\n\t\t} else {\n\t\t\t// unshift\n\t\t\tconst oldFirst = this._first;\n\t\t\tthis._first = newNode;\n\t\t\tnewNode.next = oldFirst;\n\t\t\toldFirst.prev = newNode;\n\t\t}\n\t\tthis._size += 1;\n\n\t\tlet didRemove = false;\n\t\treturn () => {\n\t\t\tif (!didRemove) {\n\t\t\t\tdidRemove = true;\n\t\t\t\tthis._remove(newNode);\n\t\t\t}\n\t\t};\n\t}\n\n\tshift(): E | undefined {\n\t\tif (this._first === Node.Undefined) {\n\t\t\treturn undefined;\n\t\t} else {\n\t\t\tconst res = this._first.element;\n\t\t\tthis._remove(this._first);\n\t\t\treturn res;\n\t\t}\n\t}\n\n\tprivate _remove(node: Node<E>): void {\n\t\tif (node.prev !== Node.Undefined && node.next !== Node.Undefined) {\n\t\t\t// middle\n\t\t\tconst anchor = node.prev;\n\t\t\tanchor.next = node.next;\n\t\t\tnode.next.prev = anchor;\n\n\t\t} else if (node.prev === Node.Undefined && node.next === Node.Undefined) {\n\t\t\t// only node\n\t\t\tthis._first = Node.Undefined;\n\t\t\tthis._last = Node.Undefined;\n\n\t\t} else if (node.next === Node.Undefined) {\n\t\t\t// last\n\t\t\tthis._last = this._last!.prev!;\n\t\t\tthis._last.next = Node.Undefined;\n\n\t\t} else if (node.prev === Node.Undefined) {\n\t\t\t// first\n\t\t\tthis._first = this._first!.next!;\n\t\t\tthis._first.prev = Node.Undefined;\n\t\t}\n\n\t\t// done\n\t\tthis._size -= 1;\n\t}\n\n\titerator(): Iterator<E> {\n\t\tlet element: { done: false; value: E; };\n\t\tlet node = this._first;\n\t\treturn {\n\t\t\tnext(): IteratorResult<E> {\n\t\t\t\tif (node === Node.Undefined) {\n\t\t\t\t\treturn FIN;\n\t\t\t\t}\n\n\t\t\t\tif (!element) {\n\t\t\t\t\telement = { done: false, value: node.element };\n\t\t\t\t} else {\n\t\t\t\t\telement.value = node.element;\n\t\t\t\t}\n\t\t\t\tnode = node.next;\n\t\t\t\treturn element;\n\t\t\t}\n\t\t};\n\t}\n\n\ttoArray(): E[] {\n\t\tconst result: E[] = [];\n\t\tfor (let node = this._first; node !== Node.Undefined; node = node.next) {\n\t\t\tresult.push(node.element);\n\t\t}\n\t\treturn result;\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { onUnexpectedError } from 'vs/base/common/errors';\nimport { once as onceFn } from 'vs/base/common/functional';\nimport { combinedDisposable, Disposable, IDisposable, toDisposable } from 'vs/base/common/lifecycle';\nimport { LinkedList } from 'vs/base/common/linkedList';\n\n/**\n * To an event a function with one or zero parameters\n * can be subscribed. The event is the subscriber function itself.\n */\nexport interface Event<T> {\n\t(listener: (e: T) => any, thisArgs?: any, disposables?: IDisposable[]): IDisposable;\n}\n\nexport namespace Event {\n\tconst _disposable = { dispose() { } };\n\texport const None: Event<any> = function () { return _disposable; };\n\n\t/**\n\t * Given an event, returns another event which only fires once.\n\t */\n\texport function once<T>(event: Event<T>): Event<T> {\n\t\treturn (listener, thisArgs = null, disposables?) => {\n\t\t\t// we need this, in case the event fires during the listener call\n\t\t\tlet didFire = false;\n\t\t\tlet result: IDisposable;\n\t\t\tresult = event(e => {\n\t\t\t\tif (didFire) {\n\t\t\t\t\treturn;\n\t\t\t\t} else if (result) {\n\t\t\t\t\tresult.dispose();\n\t\t\t\t} else {\n\t\t\t\t\tdidFire = true;\n\t\t\t\t}\n\n\t\t\t\treturn listener.call(thisArgs, e);\n\t\t\t}, null, disposables);\n\n\t\t\tif (didFire) {\n\t\t\t\tresult.dispose();\n\t\t\t}\n\n\t\t\treturn result;\n\t\t};\n\t}\n\n\t/**\n\t * Given an event and a `map` function, returns another event which maps each element\n\t * throught the mapping function.\n\t */\n\texport function map<I, O>(event: Event<I>, map: (i: I) => O): Event<O> {\n\t\treturn snapshot((listener, thisArgs = null, disposables?) => event(i => listener.call(thisArgs, map(i)), null, disposables));\n\t}\n\n\t/**\n\t * Given an event and an `each` function, returns another identical event and calls\n\t * the `each` function per each element.\n\t */\n\texport function forEach<I>(event: Event<I>, each: (i: I) => void): Event<I> {\n\t\treturn snapshot((listener, thisArgs = null, disposables?) => event(i => { each(i); listener.call(thisArgs, i); }, null, disposables));\n\t}\n\n\t/**\n\t * Given an event and a `filter` function, returns another event which emits those\n\t * elements for which the `filter` function returns `true`.\n\t */\n\texport function filter<T>(event: Event<T>, filter: (e: T) => boolean): Event<T>;\n\texport function filter<T, R>(event: Event<T | R>, filter: (e: T | R) => e is R): Event<R>;\n\texport function filter<T>(event: Event<T>, filter: (e: T) => boolean): Event<T> {\n\t\treturn snapshot((listener, thisArgs = null, disposables?) => event(e => filter(e) && listener.call(thisArgs, e), null, disposables));\n\t}\n\n\t/**\n\t * Given an event, returns the same event but typed as `Event<void>`.\n\t */\n\texport function signal<T>(event: Event<T>): Event<void> {\n\t\treturn event as Event<any> as Event<void>;\n\t}\n\n\t/**\n\t * Given a collection of events, returns a single event which emits\n\t * whenever any of the provided events emit.\n\t */\n\texport function any<T>(...events: Event<T>[]): Event<T> {\n\t\treturn (listener, thisArgs = null, disposables?) => combinedDisposable(events.map(event => event(e => listener.call(thisArgs, e), null, disposables)));\n\t}\n\n\t/**\n\t * Given an event and a `merge` function, returns another event which maps each element\n\t * and the cummulative result throught the `merge` function. Similar to `map`, but with memory.\n\t */\n\texport function reduce<I, O>(event: Event<I>, merge: (last: O | undefined, event: I) => O, initial?: O): Event<O> {\n\t\tlet output: O | undefined = initial;\n\n\t\treturn map<I, O>(event, e => {\n\t\t\toutput = merge(output, e);\n\t\t\treturn output;\n\t\t});\n\t}\n\n\t/**\n\t * Given a chain of event processing functions (filter, map, etc), each\n\t * function will be invoked per event & per listener. Snapshotting an event\n\t * chain allows each function to be invoked just once per event.\n\t */\n\texport function snapshot<T>(event: Event<T>): Event<T> {\n\t\tlet listener: IDisposable;\n\t\tconst emitter = new Emitter<T>({\n\t\t\tonFirstListenerAdd() {\n\t\t\t\tlistener = event(emitter.fire, emitter);\n\t\t\t},\n\t\t\tonLastListenerRemove() {\n\t\t\t\tlistener.dispose();\n\t\t\t}\n\t\t});\n\n\t\treturn emitter.event;\n\t}\n\n\t/**\n\t * Debounces the provided event, given a `merge` function.\n\t *\n\t * @param event The input event.\n\t * @param merge The reducing function.\n\t * @param delay The debouncing delay in millis.\n\t * @param leading Whether the event should fire in the leading phase of the timeout.\n\t * @param leakWarningThreshold The leak warning threshold override.\n\t */\n\texport function debounce<T>(event: Event<T>, merge: (last: T | undefined, event: T) => T, delay?: number, leading?: boolean, leakWarningThreshold?: number): Event<T>;\n\texport function debounce<I, O>(event: Event<I>, merge: (last: O | undefined, event: I) => O, delay?: number, leading?: boolean, leakWarningThreshold?: number): Event<O>;\n\texport function debounce<I, O>(event: Event<I>, merge: (last: O | undefined, event: I) => O, delay: number = 100, leading = false, leakWarningThreshold?: number): Event<O> {\n\n\t\tlet subscription: IDisposable;\n\t\tlet output: O | undefined = undefined;\n\t\tlet handle: any = undefined;\n\t\tlet numDebouncedCalls = 0;\n\n\t\tconst emitter = new Emitter<O>({\n\t\t\tleakWarningThreshold,\n\t\t\tonFirstListenerAdd() {\n\t\t\t\tsubscription = event(cur => {\n\t\t\t\t\tnumDebouncedCalls++;\n\t\t\t\t\toutput = merge(output, cur);\n\n\t\t\t\t\tif (leading && !handle) {\n\t\t\t\t\t\temitter.fire(output);\n\t\t\t\t\t}\n\n\t\t\t\t\tclearTimeout(handle);\n\t\t\t\t\thandle = setTimeout(() => {\n\t\t\t\t\t\tconst _output = output;\n\t\t\t\t\t\toutput = undefined;\n\t\t\t\t\t\thandle = undefined;\n\t\t\t\t\t\tif (!leading || numDebouncedCalls > 1) {\n\t\t\t\t\t\t\temitter.fire(_output!);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tnumDebouncedCalls = 0;\n\t\t\t\t\t}, delay);\n\t\t\t\t});\n\t\t\t},\n\t\t\tonLastListenerRemove() {\n\t\t\t\tsubscription.dispose();\n\t\t\t}\n\t\t});\n\n\t\treturn emitter.event;\n\t}\n\n\t/**\n\t * Given an event, it returns another event which fires only once and as soon as\n\t * the input event emits. The event data is the number of millis it took for the\n\t * event to fire.\n\t */\n\texport function stopwatch<T>(event: Event<T>): Event<number> {\n\t\tconst start = new Date().getTime();\n\t\treturn map(once(event), _ => new Date().getTime() - start);\n\t}\n\n\t/**\n\t * Given an event, it returns another event which fires only when the event\n\t * element changes.\n\t */\n\texport function latch<T>(event: Event<T>): Event<T> {\n\t\tlet firstCall = true;\n\t\tlet cache: T;\n\n\t\treturn filter(event, value => {\n\t\t\tconst shouldEmit = firstCall || value !== cache;\n\t\t\tfirstCall = false;\n\t\t\tcache = value;\n\t\t\treturn shouldEmit;\n\t\t});\n\t}\n\n\t/**\n\t * Buffers the provided event until a first listener comes\n\t * along, at which point fire all the events at once and\n\t * pipe the event from then on.\n\t *\n\t * ```typescript\n\t * const emitter = new Emitter<number>();\n\t * const event = emitter.event;\n\t * const bufferedEvent = buffer(event);\n\t *\n\t * emitter.fire(1);\n\t * emitter.fire(2);\n\t * emitter.fire(3);\n\t * // nothing...\n\t *\n\t * const listener = bufferedEvent(num => console.log(num));\n\t * // 1, 2, 3\n\t *\n\t * emitter.fire(4);\n\t * // 4\n\t * ```\n\t */\n\texport function buffer<T>(event: Event<T>, nextTick = false, _buffer: T[] = []): Event<T> {\n\t\tlet buffer: T[] | null = _buffer.slice();\n\n\t\tlet listener: IDisposable | null = event(e => {\n\t\t\tif (buffer) {\n\t\t\t\tbuffer.push(e);\n\t\t\t} else {\n\t\t\t\temitter.fire(e);\n\t\t\t}\n\t\t});\n\n\t\tconst flush = () => {\n\t\t\tif (buffer) {\n\t\t\t\tbuffer.forEach(e => emitter.fire(e));\n\t\t\t}\n\t\t\tbuffer = null;\n\t\t};\n\n\t\tconst emitter = new Emitter<T>({\n\t\t\tonFirstListenerAdd() {\n\t\t\t\tif (!listener) {\n\t\t\t\t\tlistener = event(e => emitter.fire(e));\n\t\t\t\t}\n\t\t\t},\n\n\t\t\tonFirstListenerDidAdd() {\n\t\t\t\tif (buffer) {\n\t\t\t\t\tif (nextTick) {\n\t\t\t\t\t\tsetTimeout(flush);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tflush();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t},\n\n\t\t\tonLastListenerRemove() {\n\t\t\t\tif (listener) {\n\t\t\t\t\tlistener.dispose();\n\t\t\t\t}\n\t\t\t\tlistener = null;\n\t\t\t}\n\t\t});\n\n\t\treturn emitter.event;\n\t}\n\n\texport interface IChainableEvent<T> {\n\t\tevent: Event<T>;\n\t\tmap<O>(fn: (i: T) => O): IChainableEvent<O>;\n\t\tforEach(fn: (i: T) => void): IChainableEvent<T>;\n\t\tfilter(fn: (e: T) => boolean): IChainableEvent<T>;\n\t\treduce<R>(merge: (last: R | undefined, event: T) => R, initial?: R): IChainableEvent<R>;\n\t\tlatch(): IChainableEvent<T>;\n\t\ton(listener: (e: T) => any, thisArgs?: any, disposables?: IDisposable[]): IDisposable;\n\t\tonce(listener: (e: T) => any, thisArgs?: any, disposables?: IDisposable[]): IDisposable;\n\t}\n\n\tclass ChainableEvent<T> implements IChainableEvent<T> {\n\n\t\tconstructor(readonly event: Event<T>) { }\n\n\t\tmap<O>(fn: (i: T) => O): IChainableEvent<O> {\n\t\t\treturn new ChainableEvent(map(this.event, fn));\n\t\t}\n\n\t\tforEach(fn: (i: T) => void): IChainableEvent<T> {\n\t\t\treturn new ChainableEvent(forEach(this.event, fn));\n\t\t}\n\n\t\tfilter(fn: (e: T) => boolean): IChainableEvent<T> {\n\t\t\treturn new ChainableEvent(filter(this.event, fn));\n\t\t}\n\n\t\treduce<R>(merge: (last: R | undefined, event: T) => R, initial?: R): IChainableEvent<R> {\n\t\t\treturn new ChainableEvent(reduce(this.event, merge, initial));\n\t\t}\n\n\t\tlatch(): IChainableEvent<T> {\n\t\t\treturn new ChainableEvent(latch(this.event));\n\t\t}\n\n\t\ton(listener: (e: T) => any, thisArgs: any, disposables: IDisposable[]) {\n\t\t\treturn this.event(listener, thisArgs, disposables);\n\t\t}\n\n\t\tonce(listener: (e: T) => any, thisArgs: any, disposables: IDisposable[]) {\n\t\t\treturn once(this.event)(listener, thisArgs, disposables);\n\t\t}\n\t}\n\n\texport function chain<T>(event: Event<T>): IChainableEvent<T> {\n\t\treturn new ChainableEvent(event);\n\t}\n\n\texport interface NodeEventEmitter {\n\t\ton(event: string | symbol, listener: Function): this;\n\t\tremoveListener(event: string | symbol, listener: Function): this;\n\t}\n\n\texport function fromNodeEventEmitter<T>(emitter: NodeEventEmitter, eventName: string, map: (...args: any[]) => T = id => id): Event<T> {\n\t\tconst fn = (...args: any[]) => result.fire(map(...args));\n\t\tconst onFirstListenerAdd = () => emitter.on(eventName, fn);\n\t\tconst onLastListenerRemove = () => emitter.removeListener(eventName, fn);\n\t\tconst result = new Emitter<T>({ onFirstListenerAdd, onLastListenerRemove });\n\n\t\treturn result.event;\n\t}\n\n\texport function fromPromise<T = any>(promise: Promise<T>): Event<undefined> {\n\t\tconst emitter = new Emitter<undefined>();\n\t\tlet shouldEmit = false;\n\n\t\tpromise\n\t\t\t.then(undefined, () => null)\n\t\t\t.then(() => {\n\t\t\t\tif (!shouldEmit) {\n\t\t\t\t\tsetTimeout(() => emitter.fire(undefined), 0);\n\t\t\t\t} else {\n\t\t\t\t\temitter.fire(undefined);\n\t\t\t\t}\n\t\t\t});\n\n\t\tshouldEmit = true;\n\t\treturn emitter.event;\n\t}\n\n\texport function toPromise<T>(event: Event<T>): Promise<T> {\n\t\treturn new Promise(c => once(event)(c));\n\t}\n}\n\ntype Listener<T> = [(e: T) => void, any] | ((e: T) => void);\n\nexport interface EmitterOptions {\n\tonFirstListenerAdd?: Function;\n\tonFirstListenerDidAdd?: Function;\n\tonListenerDidAdd?: Function;\n\tonLastListenerRemove?: Function;\n\tleakWarningThreshold?: number;\n}\n\nlet _globalLeakWarningThreshold = -1;\n\nclass LeakageMonitor {\n\n\tprivate _stacks: Map<string, number> | undefined;\n\tprivate _warnCountdown: number = 0;\n\n\tconstructor(\n\t\treadonly customThreshold?: number,\n\t\treadonly name: string = Math.random().toString(18).slice(2, 5),\n\t) { }\n\n\tdispose(): void {\n\t\tif (this._stacks) {\n\t\t\tthis._stacks.clear();\n\t\t}\n\t}\n\n\tcheck(listenerCount: number): undefined | (() => void) {\n\n\t\tlet threshold = _globalLeakWarningThreshold;\n\t\tif (typeof this.customThreshold === 'number') {\n\t\t\tthreshold = this.customThreshold;\n\t\t}\n\n\t\tif (threshold <= 0 || listenerCount < threshold) {\n\t\t\treturn undefined;\n\t\t}\n\n\t\tif (!this._stacks) {\n\t\t\tthis._stacks = new Map();\n\t\t}\n\t\tconst stack = new Error().stack!.split('\\n').slice(3).join('\\n');\n\t\tconst count = (this._stacks.get(stack) || 0);\n\t\tthis._stacks.set(stack, count + 1);\n\t\tthis._warnCountdown -= 1;\n\n\t\tif (this._warnCountdown <= 0) {\n\t\t\t// only warn on first exceed and then every time the limit\n\t\t\t// is exceeded by 50% again\n\t\t\tthis._warnCountdown = threshold * 0.5;\n\n\t\t\t// find most frequent listener and print warning\n\t\t\tlet topStack: string;\n\t\t\tlet topCount: number = 0;\n\t\t\tthis._stacks.forEach((count, stack) => {\n\t\t\t\tif (!topStack || topCount < count) {\n\t\t\t\t\ttopStack = stack;\n\t\t\t\t\ttopCount = count;\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tconsole.warn(`[${this.name}] potential listener LEAK detected, having ${listenerCount} listeners already. MOST frequent listener (${topCount}):`);\n\t\t\tconsole.warn(topStack!);\n\t\t}\n\n\t\treturn () => {\n\t\t\tconst count = (this._stacks!.get(stack) || 0);\n\t\t\tthis._stacks!.set(stack, count - 1);\n\t\t};\n\t}\n}\n\n/**\n * The Emitter can be used to expose an Event to the public\n * to fire it from the insides.\n * Sample:\n\tclass Document {\n\n\t\tprivate _onDidChange = new Emitter<(value:string)=>any>();\n\n\t\tpublic onDidChange = this._onDidChange.event;\n\n\t\t// getter-style\n\t\t// get onDidChange(): Event<(value:string)=>any> {\n\t\t// \treturn this._onDidChange.event;\n\t\t// }\n\n\t\tprivate _doIt() {\n\t\t\t//...\n\t\t\tthis._onDidChange.fire(value);\n\t\t}\n\t}\n */\nexport class Emitter<T> {\n\n\tprivate static readonly _noop = function () { };\n\n\tprivate readonly _options?: EmitterOptions;\n\tprivate readonly _leakageMon?: LeakageMonitor;\n\tprivate _disposed: boolean = false;\n\tprivate _event?: Event<T>;\n\tprivate _deliveryQueue?: LinkedList<[Listener<T>, T]>;\n\tprotected _listeners?: LinkedList<Listener<T>>;\n\n\tconstructor(options?: EmitterOptions) {\n\t\tthis._options = options;\n\t\tthis._leakageMon = _globalLeakWarningThreshold > 0\n\t\t\t? new LeakageMonitor(this._options && this._options.leakWarningThreshold)\n\t\t\t: undefined;\n\t}\n\n\t/**\n\t * For the public to allow to subscribe\n\t * to events from this Emitter\n\t */\n\tget event(): Event<T> {\n\t\tif (!this._event) {\n\t\t\tthis._event = (listener: (e: T) => any, thisArgs?: any, disposables?: IDisposable[]) => {\n\t\t\t\tif (!this._listeners) {\n\t\t\t\t\tthis._listeners = new LinkedList();\n\t\t\t\t}\n\n\t\t\t\tconst firstListener = this._listeners.isEmpty();\n\n\t\t\t\tif (firstListener && this._options && this._options.onFirstListenerAdd) {\n\t\t\t\t\tthis._options.onFirstListenerAdd(this);\n\t\t\t\t}\n\n\t\t\t\tconst remove = this._listeners.push(!thisArgs ? listener : [listener, thisArgs]);\n\n\t\t\t\tif (firstListener && this._options && this._options.onFirstListenerDidAdd) {\n\t\t\t\t\tthis._options.onFirstListenerDidAdd(this);\n\t\t\t\t}\n\n\t\t\t\tif (this._options && this._options.onListenerDidAdd) {\n\t\t\t\t\tthis._options.onListenerDidAdd(this, listener, thisArgs);\n\t\t\t\t}\n\n\t\t\t\t// check and record this emitter for potential leakage\n\t\t\t\tlet removeMonitor: (() => void) | undefined;\n\t\t\t\tif (this._leakageMon) {\n\t\t\t\t\tremoveMonitor = this._leakageMon.check(this._listeners.size);\n\t\t\t\t}\n\n\t\t\t\tlet result: IDisposable;\n\t\t\t\tresult = {\n\t\t\t\t\tdispose: () => {\n\t\t\t\t\t\tif (removeMonitor) {\n\t\t\t\t\t\t\tremoveMonitor();\n\t\t\t\t\t\t}\n\t\t\t\t\t\tresult.dispose = Emitter._noop;\n\t\t\t\t\t\tif (!this._disposed) {\n\t\t\t\t\t\t\tremove();\n\t\t\t\t\t\t\tif (this._options && this._options.onLastListenerRemove) {\n\t\t\t\t\t\t\t\tconst hasListeners = (this._listeners && !this._listeners.isEmpty());\n\t\t\t\t\t\t\t\tif (!hasListeners) {\n\t\t\t\t\t\t\t\t\tthis._options.onLastListenerRemove(this);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\t\tif (Array.isArray(disposables)) {\n\t\t\t\t\tdisposables.push(result);\n\t\t\t\t}\n\n\t\t\t\treturn result;\n\t\t\t};\n\t\t}\n\t\treturn this._event;\n\t}\n\n\t/**\n\t * To be kept private to fire an event to\n\t * subscribers\n\t */\n\tfire(event: T): void {\n\t\tif (this._listeners) {\n\t\t\t// put all [listener,event]-pairs into delivery queue\n\t\t\t// then emit all event. an inner/nested event might be\n\t\t\t// the driver of this\n\n\t\t\tif (!this._deliveryQueue) {\n\t\t\t\tthis._deliveryQueue = new LinkedList();\n\t\t\t}\n\n\t\t\tfor (let iter = this._listeners.iterator(), e = iter.next(); !e.done; e = iter.next()) {\n\t\t\t\tthis._deliveryQueue.push([e.value, event]);\n\t\t\t}\n\n\t\t\twhile (this._deliveryQueue.size > 0) {\n\t\t\t\tconst [listener, event] = this._deliveryQueue.shift()!;\n\t\t\t\ttry {\n\t\t\t\t\tif (typeof listener === 'function') {\n\t\t\t\t\t\tlistener.call(undefined, event);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tlistener[0].call(listener[1], event);\n\t\t\t\t\t}\n\t\t\t\t} catch (e) {\n\t\t\t\t\tonUnexpectedError(e);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tdispose() {\n\t\tif (this._listeners) {\n\t\t\tthis._listeners.clear();\n\t\t}\n\t\tif (this._deliveryQueue) {\n\t\t\tthis._deliveryQueue.clear();\n\t\t}\n\t\tif (this._leakageMon) {\n\t\t\tthis._leakageMon.dispose();\n\t\t}\n\t\tthis._disposed = true;\n\t}\n}\n\nexport class PauseableEmitter<T> extends Emitter<T> {\n\n\tprivate _isPaused = 0;\n\tprivate _eventQueue = new LinkedList<T>();\n\tprivate _mergeFn?: (input: T[]) => T;\n\n\tconstructor(options?: EmitterOptions & { merge?: (input: T[]) => T }) {\n\t\tsuper(options);\n\t\tthis._mergeFn = options && options.merge;\n\t}\n\n\tpause(): void {\n\t\tthis._isPaused++;\n\t}\n\n\tresume(): void {\n\t\tif (this._isPaused !== 0 && --this._isPaused === 0) {\n\t\t\tif (this._mergeFn) {\n\t\t\t\t// use the merge function to create a single composite\n\t\t\t\t// event. make a copy in case firing pauses this emitter\n\t\t\t\tconst events = this._eventQueue.toArray();\n\t\t\t\tthis._eventQueue.clear();\n\t\t\t\tsuper.fire(this._mergeFn(events));\n\n\t\t\t} else {\n\t\t\t\t// no merging, fire each event individually and test\n\t\t\t\t// that this emitter isn't paused halfway through\n\t\t\t\twhile (!this._isPaused && this._eventQueue.size !== 0) {\n\t\t\t\t\tsuper.fire(this._eventQueue.shift()!);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tfire(event: T): void {\n\t\tif (this._listeners) {\n\t\t\tif (this._isPaused !== 0) {\n\t\t\t\tthis._eventQueue.push(event);\n\t\t\t} else {\n\t\t\t\tsuper.fire(event);\n\t\t\t}\n\t\t}\n\t}\n}\n\nexport class EventMultiplexer<T> implements IDisposable {\n\n\tprivate readonly emitter: Emitter<T>;\n\tprivate hasListeners = false;\n\tprivate events: { event: Event<T>; listener: IDisposable | null; }[] = [];\n\n\tconstructor() {\n\t\tthis.emitter = new Emitter<T>({\n\t\t\tonFirstListenerAdd: () => this.onFirstListenerAdd(),\n\t\t\tonLastListenerRemove: () => this.onLastListenerRemove()\n\t\t});\n\t}\n\n\tget event(): Event<T> {\n\t\treturn this.emitter.event;\n\t}\n\n\tadd(event: Event<T>): IDisposable {\n\t\tconst e = { event: event, listener: null };\n\t\tthis.events.push(e);\n\n\t\tif (this.hasListeners) {\n\t\t\tthis.hook(e);\n\t\t}\n\n\t\tconst dispose = () => {\n\t\t\tif (this.hasListeners) {\n\t\t\t\tthis.unhook(e);\n\t\t\t}\n\n\t\t\tconst idx = this.events.indexOf(e);\n\t\t\tthis.events.splice(idx, 1);\n\t\t};\n\n\t\treturn toDisposable(onceFn(dispose));\n\t}\n\n\tprivate onFirstListenerAdd(): void {\n\t\tthis.hasListeners = true;\n\t\tthis.events.forEach(e => this.hook(e));\n\t}\n\n\tprivate onLastListenerRemove(): void {\n\t\tthis.hasListeners = false;\n\t\tthis.events.forEach(e => this.unhook(e));\n\t}\n\n\tprivate hook(e: { event: Event<T>; listener: IDisposable | null; }): void {\n\t\te.listener = e.event(r => this.emitter.fire(r));\n\t}\n\n\tprivate unhook(e: { event: Event<T>; listener: IDisposable | null; }): void {\n\t\tif (e.listener) {\n\t\t\te.listener.dispose();\n\t\t}\n\t\te.listener = null;\n\t}\n\n\tdispose(): void {\n\t\tthis.emitter.dispose();\n\t}\n}\n\n/**\n * The EventBufferer is useful in situations in which you want\n * to delay firing your events during some code.\n * You can wrap that code and be sure that the event will not\n * be fired during that wrap.\n *\n * ```\n * const emitter: Emitter;\n * const delayer = new EventDelayer();\n * const delayedEvent = delayer.wrapEvent(emitter.event);\n *\n * delayedEvent(console.log);\n *\n * delayer.bufferEvents(() => {\n *   emitter.fire(); // event will not be fired yet\n * });\n *\n * // event will only be fired at this point\n * ```\n */\nexport class EventBufferer {\n\n\tprivate buffers: Function[][] = [];\n\n\twrapEvent<T>(event: Event<T>): Event<T> {\n\t\treturn (listener, thisArgs?, disposables?) => {\n\t\t\treturn event(i => {\n\t\t\t\tconst buffer = this.buffers[this.buffers.length - 1];\n\n\t\t\t\tif (buffer) {\n\t\t\t\t\tbuffer.push(() => listener.call(thisArgs, i));\n\t\t\t\t} else {\n\t\t\t\t\tlistener.call(thisArgs, i);\n\t\t\t\t}\n\t\t\t}, undefined, disposables);\n\t\t};\n\t}\n\n\tbufferEvents<R = void>(fn: () => R): R {\n\t\tconst buffer: Array<() => R> = [];\n\t\tthis.buffers.push(buffer);\n\t\tconst r = fn();\n\t\tthis.buffers.pop();\n\t\tbuffer.forEach(flush => flush());\n\t\treturn r;\n\t}\n}\n\n/**\n * A Relay is an event forwarder which functions as a replugabble event pipe.\n * Once created, you can connect an input event to it and it will simply forward\n * events from that input event through its own `event` property. The `input`\n * can be changed at any point in time.\n */\nexport class Relay<T> implements IDisposable {\n\n\tprivate listening = false;\n\tprivate inputEvent: Event<T> = Event.None;\n\tprivate inputEventListener: IDisposable = Disposable.None;\n\n\tprivate emitter = new Emitter<T>({\n\t\tonFirstListenerDidAdd: () => {\n\t\t\tthis.listening = true;\n\t\t\tthis.inputEventListener = this.inputEvent(this.emitter.fire, this.emitter);\n\t\t},\n\t\tonLastListenerRemove: () => {\n\t\t\tthis.listening = false;\n\t\t\tthis.inputEventListener.dispose();\n\t\t}\n\t});\n\n\treadonly event: Event<T> = this.emitter.event;\n\n\tset input(event: Event<T>) {\n\t\tthis.inputEvent = event;\n\n\t\tif (this.listening) {\n\t\t\tthis.inputEventListener.dispose();\n\t\t\tthis.inputEventListener = event(this.emitter.fire, this.emitter);\n\t\t}\n\t}\n\n\tdispose() {\n\t\tthis.inputEventListener.dispose();\n\t\tthis.emitter.dispose();\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Emitter, Event } from 'vs/base/common/event';\nimport { IDisposable } from 'vs/base/common/lifecycle';\n\nexport interface CancellationToken {\n\treadonly isCancellationRequested: boolean;\n\t/**\n\t * An event emitted when cancellation is requested\n\t * @event\n\t */\n\treadonly onCancellationRequested: Event<any>;\n}\n\nconst shortcutEvent = Object.freeze(function (callback, context?): IDisposable {\n\tconst handle = setTimeout(callback.bind(context), 0);\n\treturn { dispose() { clearTimeout(handle); } };\n} as Event<any>);\n\nexport namespace CancellationToken {\n\n\texport function isCancellationToken(thing: any): thing is CancellationToken {\n\t\tif (thing === CancellationToken.None || thing === CancellationToken.Cancelled) {\n\t\t\treturn true;\n\t\t}\n\t\tif (thing instanceof MutableToken) {\n\t\t\treturn true;\n\t\t}\n\t\tif (!thing || typeof thing !== 'object') {\n\t\t\treturn false;\n\t\t}\n\t\treturn typeof (thing as CancellationToken).isCancellationRequested === 'boolean'\n\t\t\t&& typeof (thing as CancellationToken).onCancellationRequested === 'function';\n\t}\n\n\n\texport const None: CancellationToken = Object.freeze({\n\t\tisCancellationRequested: false,\n\t\tonCancellationRequested: Event.None\n\t});\n\n\texport const Cancelled: CancellationToken = Object.freeze({\n\t\tisCancellationRequested: true,\n\t\tonCancellationRequested: shortcutEvent\n\t});\n}\n\nclass MutableToken implements CancellationToken {\n\n\tprivate _isCancelled: boolean = false;\n\tprivate _emitter: Emitter<any> | null = null;\n\n\tpublic cancel() {\n\t\tif (!this._isCancelled) {\n\t\t\tthis._isCancelled = true;\n\t\t\tif (this._emitter) {\n\t\t\t\tthis._emitter.fire(undefined);\n\t\t\t\tthis.dispose();\n\t\t\t}\n\t\t}\n\t}\n\n\tget isCancellationRequested(): boolean {\n\t\treturn this._isCancelled;\n\t}\n\n\tget onCancellationRequested(): Event<any> {\n\t\tif (this._isCancelled) {\n\t\t\treturn shortcutEvent;\n\t\t}\n\t\tif (!this._emitter) {\n\t\t\tthis._emitter = new Emitter<any>();\n\t\t}\n\t\treturn this._emitter.event;\n\t}\n\n\tpublic dispose(): void {\n\t\tif (this._emitter) {\n\t\t\tthis._emitter.dispose();\n\t\t\tthis._emitter = null;\n\t\t}\n\t}\n}\n\nexport class CancellationTokenSource {\n\n\tprivate _token?: CancellationToken = undefined;\n\tprivate _parentListener?: IDisposable = undefined;\n\n\tconstructor(parent?: CancellationToken) {\n\t\tthis._parentListener = parent && parent.onCancellationRequested(this.cancel, this);\n\t}\n\n\tget token(): CancellationToken {\n\t\tif (!this._token) {\n\t\t\t// be lazy and create the token only when\n\t\t\t// actually needed\n\t\t\tthis._token = new MutableToken();\n\t\t}\n\t\treturn this._token;\n\t}\n\n\tcancel(): void {\n\t\tif (!this._token) {\n\t\t\t// save an object by returning the default\n\t\t\t// cancelled token when cancellation happens\n\t\t\t// before someone asks for the token\n\t\t\tthis._token = CancellationToken.Cancelled;\n\n\t\t} else if (this._token instanceof MutableToken) {\n\t\t\t// actually cancel\n\t\t\tthis._token.cancel();\n\t\t}\n\t}\n\n\tdispose(): void {\n\t\tif (this._parentListener) {\n\t\t\tthis._parentListener.dispose();\n\t\t}\n\t\tif (!this._token) {\n\t\t\t// ensure to initialize with an empty token if we had none\n\t\t\tthis._token = CancellationToken.None;\n\n\t\t} else if (this._token instanceof MutableToken) {\n\t\t\t// actually dispose\n\t\t\tthis._token.dispose();\n\t\t}\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nconst LANGUAGE_DEFAULT = 'en';\n\nlet _isWindows = false;\nlet _isMacintosh = false;\nlet _isLinux = false;\nlet _isNative = false;\nlet _isWeb = false;\nlet _locale: string | undefined = undefined;\nlet _language: string = LANGUAGE_DEFAULT;\nlet _translationsConfigFile: string | undefined = undefined;\n\ninterface NLSConfig {\n\tlocale: string;\n\tavailableLanguages: { [key: string]: string; };\n\t_translationsConfigFile: string;\n}\n\nexport interface IProcessEnvironment {\n\t[key: string]: string;\n}\n\ninterface INodeProcess {\n\tplatform: string;\n\tenv: IProcessEnvironment;\n\tnextTick: Function;\n\tversions?: {\n\t\telectron?: string;\n\t};\n\ttype?: string;\n}\ndeclare const process: INodeProcess;\ndeclare const global: any;\n\ninterface INavigator {\n\tuserAgent: string;\n\tlanguage: string;\n}\ndeclare const navigator: INavigator;\ndeclare const self: any;\n\nconst isElectronRenderer = (typeof process !== 'undefined' && typeof process.versions !== 'undefined' && typeof process.versions.electron !== 'undefined' && process.type === 'renderer');\n\n// OS detection\nif (typeof navigator === 'object' && !isElectronRenderer) {\n\tconst userAgent = navigator.userAgent;\n\t_isWindows = userAgent.indexOf('Windows') >= 0;\n\t_isMacintosh = userAgent.indexOf('Macintosh') >= 0;\n\t_isLinux = userAgent.indexOf('Linux') >= 0;\n\t_isWeb = true;\n\t_locale = navigator.language;\n\t_language = _locale;\n} else if (typeof process === 'object') {\n\t_isWindows = (process.platform === 'win32');\n\t_isMacintosh = (process.platform === 'darwin');\n\t_isLinux = (process.platform === 'linux');\n\t_locale = LANGUAGE_DEFAULT;\n\t_language = LANGUAGE_DEFAULT;\n\tconst rawNlsConfig = process.env['VSCODE_NLS_CONFIG'];\n\tif (rawNlsConfig) {\n\t\ttry {\n\t\t\tconst nlsConfig: NLSConfig = JSON.parse(rawNlsConfig);\n\t\t\tconst resolved = nlsConfig.availableLanguages['*'];\n\t\t\t_locale = nlsConfig.locale;\n\t\t\t// VSCode's default language is 'en'\n\t\t\t_language = resolved ? resolved : LANGUAGE_DEFAULT;\n\t\t\t_translationsConfigFile = nlsConfig._translationsConfigFile;\n\t\t} catch (e) {\n\t\t}\n\t}\n\t_isNative = true;\n}\n\nexport const enum Platform {\n\tWeb,\n\tMac,\n\tLinux,\n\tWindows\n}\n\nlet _platform: Platform = Platform.Web;\nif (_isNative) {\n\tif (_isMacintosh) {\n\t\t_platform = Platform.Mac;\n\t} else if (_isWindows) {\n\t\t_platform = Platform.Windows;\n\t} else if (_isLinux) {\n\t\t_platform = Platform.Linux;\n\t}\n}\n\nexport const isWindows = _isWindows;\nexport const isMacintosh = _isMacintosh;\nexport const isLinux = _isLinux;\nexport const isNative = _isNative;\nexport const isWeb = _isWeb;\n\nconst _globals = (typeof self === 'object' ? self : typeof global === 'object' ? global : {} as any);\nexport const globals: any = _globals;\n\nlet _setImmediate: ((callback: (...args: any[]) => void) => number) | null = null;\nexport function setImmediate(callback: (...args: any[]) => void): number {\n\tif (_setImmediate === null) {\n\t\tif (globals.setImmediate) {\n\t\t\t_setImmediate = globals.setImmediate.bind(globals);\n\t\t} else if (typeof process !== 'undefined' && typeof process.nextTick === 'function') {\n\t\t\t_setImmediate = process.nextTick.bind(process);\n\t\t} else {\n\t\t\t_setImmediate = globals.setTimeout.bind(globals);\n\t\t}\n\t}\n\treturn _setImmediate!(callback);\n}\n\nexport const enum OperatingSystem {\n\tWindows = 1,\n\tMacintosh = 2,\n\tLinux = 3\n}\nexport const OS = (_isMacintosh ? OperatingSystem.Macintosh : (_isWindows ? OperatingSystem.Windows : OperatingSystem.Linux));\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { CharCode } from 'vs/base/common/charCode';\n\n/**\n * The empty string.\n */\nexport const empty = '';\n\nexport function isFalsyOrWhitespace(str: string | undefined): boolean {\n\tif (!str || typeof str !== 'string') {\n\t\treturn true;\n\t}\n\treturn str.trim().length === 0;\n}\n\n/**\n * @returns the provided number with the given number of preceding zeros.\n */\nexport function pad(n: number, l: number, char: string = '0'): string {\n\tconst str = '' + n;\n\tconst r = [str];\n\n\tfor (let i = str.length; i < l; i++) {\n\t\tr.push(char);\n\t}\n\n\treturn r.reverse().join('');\n}\n\nconst _formatRegexp = /{(\\d+)}/g;\n\n/**\n * Helper to produce a string with a variable number of arguments. Insert variable segments\n * into the string using the {n} notation where N is the index of the argument following the string.\n * @param value string to which formatting is applied\n * @param args replacements for {n}-entries\n */\nexport function format(value: string, ...args: any[]): string {\n\tif (args.length === 0) {\n\t\treturn value;\n\t}\n\treturn value.replace(_formatRegexp, function (match, group) {\n\t\tconst idx = parseInt(group, 10);\n\t\treturn isNaN(idx) || idx < 0 || idx >= args.length ?\n\t\t\tmatch :\n\t\t\targs[idx];\n\t});\n}\n\n/**\n * Converts HTML characters inside the string to use entities instead. Makes the string safe from\n * being used e.g. in HTMLElement.innerHTML.\n */\nexport function escape(html: string): string {\n\treturn html.replace(/[<>&]/g, function (match) {\n\t\tswitch (match) {\n\t\t\tcase '<': return '&lt;';\n\t\t\tcase '>': return '&gt;';\n\t\t\tcase '&': return '&amp;';\n\t\t\tdefault: return match;\n\t\t}\n\t});\n}\n\n/**\n * Escapes regular expression characters in a given string\n */\nexport function escapeRegExpCharacters(value: string): string {\n\treturn value.replace(/[\\-\\\\\\{\\}\\*\\+\\?\\|\\^\\$\\.\\[\\]\\(\\)\\#]/g, '\\\\$&');\n}\n\n/**\n * Removes all occurrences of needle from the beginning and end of haystack.\n * @param haystack string to trim\n * @param needle the thing to trim (default is a blank)\n */\nexport function trim(haystack: string, needle: string = ' '): string {\n\tconst trimmed = ltrim(haystack, needle);\n\treturn rtrim(trimmed, needle);\n}\n\n/**\n * Removes all occurrences of needle from the beginning of haystack.\n * @param haystack string to trim\n * @param needle the thing to trim\n */\nexport function ltrim(haystack: string, needle: string): string {\n\tif (!haystack || !needle) {\n\t\treturn haystack;\n\t}\n\n\tconst needleLen = needle.length;\n\tif (needleLen === 0 || haystack.length === 0) {\n\t\treturn haystack;\n\t}\n\n\tlet offset = 0;\n\n\twhile (haystack.indexOf(needle, offset) === offset) {\n\t\toffset = offset + needleLen;\n\t}\n\treturn haystack.substring(offset);\n}\n\n/**\n * Removes all occurrences of needle from the end of haystack.\n * @param haystack string to trim\n * @param needle the thing to trim\n */\nexport function rtrim(haystack: string, needle: string): string {\n\tif (!haystack || !needle) {\n\t\treturn haystack;\n\t}\n\n\tconst needleLen = needle.length,\n\t\thaystackLen = haystack.length;\n\n\tif (needleLen === 0 || haystackLen === 0) {\n\t\treturn haystack;\n\t}\n\n\tlet offset = haystackLen,\n\t\tidx = -1;\n\n\twhile (true) {\n\t\tidx = haystack.lastIndexOf(needle, offset - 1);\n\t\tif (idx === -1 || idx + needleLen !== offset) {\n\t\t\tbreak;\n\t\t}\n\t\tif (idx === 0) {\n\t\t\treturn '';\n\t\t}\n\t\toffset = idx;\n\t}\n\n\treturn haystack.substring(0, offset);\n}\n\nexport function convertSimple2RegExpPattern(pattern: string): string {\n\treturn pattern.replace(/[\\-\\\\\\{\\}\\+\\?\\|\\^\\$\\.\\,\\[\\]\\(\\)\\#\\s]/g, '\\\\$&').replace(/[\\*]/g, '.*');\n}\n\n/**\n * Determines if haystack starts with needle.\n */\nexport function startsWith(haystack: string, needle: string): boolean {\n\tif (haystack.length < needle.length) {\n\t\treturn false;\n\t}\n\n\tif (haystack === needle) {\n\t\treturn true;\n\t}\n\n\tfor (let i = 0; i < needle.length; i++) {\n\t\tif (haystack[i] !== needle[i]) {\n\t\t\treturn false;\n\t\t}\n\t}\n\n\treturn true;\n}\n\n/**\n * Determines if haystack ends with needle.\n */\nexport function endsWith(haystack: string, needle: string): boolean {\n\tconst diff = haystack.length - needle.length;\n\tif (diff > 0) {\n\t\treturn haystack.indexOf(needle, diff) === diff;\n\t} else if (diff === 0) {\n\t\treturn haystack === needle;\n\t} else {\n\t\treturn false;\n\t}\n}\n\nexport interface RegExpOptions {\n\tmatchCase?: boolean;\n\twholeWord?: boolean;\n\tmultiline?: boolean;\n\tglobal?: boolean;\n\tunicode?: boolean;\n}\n\nexport function createRegExp(searchString: string, isRegex: boolean, options: RegExpOptions = {}): RegExp {\n\tif (!searchString) {\n\t\tthrow new Error('Cannot create regex from empty string');\n\t}\n\tif (!isRegex) {\n\t\tsearchString = escapeRegExpCharacters(searchString);\n\t}\n\tif (options.wholeWord) {\n\t\tif (!/\\B/.test(searchString.charAt(0))) {\n\t\t\tsearchString = '\\\\b' + searchString;\n\t\t}\n\t\tif (!/\\B/.test(searchString.charAt(searchString.length - 1))) {\n\t\t\tsearchString = searchString + '\\\\b';\n\t\t}\n\t}\n\tlet modifiers = '';\n\tif (options.global) {\n\t\tmodifiers += 'g';\n\t}\n\tif (!options.matchCase) {\n\t\tmodifiers += 'i';\n\t}\n\tif (options.multiline) {\n\t\tmodifiers += 'm';\n\t}\n\tif (options.unicode) {\n\t\tmodifiers += 'u';\n\t}\n\n\treturn new RegExp(searchString, modifiers);\n}\n\nexport function regExpLeadsToEndlessLoop(regexp: RegExp): boolean {\n\t// Exit early if it's one of these special cases which are meant to match\n\t// against an empty string\n\tif (regexp.source === '^' || regexp.source === '^$' || regexp.source === '$' || regexp.source === '^\\\\s*$') {\n\t\treturn false;\n\t}\n\n\t// We check against an empty string. If the regular expression doesn't advance\n\t// (e.g. ends in an endless loop) it will match an empty string.\n\tconst match = regexp.exec('');\n\treturn !!(match && <any>regexp.lastIndex === 0);\n}\n\nexport function regExpFlags(regexp: RegExp): string {\n\treturn (regexp.global ? 'g' : '')\n\t\t+ (regexp.ignoreCase ? 'i' : '')\n\t\t+ (regexp.multiline ? 'm' : '')\n\t\t+ ((regexp as any).unicode ? 'u' : '');\n}\n\n/**\n * Returns first index of the string that is not whitespace.\n * If string is empty or contains only whitespaces, returns -1\n */\nexport function firstNonWhitespaceIndex(str: string): number {\n\tfor (let i = 0, len = str.length; i < len; i++) {\n\t\tconst chCode = str.charCodeAt(i);\n\t\tif (chCode !== CharCode.Space && chCode !== CharCode.Tab) {\n\t\t\treturn i;\n\t\t}\n\t}\n\treturn -1;\n}\n\n/**\n * Returns the leading whitespace of the string.\n * If the string contains only whitespaces, returns entire string\n */\nexport function getLeadingWhitespace(str: string, start: number = 0, end: number = str.length): string {\n\tfor (let i = start; i < end; i++) {\n\t\tconst chCode = str.charCodeAt(i);\n\t\tif (chCode !== CharCode.Space && chCode !== CharCode.Tab) {\n\t\t\treturn str.substring(start, i);\n\t\t}\n\t}\n\treturn str.substring(start, end);\n}\n\n/**\n * Returns last index of the string that is not whitespace.\n * If string is empty or contains only whitespaces, returns -1\n */\nexport function lastNonWhitespaceIndex(str: string, startIndex: number = str.length - 1): number {\n\tfor (let i = startIndex; i >= 0; i--) {\n\t\tconst chCode = str.charCodeAt(i);\n\t\tif (chCode !== CharCode.Space && chCode !== CharCode.Tab) {\n\t\t\treturn i;\n\t\t}\n\t}\n\treturn -1;\n}\n\nexport function compare(a: string, b: string): number {\n\tif (a < b) {\n\t\treturn -1;\n\t} else if (a > b) {\n\t\treturn 1;\n\t} else {\n\t\treturn 0;\n\t}\n}\n\nexport function isLowerAsciiLetter(code: number): boolean {\n\treturn code >= CharCode.a && code <= CharCode.z;\n}\n\nexport function isUpperAsciiLetter(code: number): boolean {\n\treturn code >= CharCode.A && code <= CharCode.Z;\n}\n\nfunction isAsciiLetter(code: number): boolean {\n\treturn isLowerAsciiLetter(code) || isUpperAsciiLetter(code);\n}\n\nexport function equalsIgnoreCase(a: string, b: string): boolean {\n\tconst len1 = a ? a.length : 0;\n\tconst len2 = b ? b.length : 0;\n\n\tif (len1 !== len2) {\n\t\treturn false;\n\t}\n\n\treturn doEqualsIgnoreCase(a, b);\n}\n\nfunction doEqualsIgnoreCase(a: string, b: string, stopAt = a.length): boolean {\n\tif (typeof a !== 'string' || typeof b !== 'string') {\n\t\treturn false;\n\t}\n\n\tfor (let i = 0; i < stopAt; i++) {\n\t\tconst codeA = a.charCodeAt(i);\n\t\tconst codeB = b.charCodeAt(i);\n\n\t\tif (codeA === codeB) {\n\t\t\tcontinue;\n\t\t}\n\n\t\t// a-z A-Z\n\t\tif (isAsciiLetter(codeA) && isAsciiLetter(codeB)) {\n\t\t\tconst diff = Math.abs(codeA - codeB);\n\t\t\tif (diff !== 0 && diff !== 32) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\n\t\t// Any other charcode\n\t\telse {\n\t\t\tif (String.fromCharCode(codeA).toLowerCase() !== String.fromCharCode(codeB).toLowerCase()) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t}\n\n\treturn true;\n}\n\nexport function startsWithIgnoreCase(str: string, candidate: string): boolean {\n\tconst candidateLength = candidate.length;\n\tif (candidate.length > str.length) {\n\t\treturn false;\n\t}\n\n\treturn doEqualsIgnoreCase(str, candidate, candidateLength);\n}\n\n/**\n * @returns the length of the common prefix of the two strings.\n */\nexport function commonPrefixLength(a: string, b: string): number {\n\n\tlet i: number,\n\t\tlen = Math.min(a.length, b.length);\n\n\tfor (i = 0; i < len; i++) {\n\t\tif (a.charCodeAt(i) !== b.charCodeAt(i)) {\n\t\t\treturn i;\n\t\t}\n\t}\n\n\treturn len;\n}\n\n/**\n * @returns the length of the common suffix of the two strings.\n */\nexport function commonSuffixLength(a: string, b: string): number {\n\n\tlet i: number,\n\t\tlen = Math.min(a.length, b.length);\n\n\tconst aLastIndex = a.length - 1;\n\tconst bLastIndex = b.length - 1;\n\n\tfor (i = 0; i < len; i++) {\n\t\tif (a.charCodeAt(aLastIndex - i) !== b.charCodeAt(bLastIndex - i)) {\n\t\t\treturn i;\n\t\t}\n\t}\n\n\treturn len;\n}\n\n// --- unicode\n// http://en.wikipedia.org/wiki/Surrogate_pair\n// Returns the code point starting at a specified index in a string\n// Code points U+0000 to U+D7FF and U+E000 to U+FFFF are represented on a single character\n// Code points U+10000 to U+10FFFF are represented on two consecutive characters\n//export function getUnicodePoint(str:string, index:number, len:number):number {\n//\tconst chrCode = str.charCodeAt(index);\n//\tif (0xD800 <= chrCode && chrCode <= 0xDBFF && index + 1 < len) {\n//\t\tconst nextChrCode = str.charCodeAt(index + 1);\n//\t\tif (0xDC00 <= nextChrCode && nextChrCode <= 0xDFFF) {\n//\t\t\treturn (chrCode - 0xD800) << 10 + (nextChrCode - 0xDC00) + 0x10000;\n//\t\t}\n//\t}\n//\treturn chrCode;\n//}\nexport function isHighSurrogate(charCode: number): boolean {\n\treturn (0xD800 <= charCode && charCode <= 0xDBFF);\n}\n\nexport function isLowSurrogate(charCode: number): boolean {\n\treturn (0xDC00 <= charCode && charCode <= 0xDFFF);\n}\n\n/**\n * Generated using https://github.com/alexandrudima/unicode-utils/blob/master/generate-rtl-test.js\n */\nconst CONTAINS_RTL = /(?:[\\u05BE\\u05C0\\u05C3\\u05C6\\u05D0-\\u05F4\\u0608\\u060B\\u060D\\u061B-\\u064A\\u066D-\\u066F\\u0671-\\u06D5\\u06E5\\u06E6\\u06EE\\u06EF\\u06FA-\\u0710\\u0712-\\u072F\\u074D-\\u07A5\\u07B1-\\u07EA\\u07F4\\u07F5\\u07FA-\\u0815\\u081A\\u0824\\u0828\\u0830-\\u0858\\u085E-\\u08BD\\u200F\\uFB1D\\uFB1F-\\uFB28\\uFB2A-\\uFD3D\\uFD50-\\uFDFC\\uFE70-\\uFEFC]|\\uD802[\\uDC00-\\uDD1B\\uDD20-\\uDE00\\uDE10-\\uDE33\\uDE40-\\uDEE4\\uDEEB-\\uDF35\\uDF40-\\uDFFF]|\\uD803[\\uDC00-\\uDCFF]|\\uD83A[\\uDC00-\\uDCCF\\uDD00-\\uDD43\\uDD50-\\uDFFF]|\\uD83B[\\uDC00-\\uDEBB])/;\n\n/**\n * Returns true if `str` contains any Unicode character that is classified as \"R\" or \"AL\".\n */\nexport function containsRTL(str: string): boolean {\n\treturn CONTAINS_RTL.test(str);\n}\n\n/**\n * Generated using https://github.com/alexandrudima/unicode-utils/blob/master/generate-emoji-test.js\n */\nconst CONTAINS_EMOJI = /(?:[\\u231A\\u231B\\u23F0\\u23F3\\u2600-\\u27BF\\u2B50\\u2B55]|\\uD83C[\\uDDE6-\\uDDFF\\uDF00-\\uDFFF]|\\uD83D[\\uDC00-\\uDE4F\\uDE80-\\uDEF8]|\\uD83E[\\uDD00-\\uDDE6])/;\n\nexport function containsEmoji(str: string): boolean {\n\treturn CONTAINS_EMOJI.test(str);\n}\n\nconst IS_BASIC_ASCII = /^[\\t\\n\\r\\x20-\\x7E]*$/;\n/**\n * Returns true if `str` contains only basic ASCII characters in the range 32 - 126 (including 32 and 126) or \\n, \\r, \\t\n */\nexport function isBasicASCII(str: string): boolean {\n\treturn IS_BASIC_ASCII.test(str);\n}\n\nexport function containsFullWidthCharacter(str: string): boolean {\n\tfor (let i = 0, len = str.length; i < len; i++) {\n\t\tif (isFullWidthCharacter(str.charCodeAt(i))) {\n\t\t\treturn true;\n\t\t}\n\t}\n\treturn false;\n}\n\nexport function isFullWidthCharacter(charCode: number): boolean {\n\t// Do a cheap trick to better support wrapping of wide characters, treat them as 2 columns\n\t// http://jrgraphix.net/research/unicode_blocks.php\n\t//          2E80 — 2EFF   CJK Radicals Supplement\n\t//          2F00 — 2FDF   Kangxi Radicals\n\t//          2FF0 — 2FFF   Ideographic Description Characters\n\t//          3000 — 303F   CJK Symbols and Punctuation\n\t//          3040 — 309F   Hiragana\n\t//          30A0 — 30FF   Katakana\n\t//          3100 — 312F   Bopomofo\n\t//          3130 — 318F   Hangul Compatibility Jamo\n\t//          3190 — 319F   Kanbun\n\t//          31A0 — 31BF   Bopomofo Extended\n\t//          31F0 — 31FF   Katakana Phonetic Extensions\n\t//          3200 — 32FF   Enclosed CJK Letters and Months\n\t//          3300 — 33FF   CJK Compatibility\n\t//          3400 — 4DBF   CJK Unified Ideographs Extension A\n\t//          4DC0 — 4DFF   Yijing Hexagram Symbols\n\t//          4E00 — 9FFF   CJK Unified Ideographs\n\t//          A000 — A48F   Yi Syllables\n\t//          A490 — A4CF   Yi Radicals\n\t//          AC00 — D7AF   Hangul Syllables\n\t// [IGNORE] D800 — DB7F   High Surrogates\n\t// [IGNORE] DB80 — DBFF   High Private Use Surrogates\n\t// [IGNORE] DC00 — DFFF   Low Surrogates\n\t// [IGNORE] E000 — F8FF   Private Use Area\n\t//          F900 — FAFF   CJK Compatibility Ideographs\n\t// [IGNORE] FB00 — FB4F   Alphabetic Presentation Forms\n\t// [IGNORE] FB50 — FDFF   Arabic Presentation Forms-A\n\t// [IGNORE] FE00 — FE0F   Variation Selectors\n\t// [IGNORE] FE20 — FE2F   Combining Half Marks\n\t// [IGNORE] FE30 — FE4F   CJK Compatibility Forms\n\t// [IGNORE] FE50 — FE6F   Small Form Variants\n\t// [IGNORE] FE70 — FEFF   Arabic Presentation Forms-B\n\t//          FF00 — FFEF   Halfwidth and Fullwidth Forms\n\t//               [https://en.wikipedia.org/wiki/Halfwidth_and_fullwidth_forms]\n\t//               of which FF01 - FF5E fullwidth ASCII of 21 to 7E\n\t// [IGNORE]    and FF65 - FFDC halfwidth of Katakana and Hangul\n\t// [IGNORE] FFF0 — FFFF   Specials\n\tcharCode = +charCode; // @perf\n\treturn (\n\t\t(charCode >= 0x2E80 && charCode <= 0xD7AF)\n\t\t|| (charCode >= 0xF900 && charCode <= 0xFAFF)\n\t\t|| (charCode >= 0xFF01 && charCode <= 0xFF5E)\n\t);\n}\n\n\n// -- UTF-8 BOM\n\nexport const UTF8_BOM_CHARACTER = String.fromCharCode(CharCode.UTF8_BOM);\n\nexport function startsWithUTF8BOM(str: string): boolean {\n\treturn !!(str && str.length > 0 && str.charCodeAt(0) === CharCode.UTF8_BOM);\n}\n\nexport function safeBtoa(str: string): string {\n\treturn btoa(encodeURIComponent(str)); // we use encodeURIComponent because btoa fails for non Latin 1 values\n}\n\nexport function repeat(s: string, count: number): string {\n\tlet result = '';\n\tfor (let i = 0; i < count; i++) {\n\t\tresult += s;\n\t}\n\treturn result;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nconst _typeof = {\n\tnumber: 'number',\n\tstring: 'string',\n\tundefined: 'undefined',\n\tobject: 'object',\n\tfunction: 'function'\n};\n\n/**\n * @returns whether the provided parameter is a JavaScript Array or not.\n */\nexport function isArray(array: any): array is any[] {\n\tif (Array.isArray) {\n\t\treturn Array.isArray(array);\n\t}\n\n\tif (array && typeof (array.length) === _typeof.number && array.constructor === Array) {\n\t\treturn true;\n\t}\n\n\treturn false;\n}\n\n/**\n * @returns whether the provided parameter is a JavaScript String or not.\n */\nexport function isString(str: any): str is string {\n\tif (typeof (str) === _typeof.string || str instanceof String) {\n\t\treturn true;\n\t}\n\n\treturn false;\n}\n\n/**\n *\n * @returns whether the provided parameter is of type `object` but **not**\n *\t`null`, an `array`, a `regexp`, nor a `date`.\n */\nexport function isObject(obj: any): obj is Object {\n\t// The method can't do a type cast since there are type (like strings) which\n\t// are subclasses of any put not positvely matched by the function. Hence type\n\t// narrowing results in wrong results.\n\treturn typeof obj === _typeof.object\n\t\t&& obj !== null\n\t\t&& !Array.isArray(obj)\n\t\t&& !(obj instanceof RegExp)\n\t\t&& !(obj instanceof Date);\n}\n\n/**\n * In **contrast** to just checking `typeof` this will return `false` for `NaN`.\n * @returns whether the provided parameter is a JavaScript Number or not.\n */\nexport function isNumber(obj: any): obj is number {\n\tif ((typeof (obj) === _typeof.number || obj instanceof Number) && !isNaN(obj)) {\n\t\treturn true;\n\t}\n\n\treturn false;\n}\n\n/**\n * @returns whether the provided parameter is a JavaScript Boolean or not.\n */\nexport function isBoolean(obj: any): obj is boolean {\n\treturn obj === true || obj === false;\n}\n\n/**\n * @returns whether the provided parameter is undefined.\n */\nexport function isUndefined(obj: any): obj is undefined {\n\treturn typeof (obj) === _typeof.undefined;\n}\n\n/**\n * @returns whether the provided parameter is undefined or null.\n */\nexport function isUndefinedOrNull(obj: any): obj is undefined | null {\n\treturn isUndefined(obj) || obj === null;\n}\n\nconst hasOwnProperty = Object.prototype.hasOwnProperty;\n\n/**\n * @returns whether the provided parameter is an empty JavaScript Object or not.\n */\nexport function isEmptyObject(obj: any): obj is any {\n\tif (!isObject(obj)) {\n\t\treturn false;\n\t}\n\n\tfor (let key in obj) {\n\t\tif (hasOwnProperty.call(obj, key)) {\n\t\t\treturn false;\n\t\t}\n\t}\n\n\treturn true;\n}\n\n/**\n * @returns whether the provided parameter is a JavaScript Function or not.\n */\nexport function isFunction(obj: any): obj is Function {\n\treturn typeof obj === _typeof.function;\n}\n\nexport type TypeConstraint = string | Function;\n\nexport function validateConstraints(args: any[], constraints: Array<TypeConstraint | undefined>): void {\n\tconst len = Math.min(args.length, constraints.length);\n\tfor (let i = 0; i < len; i++) {\n\t\tvalidateConstraint(args[i], constraints[i]);\n\t}\n}\n\nexport function validateConstraint(arg: any, constraint: TypeConstraint | undefined): void {\n\n\tif (isString(constraint)) {\n\t\tif (typeof arg !== constraint) {\n\t\t\tthrow new Error(`argument does not match constraint: typeof ${constraint}`);\n\t\t}\n\t} else if (isFunction(constraint)) {\n\t\ttry {\n\t\t\tif (arg instanceof constraint) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t} catch{\n\t\t\t// ignore\n\t\t}\n\t\tif (!isUndefinedOrNull(arg) && arg.constructor === constraint) {\n\t\t\treturn;\n\t\t}\n\t\tif (constraint.length === 1 && constraint.call(undefined, arg) === true) {\n\t\t\treturn;\n\t\t}\n\t\tthrow new Error(`argument does not match one of these constraints: arg instanceof constraint, arg.constructor === constraint, nor constraint(arg) === true`);\n\t}\n}\n\nexport function getAllPropertyNames(obj: object): string[] {\n\tlet res: string[] = [];\n\tlet proto = Object.getPrototypeOf(obj);\n\twhile (Object.prototype !== proto) {\n\t\tres = res.concat(Object.getOwnPropertyNames(proto));\n\t\tproto = Object.getPrototypeOf(proto);\n\t}\n\treturn res;\n}\n\n/**\n * Converts null to undefined, passes all other values through.\n */\nexport function withNullAsUndefined<T>(x: T | null): T | undefined {\n\treturn x === null ? undefined : x;\n}\n\n/**\n * Converts undefined to null, passes all other values through.\n */\nexport function withUndefinedAsNull<T>(x: T | undefined): T | null {\n\treturn typeof x === 'undefined' ? null : x;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { isWindows } from 'vs/base/common/platform';\nimport { CharCode } from 'vs/base/common/charCode';\n\nconst _schemePattern = /^\\w[\\w\\d+.-]*$/;\nconst _singleSlashStart = /^\\//;\nconst _doubleSlashStart = /^\\/\\//;\n\nlet _throwOnMissingSchema: boolean = true;\n\nfunction _validateUri(ret: URI, _strict?: boolean): void {\n\n\t// scheme, must be set\n\tif (!ret.scheme) {\n\t\tif (_strict || _throwOnMissingSchema) {\n\t\t\tthrow new Error(`[UriError]: Scheme is missing: {scheme: \"\", authority: \"${ret.authority}\", path: \"${ret.path}\", query: \"${ret.query}\", fragment: \"${ret.fragment}\"}`);\n\t\t} else {\n\t\t\tconsole.warn(`[UriError]: Scheme is missing: {scheme: \"\", authority: \"${ret.authority}\", path: \"${ret.path}\", query: \"${ret.query}\", fragment: \"${ret.fragment}\"}`);\n\t\t}\n\t}\n\n\t// scheme, https://tools.ietf.org/html/rfc3986#section-3.1\n\t// ALPHA *( ALPHA / DIGIT / \"+\" / \"-\" / \".\" )\n\tif (ret.scheme && !_schemePattern.test(ret.scheme)) {\n\t\tthrow new Error('[UriError]: Scheme contains illegal characters.');\n\t}\n\n\t// path, http://tools.ietf.org/html/rfc3986#section-3.3\n\t// If a URI contains an authority component, then the path component\n\t// must either be empty or begin with a slash (\"/\") character.  If a URI\n\t// does not contain an authority component, then the path cannot begin\n\t// with two slash characters (\"//\").\n\tif (ret.path) {\n\t\tif (ret.authority) {\n\t\t\tif (!_singleSlashStart.test(ret.path)) {\n\t\t\t\tthrow new Error('[UriError]: If a URI contains an authority component, then the path component must either be empty or begin with a slash (\"/\") character');\n\t\t\t}\n\t\t} else {\n\t\t\tif (_doubleSlashStart.test(ret.path)) {\n\t\t\t\tthrow new Error('[UriError]: If a URI does not contain an authority component, then the path cannot begin with two slash characters (\"//\")');\n\t\t\t}\n\t\t}\n\t}\n}\n\n// for a while we allowed uris *without* schemes and this is the migration\n// for them, e.g. an uri without scheme and without strict-mode warns and falls\n// back to the file-scheme. that should cause the least carnage and still be a\n// clear warning\nfunction _schemeFix(scheme: string, _strict: boolean): string {\n\tif (_strict || _throwOnMissingSchema) {\n\t\treturn scheme || _empty;\n\t}\n\tif (!scheme) {\n\t\tconsole.trace('BAD uri lacks scheme, falling back to file-scheme.');\n\t\tscheme = 'file';\n\t}\n\treturn scheme;\n}\n\n// implements a bit of https://tools.ietf.org/html/rfc3986#section-5\nfunction _referenceResolution(scheme: string, path: string): string {\n\n\t// the slash-character is our 'default base' as we don't\n\t// support constructing URIs relative to other URIs. This\n\t// also means that we alter and potentially break paths.\n\t// see https://tools.ietf.org/html/rfc3986#section-5.1.4\n\tswitch (scheme) {\n\t\tcase 'https':\n\t\tcase 'http':\n\t\tcase 'file':\n\t\t\tif (!path) {\n\t\t\t\tpath = _slash;\n\t\t\t} else if (path[0] !== _slash) {\n\t\t\t\tpath = _slash + path;\n\t\t\t}\n\t\t\tbreak;\n\t}\n\treturn path;\n}\n\nconst _empty = '';\nconst _slash = '/';\nconst _regexp = /^(([^:/?#]+?):)?(\\/\\/([^/?#]*))?([^?#]*)(\\?([^#]*))?(#(.*))?/;\n\n/**\n * Uniform Resource Identifier (URI) http://tools.ietf.org/html/rfc3986.\n * This class is a simple parser which creates the basic component parts\n * (http://tools.ietf.org/html/rfc3986#section-3) with minimal validation\n * and encoding.\n *\n *       foo://example.com:8042/over/there?name=ferret#nose\n *       \\_/   \\______________/\\_________/ \\_________/ \\__/\n *        |           |            |            |        |\n *     scheme     authority       path        query   fragment\n *        |   _____________________|__\n *       / \\ /                        \\\n *       urn:example:animal:ferret:nose\n */\nexport class URI implements UriComponents {\n\n\tstatic isUri(thing: any): thing is URI {\n\t\tif (thing instanceof URI) {\n\t\t\treturn true;\n\t\t}\n\t\tif (!thing) {\n\t\t\treturn false;\n\t\t}\n\t\treturn typeof (<URI>thing).authority === 'string'\n\t\t\t&& typeof (<URI>thing).fragment === 'string'\n\t\t\t&& typeof (<URI>thing).path === 'string'\n\t\t\t&& typeof (<URI>thing).query === 'string'\n\t\t\t&& typeof (<URI>thing).scheme === 'string'\n\t\t\t&& typeof (<URI>thing).fsPath === 'function'\n\t\t\t&& typeof (<URI>thing).with === 'function'\n\t\t\t&& typeof (<URI>thing).toString === 'function';\n\t}\n\n\t/**\n\t * scheme is the 'http' part of 'http://www.msft.com/some/path?query#fragment'.\n\t * The part before the first colon.\n\t */\n\treadonly scheme: string;\n\n\t/**\n\t * authority is the 'www.msft.com' part of 'http://www.msft.com/some/path?query#fragment'.\n\t * The part between the first double slashes and the next slash.\n\t */\n\treadonly authority: string;\n\n\t/**\n\t * path is the '/some/path' part of 'http://www.msft.com/some/path?query#fragment'.\n\t */\n\treadonly path: string;\n\n\t/**\n\t * query is the 'query' part of 'http://www.msft.com/some/path?query#fragment'.\n\t */\n\treadonly query: string;\n\n\t/**\n\t * fragment is the 'fragment' part of 'http://www.msft.com/some/path?query#fragment'.\n\t */\n\treadonly fragment: string;\n\n\t/**\n\t * @internal\n\t */\n\tprotected constructor(scheme: string, authority?: string, path?: string, query?: string, fragment?: string, _strict?: boolean);\n\n\t/**\n\t * @internal\n\t */\n\tprotected constructor(components: UriComponents);\n\n\t/**\n\t * @internal\n\t */\n\tprotected constructor(schemeOrData: string | UriComponents, authority?: string, path?: string, query?: string, fragment?: string, _strict: boolean = false) {\n\n\t\tif (typeof schemeOrData === 'object') {\n\t\t\tthis.scheme = schemeOrData.scheme || _empty;\n\t\t\tthis.authority = schemeOrData.authority || _empty;\n\t\t\tthis.path = schemeOrData.path || _empty;\n\t\t\tthis.query = schemeOrData.query || _empty;\n\t\t\tthis.fragment = schemeOrData.fragment || _empty;\n\t\t\t// no validation because it's this URI\n\t\t\t// that creates uri components.\n\t\t\t// _validateUri(this);\n\t\t} else {\n\t\t\tthis.scheme = _schemeFix(schemeOrData, _strict);\n\t\t\tthis.authority = authority || _empty;\n\t\t\tthis.path = _referenceResolution(this.scheme, path || _empty);\n\t\t\tthis.query = query || _empty;\n\t\t\tthis.fragment = fragment || _empty;\n\n\t\t\t_validateUri(this, _strict);\n\t\t}\n\t}\n\n\t// ---- filesystem path -----------------------\n\n\t/**\n\t * Returns a string representing the corresponding file system path of this URI.\n\t * Will handle UNC paths, normalizes windows drive letters to lower-case, and uses the\n\t * platform specific path separator.\n\t *\n\t * * Will *not* validate the path for invalid characters and semantics.\n\t * * Will *not* look at the scheme of this URI.\n\t * * The result shall *not* be used for display purposes but for accessing a file on disk.\n\t *\n\t *\n\t * The *difference* to `URI#path` is the use of the platform specific separator and the handling\n\t * of UNC paths. See the below sample of a file-uri with an authority (UNC path).\n\t *\n\t * ```ts\n\t\tconst u = URI.parse('file://server/c$/folder/file.txt')\n\t\tu.authority === 'server'\n\t\tu.path === '/shares/c$/file.txt'\n\t\tu.fsPath === '\\\\server\\c$\\folder\\file.txt'\n\t```\n\t *\n\t * Using `URI#path` to read a file (using fs-apis) would not be enough because parts of the path,\n\t * namely the server name, would be missing. Therefore `URI#fsPath` exists - it's sugar to ease working\n\t * with URIs that represent files on disk (`file` scheme).\n\t */\n\tget fsPath(): string {\n\t\t// if (this.scheme !== 'file') {\n\t\t// \tconsole.warn(`[UriError] calling fsPath with scheme ${this.scheme}`);\n\t\t// }\n\t\treturn _makeFsPath(this);\n\t}\n\n\t// ---- modify to new -------------------------\n\n\twith(change: { scheme?: string; authority?: string | null; path?: string | null; query?: string | null; fragment?: string | null }): URI {\n\n\t\tif (!change) {\n\t\t\treturn this;\n\t\t}\n\n\t\tlet { scheme, authority, path, query, fragment } = change;\n\t\tif (scheme === undefined) {\n\t\t\tscheme = this.scheme;\n\t\t} else if (scheme === null) {\n\t\t\tscheme = _empty;\n\t\t}\n\t\tif (authority === undefined) {\n\t\t\tauthority = this.authority;\n\t\t} else if (authority === null) {\n\t\t\tauthority = _empty;\n\t\t}\n\t\tif (path === undefined) {\n\t\t\tpath = this.path;\n\t\t} else if (path === null) {\n\t\t\tpath = _empty;\n\t\t}\n\t\tif (query === undefined) {\n\t\t\tquery = this.query;\n\t\t} else if (query === null) {\n\t\t\tquery = _empty;\n\t\t}\n\t\tif (fragment === undefined) {\n\t\t\tfragment = this.fragment;\n\t\t} else if (fragment === null) {\n\t\t\tfragment = _empty;\n\t\t}\n\n\t\tif (scheme === this.scheme\n\t\t\t&& authority === this.authority\n\t\t\t&& path === this.path\n\t\t\t&& query === this.query\n\t\t\t&& fragment === this.fragment) {\n\n\t\t\treturn this;\n\t\t}\n\n\t\treturn new _URI(scheme, authority, path, query, fragment);\n\t}\n\n\t// ---- parse & validate ------------------------\n\n\t/**\n\t * Creates a new URI from a string, e.g. `http://www.msft.com/some/path`,\n\t * `file:///usr/home`, or `scheme:with/path`.\n\t *\n\t * @param value A string which represents an URI (see `URI#toString`).\n\t */\n\tstatic parse(value: string, _strict: boolean = false): URI {\n\t\tconst match = _regexp.exec(value);\n\t\tif (!match) {\n\t\t\treturn new _URI(_empty, _empty, _empty, _empty, _empty);\n\t\t}\n\t\treturn new _URI(\n\t\t\tmatch[2] || _empty,\n\t\t\tdecodeURIComponent(match[4] || _empty),\n\t\t\tdecodeURIComponent(match[5] || _empty),\n\t\t\tdecodeURIComponent(match[7] || _empty),\n\t\t\tdecodeURIComponent(match[9] || _empty),\n\t\t\t_strict\n\t\t);\n\t}\n\n\t/**\n\t * Creates a new URI from a file system path, e.g. `c:\\my\\files`,\n\t * `/usr/home`, or `\\\\server\\share\\some\\path`.\n\t *\n\t * The *difference* between `URI#parse` and `URI#file` is that the latter treats the argument\n\t * as path, not as stringified-uri. E.g. `URI.file(path)` is **not the same as**\n\t * `URI.parse('file://' + path)` because the path might contain characters that are\n\t * interpreted (# and ?). See the following sample:\n\t * ```ts\n\tconst good = URI.file('/coding/c#/project1');\n\tgood.scheme === 'file';\n\tgood.path === '/coding/c#/project1';\n\tgood.fragment === '';\n\tconst bad = URI.parse('file://' + '/coding/c#/project1');\n\tbad.scheme === 'file';\n\tbad.path === '/coding/c'; // path is now broken\n\tbad.fragment === '/project1';\n\t```\n\t *\n\t * @param path A file system path (see `URI#fsPath`)\n\t */\n\tstatic file(path: string): URI {\n\n\t\tlet authority = _empty;\n\n\t\t// normalize to fwd-slashes on windows,\n\t\t// on other systems bwd-slashes are valid\n\t\t// filename character, eg /f\\oo/ba\\r.txt\n\t\tif (isWindows) {\n\t\t\tpath = path.replace(/\\\\/g, _slash);\n\t\t}\n\n\t\t// check for authority as used in UNC shares\n\t\t// or use the path as given\n\t\tif (path[0] === _slash && path[1] === _slash) {\n\t\t\tconst idx = path.indexOf(_slash, 2);\n\t\t\tif (idx === -1) {\n\t\t\t\tauthority = path.substring(2);\n\t\t\t\tpath = _slash;\n\t\t\t} else {\n\t\t\t\tauthority = path.substring(2, idx);\n\t\t\t\tpath = path.substring(idx) || _slash;\n\t\t\t}\n\t\t}\n\n\t\treturn new _URI('file', authority, path, _empty, _empty);\n\t}\n\n\tstatic from(components: { scheme: string; authority?: string; path?: string; query?: string; fragment?: string }): URI {\n\t\treturn new _URI(\n\t\t\tcomponents.scheme,\n\t\t\tcomponents.authority,\n\t\t\tcomponents.path,\n\t\t\tcomponents.query,\n\t\t\tcomponents.fragment,\n\t\t);\n\t}\n\n\t// ---- printing/externalize ---------------------------\n\n\t/**\n\t * Creates a string representation for this URI. It's guaranteed that calling\n\t * `URI.parse` with the result of this function creates an URI which is equal\n\t * to this URI.\n\t *\n\t * * The result shall *not* be used for display purposes but for externalization or transport.\n\t * * The result will be encoded using the percentage encoding and encoding happens mostly\n\t * ignore the scheme-specific encoding rules.\n\t *\n\t * @param skipEncoding Do not encode the result, default is `false`\n\t */\n\ttoString(skipEncoding: boolean = false): string {\n\t\treturn _asFormatted(this, skipEncoding);\n\t}\n\n\ttoJSON(): UriComponents {\n\t\treturn this;\n\t}\n\n\tstatic revive(data: UriComponents | URI): URI;\n\tstatic revive(data: UriComponents | URI | undefined): URI | undefined;\n\tstatic revive(data: UriComponents | URI | null): URI | null;\n\tstatic revive(data: UriComponents | URI | undefined | null): URI | undefined | null;\n\tstatic revive(data: UriComponents | URI | undefined | null): URI | undefined | null {\n\t\tif (!data) {\n\t\t\treturn data;\n\t\t} else if (data instanceof URI) {\n\t\t\treturn data;\n\t\t} else {\n\t\t\tconst result = new _URI(data);\n\t\t\tresult._fsPath = (<UriState>data).fsPath;\n\t\t\tresult._formatted = (<UriState>data).external;\n\t\t\treturn result;\n\t\t}\n\t}\n}\n\nexport interface UriComponents {\n\tscheme: string;\n\tauthority: string;\n\tpath: string;\n\tquery: string;\n\tfragment: string;\n}\n\ninterface UriState extends UriComponents {\n\t$mid: number;\n\tfsPath: string;\n\texternal: string;\n}\n\n\n// tslint:disable-next-line:class-name\nclass _URI extends URI {\n\n\t_formatted: string | null = null;\n\t_fsPath: string | null = null;\n\n\tget fsPath(): string {\n\t\tif (!this._fsPath) {\n\t\t\tthis._fsPath = _makeFsPath(this);\n\t\t}\n\t\treturn this._fsPath;\n\t}\n\n\ttoString(skipEncoding: boolean = false): string {\n\t\tif (!skipEncoding) {\n\t\t\tif (!this._formatted) {\n\t\t\t\tthis._formatted = _asFormatted(this, false);\n\t\t\t}\n\t\t\treturn this._formatted;\n\t\t} else {\n\t\t\t// we don't cache that\n\t\t\treturn _asFormatted(this, true);\n\t\t}\n\t}\n\n\ttoJSON(): UriComponents {\n\t\tconst res = <UriState>{\n\t\t\t$mid: 1\n\t\t};\n\t\t// cached state\n\t\tif (this._fsPath) {\n\t\t\tres.fsPath = this._fsPath;\n\t\t}\n\t\tif (this._formatted) {\n\t\t\tres.external = this._formatted;\n\t\t}\n\t\t// uri components\n\t\tif (this.path) {\n\t\t\tres.path = this.path;\n\t\t}\n\t\tif (this.scheme) {\n\t\t\tres.scheme = this.scheme;\n\t\t}\n\t\tif (this.authority) {\n\t\t\tres.authority = this.authority;\n\t\t}\n\t\tif (this.query) {\n\t\t\tres.query = this.query;\n\t\t}\n\t\tif (this.fragment) {\n\t\t\tres.fragment = this.fragment;\n\t\t}\n\t\treturn res;\n\t}\n}\n\n// reserved characters: https://tools.ietf.org/html/rfc3986#section-2.2\nconst encodeTable: { [ch: number]: string } = {\n\t[CharCode.Colon]: '%3A', // gen-delims\n\t[CharCode.Slash]: '%2F',\n\t[CharCode.QuestionMark]: '%3F',\n\t[CharCode.Hash]: '%23',\n\t[CharCode.OpenSquareBracket]: '%5B',\n\t[CharCode.CloseSquareBracket]: '%5D',\n\t[CharCode.AtSign]: '%40',\n\n\t[CharCode.ExclamationMark]: '%21', // sub-delims\n\t[CharCode.DollarSign]: '%24',\n\t[CharCode.Ampersand]: '%26',\n\t[CharCode.SingleQuote]: '%27',\n\t[CharCode.OpenParen]: '%28',\n\t[CharCode.CloseParen]: '%29',\n\t[CharCode.Asterisk]: '%2A',\n\t[CharCode.Plus]: '%2B',\n\t[CharCode.Comma]: '%2C',\n\t[CharCode.Semicolon]: '%3B',\n\t[CharCode.Equals]: '%3D',\n\n\t[CharCode.Space]: '%20',\n};\n\nfunction encodeURIComponentFast(uriComponent: string, allowSlash: boolean): string {\n\tlet res: string | undefined = undefined;\n\tlet nativeEncodePos = -1;\n\n\tfor (let pos = 0; pos < uriComponent.length; pos++) {\n\t\tconst code = uriComponent.charCodeAt(pos);\n\n\t\t// unreserved characters: https://tools.ietf.org/html/rfc3986#section-2.3\n\t\tif (\n\t\t\t(code >= CharCode.a && code <= CharCode.z)\n\t\t\t|| (code >= CharCode.A && code <= CharCode.Z)\n\t\t\t|| (code >= CharCode.Digit0 && code <= CharCode.Digit9)\n\t\t\t|| code === CharCode.Dash\n\t\t\t|| code === CharCode.Period\n\t\t\t|| code === CharCode.Underline\n\t\t\t|| code === CharCode.Tilde\n\t\t\t|| (allowSlash && code === CharCode.Slash)\n\t\t) {\n\t\t\t// check if we are delaying native encode\n\t\t\tif (nativeEncodePos !== -1) {\n\t\t\t\tres += encodeURIComponent(uriComponent.substring(nativeEncodePos, pos));\n\t\t\t\tnativeEncodePos = -1;\n\t\t\t}\n\t\t\t// check if we write into a new string (by default we try to return the param)\n\t\t\tif (res !== undefined) {\n\t\t\t\tres += uriComponent.charAt(pos);\n\t\t\t}\n\n\t\t} else {\n\t\t\t// encoding needed, we need to allocate a new string\n\t\t\tif (res === undefined) {\n\t\t\t\tres = uriComponent.substr(0, pos);\n\t\t\t}\n\n\t\t\t// check with default table first\n\t\t\tconst escaped = encodeTable[code];\n\t\t\tif (escaped !== undefined) {\n\n\t\t\t\t// check if we are delaying native encode\n\t\t\t\tif (nativeEncodePos !== -1) {\n\t\t\t\t\tres += encodeURIComponent(uriComponent.substring(nativeEncodePos, pos));\n\t\t\t\t\tnativeEncodePos = -1;\n\t\t\t\t}\n\n\t\t\t\t// append escaped variant to result\n\t\t\t\tres += escaped;\n\n\t\t\t} else if (nativeEncodePos === -1) {\n\t\t\t\t// use native encode only when needed\n\t\t\t\tnativeEncodePos = pos;\n\t\t\t}\n\t\t}\n\t}\n\n\tif (nativeEncodePos !== -1) {\n\t\tres += encodeURIComponent(uriComponent.substring(nativeEncodePos));\n\t}\n\n\treturn res !== undefined ? res : uriComponent;\n}\n\nfunction encodeURIComponentMinimal(path: string): string {\n\tlet res: string | undefined = undefined;\n\tfor (let pos = 0; pos < path.length; pos++) {\n\t\tconst code = path.charCodeAt(pos);\n\t\tif (code === CharCode.Hash || code === CharCode.QuestionMark) {\n\t\t\tif (res === undefined) {\n\t\t\t\tres = path.substr(0, pos);\n\t\t\t}\n\t\t\tres += encodeTable[code];\n\t\t} else {\n\t\t\tif (res !== undefined) {\n\t\t\t\tres += path[pos];\n\t\t\t}\n\t\t}\n\t}\n\treturn res !== undefined ? res : path;\n}\n\n/**\n * Compute `fsPath` for the given uri\n */\nfunction _makeFsPath(uri: URI): string {\n\n\tlet value: string;\n\tif (uri.authority && uri.path.length > 1 && uri.scheme === 'file') {\n\t\t// unc path: file://shares/c$/far/boo\n\t\tvalue = `//${uri.authority}${uri.path}`;\n\t} else if (\n\t\turi.path.charCodeAt(0) === CharCode.Slash\n\t\t&& (uri.path.charCodeAt(1) >= CharCode.A && uri.path.charCodeAt(1) <= CharCode.Z || uri.path.charCodeAt(1) >= CharCode.a && uri.path.charCodeAt(1) <= CharCode.z)\n\t\t&& uri.path.charCodeAt(2) === CharCode.Colon\n\t) {\n\t\t// windows drive letter: file:///c:/far/boo\n\t\tvalue = uri.path[1].toLowerCase() + uri.path.substr(2);\n\t} else {\n\t\t// other path\n\t\tvalue = uri.path;\n\t}\n\tif (isWindows) {\n\t\tvalue = value.replace(/\\//g, '\\\\');\n\t}\n\treturn value;\n}\n\n/**\n * Create the external version of a uri\n */\nfunction _asFormatted(uri: URI, skipEncoding: boolean): string {\n\n\tconst encoder = !skipEncoding\n\t\t? encodeURIComponentFast\n\t\t: encodeURIComponentMinimal;\n\n\tlet res = '';\n\tlet { scheme, authority, path, query, fragment } = uri;\n\tif (scheme) {\n\t\tres += scheme;\n\t\tres += ':';\n\t}\n\tif (authority || scheme === 'file') {\n\t\tres += _slash;\n\t\tres += _slash;\n\t}\n\tif (authority) {\n\t\tlet idx = authority.indexOf('@');\n\t\tif (idx !== -1) {\n\t\t\t// <user>@<auth>\n\t\t\tconst userinfo = authority.substr(0, idx);\n\t\t\tauthority = authority.substr(idx + 1);\n\t\t\tidx = userinfo.indexOf(':');\n\t\t\tif (idx === -1) {\n\t\t\t\tres += encoder(userinfo, false);\n\t\t\t} else {\n\t\t\t\t// <user>:<pass>@<auth>\n\t\t\t\tres += encoder(userinfo.substr(0, idx), false);\n\t\t\t\tres += ':';\n\t\t\t\tres += encoder(userinfo.substr(idx + 1), false);\n\t\t\t}\n\t\t\tres += '@';\n\t\t}\n\t\tauthority = authority.toLowerCase();\n\t\tidx = authority.indexOf(':');\n\t\tif (idx === -1) {\n\t\t\tres += encoder(authority, false);\n\t\t} else {\n\t\t\t// <auth>:<port>\n\t\t\tres += encoder(authority.substr(0, idx), false);\n\t\t\tres += authority.substr(idx);\n\t\t}\n\t}\n\tif (path) {\n\t\t// lower-case windows drive letters in /C:/fff or C:/fff\n\t\tif (path.length >= 3 && path.charCodeAt(0) === CharCode.Slash && path.charCodeAt(2) === CharCode.Colon) {\n\t\t\tconst code = path.charCodeAt(1);\n\t\t\tif (code >= CharCode.A && code <= CharCode.Z) {\n\t\t\t\tpath = `/${String.fromCharCode(code + 32)}:${path.substr(3)}`; // \"/c:\".length === 3\n\t\t\t}\n\t\t} else if (path.length >= 2 && path.charCodeAt(1) === CharCode.Colon) {\n\t\t\tconst code = path.charCodeAt(0);\n\t\t\tif (code >= CharCode.A && code <= CharCode.Z) {\n\t\t\t\tpath = `${String.fromCharCode(code + 32)}:${path.substr(2)}`; // \"/c:\".length === 3\n\t\t\t}\n\t\t}\n\t\t// encode the rest of the path\n\t\tres += encoder(path, true);\n\t}\n\tif (query) {\n\t\tres += '?';\n\t\tres += encoder(query, false);\n\t}\n\tif (fragment) {\n\t\tres += '#';\n\t\tres += !skipEncoding ? encodeURIComponentFast(fragment, false) : fragment;\n\t}\n\treturn res;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { transformErrorForSerialization } from 'vs/base/common/errors';\nimport { Disposable } from 'vs/base/common/lifecycle';\nimport { isWeb } from 'vs/base/common/platform';\nimport { getAllPropertyNames } from 'vs/base/common/types';\n\nconst INITIALIZE = '$initialize';\n\nexport interface IWorker {\n\tgetId(): number;\n\tpostMessage(message: string): void;\n\tdispose(): void;\n}\n\nexport interface IWorkerCallback {\n\t(message: string): void;\n}\n\nexport interface IWorkerFactory {\n\tcreate(moduleId: string, callback: IWorkerCallback, onErrorCallback: (err: any) => void): IWorker;\n}\n\nlet webWorkerWarningLogged = false;\nexport function logOnceWebWorkerWarning(err: any): void {\n\tif (!isWeb) {\n\t\t// running tests\n\t\treturn;\n\t}\n\tif (!webWorkerWarningLogged) {\n\t\twebWorkerWarningLogged = true;\n\t\tconsole.warn('Could not create web worker(s). Falling back to loading web worker code in main thread, which might cause UI freezes. Please see https://github.com/Microsoft/monaco-editor#faq');\n\t}\n\tconsole.warn(err.message);\n}\n\ninterface IMessage {\n\tvsWorker: number;\n\tseq?: string;\n}\n\ninterface IRequestMessage extends IMessage {\n\treq: string;\n\tmethod: string;\n\targs: any[];\n}\n\ninterface IReplyMessage extends IMessage {\n\tseq: string;\n\terr: any;\n\tres: any;\n}\n\ninterface IMessageReply {\n\tresolve: (value?: any) => void;\n\treject: (error?: any) => void;\n}\n\ninterface IMessageHandler {\n\tsendMessage(msg: string): void;\n\thandleMessage(method: string, args: any[]): Promise<any>;\n}\n\nclass SimpleWorkerProtocol {\n\n\tprivate _workerId: number;\n\tprivate _lastSentReq: number;\n\tprivate _pendingReplies: { [req: string]: IMessageReply; };\n\tprivate _handler: IMessageHandler;\n\n\tconstructor(handler: IMessageHandler) {\n\t\tthis._workerId = -1;\n\t\tthis._handler = handler;\n\t\tthis._lastSentReq = 0;\n\t\tthis._pendingReplies = Object.create(null);\n\t}\n\n\tpublic setWorkerId(workerId: number): void {\n\t\tthis._workerId = workerId;\n\t}\n\n\tpublic sendMessage(method: string, args: any[]): Promise<any> {\n\t\tlet req = String(++this._lastSentReq);\n\t\treturn new Promise<any>((resolve, reject) => {\n\t\t\tthis._pendingReplies[req] = {\n\t\t\t\tresolve: resolve,\n\t\t\t\treject: reject\n\t\t\t};\n\t\t\tthis._send({\n\t\t\t\tvsWorker: this._workerId,\n\t\t\t\treq: req,\n\t\t\t\tmethod: method,\n\t\t\t\targs: args\n\t\t\t});\n\t\t});\n\t}\n\n\tpublic handleMessage(serializedMessage: string): void {\n\t\tlet message: IMessage;\n\t\ttry {\n\t\t\tmessage = JSON.parse(serializedMessage);\n\t\t} catch (e) {\n\t\t\t// nothing\n\t\t\treturn;\n\t\t}\n\t\tif (!message || !message.vsWorker) {\n\t\t\treturn;\n\t\t}\n\t\tif (this._workerId !== -1 && message.vsWorker !== this._workerId) {\n\t\t\treturn;\n\t\t}\n\t\tthis._handleMessage(message);\n\t}\n\n\tprivate _handleMessage(msg: IMessage): void {\n\t\tif (msg.seq) {\n\t\t\tlet replyMessage = <IReplyMessage>msg;\n\t\t\tif (!this._pendingReplies[replyMessage.seq]) {\n\t\t\t\tconsole.warn('Got reply to unknown seq');\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tlet reply = this._pendingReplies[replyMessage.seq];\n\t\t\tdelete this._pendingReplies[replyMessage.seq];\n\n\t\t\tif (replyMessage.err) {\n\t\t\t\tlet err = replyMessage.err;\n\t\t\t\tif (replyMessage.err.$isError) {\n\t\t\t\t\terr = new Error();\n\t\t\t\t\terr.name = replyMessage.err.name;\n\t\t\t\t\terr.message = replyMessage.err.message;\n\t\t\t\t\terr.stack = replyMessage.err.stack;\n\t\t\t\t}\n\t\t\t\treply.reject(err);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\treply.resolve(replyMessage.res);\n\t\t\treturn;\n\t\t}\n\n\t\tlet requestMessage = <IRequestMessage>msg;\n\t\tlet req = requestMessage.req;\n\t\tlet result = this._handler.handleMessage(requestMessage.method, requestMessage.args);\n\t\tresult.then((r) => {\n\t\t\tthis._send({\n\t\t\t\tvsWorker: this._workerId,\n\t\t\t\tseq: req,\n\t\t\t\tres: r,\n\t\t\t\terr: undefined\n\t\t\t});\n\t\t}, (e) => {\n\t\t\tif (e.detail instanceof Error) {\n\t\t\t\t// Loading errors have a detail property that points to the actual error\n\t\t\t\te.detail = transformErrorForSerialization(e.detail);\n\t\t\t}\n\t\t\tthis._send({\n\t\t\t\tvsWorker: this._workerId,\n\t\t\t\tseq: req,\n\t\t\t\tres: undefined,\n\t\t\t\terr: transformErrorForSerialization(e)\n\t\t\t});\n\t\t});\n\t}\n\n\tprivate _send(msg: IRequestMessage | IReplyMessage): void {\n\t\tlet strMsg = JSON.stringify(msg);\n\t\t// console.log('SENDING: ' + strMsg);\n\t\tthis._handler.sendMessage(strMsg);\n\t}\n}\n\n/**\n * Main thread side\n */\nexport class SimpleWorkerClient<T> extends Disposable {\n\n\tprivate _worker: IWorker;\n\tprivate _onModuleLoaded: Promise<string[]>;\n\tprivate _protocol: SimpleWorkerProtocol;\n\tprivate _lazyProxy: Promise<T>;\n\n\tconstructor(workerFactory: IWorkerFactory, moduleId: string) {\n\t\tsuper();\n\n\t\tlet lazyProxyReject: ((err: any) => void) | null = null;\n\n\t\tthis._worker = this._register(workerFactory.create(\n\t\t\t'vs/base/common/worker/simpleWorker',\n\t\t\t(msg: string) => {\n\t\t\t\tthis._protocol.handleMessage(msg);\n\t\t\t},\n\t\t\t(err: any) => {\n\t\t\t\t// in Firefox, web workers fail lazily :(\n\t\t\t\t// we will reject the proxy\n\t\t\t\tif (lazyProxyReject) {\n\t\t\t\t\tlazyProxyReject(err);\n\t\t\t\t}\n\t\t\t}\n\t\t));\n\n\t\tthis._protocol = new SimpleWorkerProtocol({\n\t\t\tsendMessage: (msg: string): void => {\n\t\t\t\tthis._worker.postMessage(msg);\n\t\t\t},\n\t\t\thandleMessage: (method: string, args: any[]): Promise<any> => {\n\t\t\t\t// Intentionally not supporting worker -> main requests\n\t\t\t\treturn Promise.resolve(null);\n\t\t\t}\n\t\t});\n\t\tthis._protocol.setWorkerId(this._worker.getId());\n\n\t\t// Gather loader configuration\n\t\tlet loaderConfiguration: any = null;\n\t\tif (typeof (<any>self).require !== 'undefined' && typeof (<any>self).require.getConfig === 'function') {\n\t\t\t// Get the configuration from the Monaco AMD Loader\n\t\t\tloaderConfiguration = (<any>self).require.getConfig();\n\t\t} else if (typeof (<any>self).requirejs !== 'undefined') {\n\t\t\t// Get the configuration from requirejs\n\t\t\tloaderConfiguration = (<any>self).requirejs.s.contexts._.config;\n\t\t}\n\n\t\t// Send initialize message\n\t\tthis._onModuleLoaded = this._protocol.sendMessage(INITIALIZE, [\n\t\t\tthis._worker.getId(),\n\t\t\tmoduleId,\n\t\t\tloaderConfiguration\n\t\t]);\n\n\t\tthis._lazyProxy = new Promise<T>((resolve, reject) => {\n\t\t\tlazyProxyReject = reject;\n\t\t\tthis._onModuleLoaded.then((availableMethods: string[]) => {\n\t\t\t\tlet proxy = <T>{};\n\t\t\t\tfor (const methodName of availableMethods) {\n\t\t\t\t\t(proxy as any)[methodName] = createProxyMethod(methodName, proxyMethodRequest);\n\t\t\t\t}\n\t\t\t\tresolve(proxy);\n\t\t\t}, (e) => {\n\t\t\t\treject(e);\n\t\t\t\tthis._onError('Worker failed to load ' + moduleId, e);\n\t\t\t});\n\t\t});\n\n\t\t// Create proxy to loaded code\n\t\tconst proxyMethodRequest = (method: string, args: any[]): Promise<any> => {\n\t\t\treturn this._request(method, args);\n\t\t};\n\n\t\tconst createProxyMethod = (method: string, proxyMethodRequest: (method: string, args: any[]) => Promise<any>): () => Promise<any> => {\n\t\t\treturn function () {\n\t\t\t\tlet args = Array.prototype.slice.call(arguments, 0);\n\t\t\t\treturn proxyMethodRequest(method, args);\n\t\t\t};\n\t\t};\n\t}\n\n\tpublic getProxyObject(): Promise<T> {\n\t\treturn this._lazyProxy;\n\t}\n\n\tprivate _request(method: string, args: any[]): Promise<any> {\n\t\treturn new Promise<any>((resolve, reject) => {\n\t\t\tthis._onModuleLoaded.then(() => {\n\t\t\t\tthis._protocol.sendMessage(method, args).then(resolve, reject);\n\t\t\t}, reject);\n\t\t});\n\t}\n\n\tprivate _onError(message: string, error?: any): void {\n\t\tconsole.error(message);\n\t\tconsole.info(error);\n\t}\n}\n\nexport interface IRequestHandler {\n\t_requestHandlerBrand: any;\n\t[prop: string]: any;\n}\n\n/**\n * Worker side\n */\nexport class SimpleWorkerServer {\n\n\tprivate _requestHandler: IRequestHandler | null;\n\tprivate _protocol: SimpleWorkerProtocol;\n\n\tconstructor(postSerializedMessage: (msg: string) => void, requestHandler: IRequestHandler | null) {\n\t\tthis._requestHandler = requestHandler;\n\t\tthis._protocol = new SimpleWorkerProtocol({\n\t\t\tsendMessage: (msg: string): void => {\n\t\t\t\tpostSerializedMessage(msg);\n\t\t\t},\n\t\t\thandleMessage: (method: string, args: any[]): Promise<any> => this._handleMessage(method, args)\n\t\t});\n\t}\n\n\tpublic onmessage(msg: string): void {\n\t\tthis._protocol.handleMessage(msg);\n\t}\n\n\tprivate _handleMessage(method: string, args: any[]): Promise<any> {\n\t\tif (method === INITIALIZE) {\n\t\t\treturn this.initialize(<number>args[0], <string>args[1], <any>args[2]);\n\t\t}\n\n\t\tif (!this._requestHandler || typeof this._requestHandler[method] !== 'function') {\n\t\t\treturn Promise.reject(new Error('Missing requestHandler or method: ' + method));\n\t\t}\n\n\t\ttry {\n\t\t\treturn Promise.resolve(this._requestHandler[method].apply(this._requestHandler, args));\n\t\t} catch (e) {\n\t\t\treturn Promise.reject(e);\n\t\t}\n\t}\n\n\tprivate initialize(workerId: number, moduleId: string, loaderConfig: any): Promise<string[]> {\n\t\tthis._protocol.setWorkerId(workerId);\n\n\t\tif (this._requestHandler) {\n\t\t\t// static request handler\n\t\t\tlet methods: string[] = [];\n\t\t\tfor (const prop of getAllPropertyNames(this._requestHandler)) {\n\t\t\t\tif (typeof this._requestHandler[prop] === 'function') {\n\t\t\t\t\tmethods.push(prop);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn Promise.resolve(methods);\n\t\t}\n\n\t\tif (loaderConfig) {\n\t\t\t// Remove 'baseUrl', handling it is beyond scope for now\n\t\t\tif (typeof loaderConfig.baseUrl !== 'undefined') {\n\t\t\t\tdelete loaderConfig['baseUrl'];\n\t\t\t}\n\t\t\tif (typeof loaderConfig.paths !== 'undefined') {\n\t\t\t\tif (typeof loaderConfig.paths.vs !== 'undefined') {\n\t\t\t\t\tdelete loaderConfig.paths['vs'];\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Since this is in a web worker, enable catching errors\n\t\t\tloaderConfig.catchError = true;\n\t\t\t(<any>self).require.config(loaderConfig);\n\t\t}\n\n\t\treturn new Promise<string[]>((resolve, reject) => {\n\t\t\t// Use the global require to be sure to get the global config\n\t\t\t(<any>self).require([moduleId], (...result: any[]) => {\n\t\t\t\tlet handlerModule = result[0];\n\t\t\t\tthis._requestHandler = handlerModule.create();\n\n\t\t\t\tif (!this._requestHandler) {\n\t\t\t\t\treject(new Error(`No RequestHandler!`));\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tlet methods: string[] = [];\n\t\t\t\tfor (const prop of getAllPropertyNames(this._requestHandler)) {\n\t\t\t\t\tif (typeof this._requestHandler[prop] === 'function') {\n\t\t\t\t\t\tmethods.push(prop);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tresolve(methods);\n\t\t\t}, reject);\n\t\t});\n\t}\n}\n\n/**\n * Called on the worker side\n */\nexport function create(postMessage: (msg: string) => void): SimpleWorkerServer {\n\treturn new SimpleWorkerServer(postMessage, null);\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\n/**\n * A position in the editor. This interface is suitable for serialization.\n */\nexport interface IPosition {\n\t/**\n\t * line number (starts at 1)\n\t */\n\treadonly lineNumber: number;\n\t/**\n\t * column (the first character in a line is between column 1 and column 2)\n\t */\n\treadonly column: number;\n}\n\n/**\n * A position in the editor.\n */\nexport class Position {\n\t/**\n\t * line number (starts at 1)\n\t */\n\tpublic readonly lineNumber: number;\n\t/**\n\t * column (the first character in a line is between column 1 and column 2)\n\t */\n\tpublic readonly column: number;\n\n\tconstructor(lineNumber: number, column: number) {\n\t\tthis.lineNumber = lineNumber;\n\t\tthis.column = column;\n\t}\n\n\t/**\n\t * Create a new postion from this position.\n\t *\n\t * @param newLineNumber new line number\n\t * @param newColumn new column\n\t */\n\twith(newLineNumber: number = this.lineNumber, newColumn: number = this.column): Position {\n\t\tif (newLineNumber === this.lineNumber && newColumn === this.column) {\n\t\t\treturn this;\n\t\t} else {\n\t\t\treturn new Position(newLineNumber, newColumn);\n\t\t}\n\t}\n\n\t/**\n\t * Derive a new position from this position.\n\t *\n\t * @param deltaLineNumber line number delta\n\t * @param deltaColumn column delta\n\t */\n\tdelta(deltaLineNumber: number = 0, deltaColumn: number = 0): Position {\n\t\treturn this.with(this.lineNumber + deltaLineNumber, this.column + deltaColumn);\n\t}\n\n\t/**\n\t * Test if this position equals other position\n\t */\n\tpublic equals(other: IPosition): boolean {\n\t\treturn Position.equals(this, other);\n\t}\n\n\t/**\n\t * Test if position `a` equals position `b`\n\t */\n\tpublic static equals(a: IPosition | null, b: IPosition | null): boolean {\n\t\tif (!a && !b) {\n\t\t\treturn true;\n\t\t}\n\t\treturn (\n\t\t\t!!a &&\n\t\t\t!!b &&\n\t\t\ta.lineNumber === b.lineNumber &&\n\t\t\ta.column === b.column\n\t\t);\n\t}\n\n\t/**\n\t * Test if this position is before other position.\n\t * If the two positions are equal, the result will be false.\n\t */\n\tpublic isBefore(other: IPosition): boolean {\n\t\treturn Position.isBefore(this, other);\n\t}\n\n\t/**\n\t * Test if position `a` is before position `b`.\n\t * If the two positions are equal, the result will be false.\n\t */\n\tpublic static isBefore(a: IPosition, b: IPosition): boolean {\n\t\tif (a.lineNumber < b.lineNumber) {\n\t\t\treturn true;\n\t\t}\n\t\tif (b.lineNumber < a.lineNumber) {\n\t\t\treturn false;\n\t\t}\n\t\treturn a.column < b.column;\n\t}\n\n\t/**\n\t * Test if this position is before other position.\n\t * If the two positions are equal, the result will be true.\n\t */\n\tpublic isBeforeOrEqual(other: IPosition): boolean {\n\t\treturn Position.isBeforeOrEqual(this, other);\n\t}\n\n\t/**\n\t * Test if position `a` is before position `b`.\n\t * If the two positions are equal, the result will be true.\n\t */\n\tpublic static isBeforeOrEqual(a: IPosition, b: IPosition): boolean {\n\t\tif (a.lineNumber < b.lineNumber) {\n\t\t\treturn true;\n\t\t}\n\t\tif (b.lineNumber < a.lineNumber) {\n\t\t\treturn false;\n\t\t}\n\t\treturn a.column <= b.column;\n\t}\n\n\t/**\n\t * A function that compares positions, useful for sorting\n\t */\n\tpublic static compare(a: IPosition, b: IPosition): number {\n\t\tlet aLineNumber = a.lineNumber | 0;\n\t\tlet bLineNumber = b.lineNumber | 0;\n\n\t\tif (aLineNumber === bLineNumber) {\n\t\t\tlet aColumn = a.column | 0;\n\t\t\tlet bColumn = b.column | 0;\n\t\t\treturn aColumn - bColumn;\n\t\t}\n\n\t\treturn aLineNumber - bLineNumber;\n\t}\n\n\t/**\n\t * Clone this position.\n\t */\n\tpublic clone(): Position {\n\t\treturn new Position(this.lineNumber, this.column);\n\t}\n\n\t/**\n\t * Convert to a human-readable representation.\n\t */\n\tpublic toString(): string {\n\t\treturn '(' + this.lineNumber + ',' + this.column + ')';\n\t}\n\n\t// ---\n\n\t/**\n\t * Create a `Position` from an `IPosition`.\n\t */\n\tpublic static lift(pos: IPosition): Position {\n\t\treturn new Position(pos.lineNumber, pos.column);\n\t}\n\n\t/**\n\t * Test if `obj` is an `IPosition`.\n\t */\n\tpublic static isIPosition(obj: any): obj is IPosition {\n\t\treturn (\n\t\t\tobj\n\t\t\t&& (typeof obj.lineNumber === 'number')\n\t\t\t&& (typeof obj.column === 'number')\n\t\t);\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { IPosition, Position } from 'vs/editor/common/core/position';\n\n/**\n * A range in the editor. This interface is suitable for serialization.\n */\nexport interface IRange {\n\t/**\n\t * Line number on which the range starts (starts at 1).\n\t */\n\treadonly startLineNumber: number;\n\t/**\n\t * Column on which the range starts in line `startLineNumber` (starts at 1).\n\t */\n\treadonly startColumn: number;\n\t/**\n\t * Line number on which the range ends.\n\t */\n\treadonly endLineNumber: number;\n\t/**\n\t * Column on which the range ends in line `endLineNumber`.\n\t */\n\treadonly endColumn: number;\n}\n\n/**\n * A range in the editor. (startLineNumber,startColumn) is <= (endLineNumber,endColumn)\n */\nexport class Range {\n\n\t/**\n\t * Line number on which the range starts (starts at 1).\n\t */\n\tpublic readonly startLineNumber: number;\n\t/**\n\t * Column on which the range starts in line `startLineNumber` (starts at 1).\n\t */\n\tpublic readonly startColumn: number;\n\t/**\n\t * Line number on which the range ends.\n\t */\n\tpublic readonly endLineNumber: number;\n\t/**\n\t * Column on which the range ends in line `endLineNumber`.\n\t */\n\tpublic readonly endColumn: number;\n\n\tconstructor(startLineNumber: number, startColumn: number, endLineNumber: number, endColumn: number) {\n\t\tif ((startLineNumber > endLineNumber) || (startLineNumber === endLineNumber && startColumn > endColumn)) {\n\t\t\tthis.startLineNumber = endLineNumber;\n\t\t\tthis.startColumn = endColumn;\n\t\t\tthis.endLineNumber = startLineNumber;\n\t\t\tthis.endColumn = startColumn;\n\t\t} else {\n\t\t\tthis.startLineNumber = startLineNumber;\n\t\t\tthis.startColumn = startColumn;\n\t\t\tthis.endLineNumber = endLineNumber;\n\t\t\tthis.endColumn = endColumn;\n\t\t}\n\t}\n\n\t/**\n\t * Test if this range is empty.\n\t */\n\tpublic isEmpty(): boolean {\n\t\treturn Range.isEmpty(this);\n\t}\n\n\t/**\n\t * Test if `range` is empty.\n\t */\n\tpublic static isEmpty(range: IRange): boolean {\n\t\treturn (range.startLineNumber === range.endLineNumber && range.startColumn === range.endColumn);\n\t}\n\n\t/**\n\t * Test if position is in this range. If the position is at the edges, will return true.\n\t */\n\tpublic containsPosition(position: IPosition): boolean {\n\t\treturn Range.containsPosition(this, position);\n\t}\n\n\t/**\n\t * Test if `position` is in `range`. If the position is at the edges, will return true.\n\t */\n\tpublic static containsPosition(range: IRange, position: IPosition): boolean {\n\t\tif (position.lineNumber < range.startLineNumber || position.lineNumber > range.endLineNumber) {\n\t\t\treturn false;\n\t\t}\n\t\tif (position.lineNumber === range.startLineNumber && position.column < range.startColumn) {\n\t\t\treturn false;\n\t\t}\n\t\tif (position.lineNumber === range.endLineNumber && position.column > range.endColumn) {\n\t\t\treturn false;\n\t\t}\n\t\treturn true;\n\t}\n\n\t/**\n\t * Test if range is in this range. If the range is equal to this range, will return true.\n\t */\n\tpublic containsRange(range: IRange): boolean {\n\t\treturn Range.containsRange(this, range);\n\t}\n\n\t/**\n\t * Test if `otherRange` is in `range`. If the ranges are equal, will return true.\n\t */\n\tpublic static containsRange(range: IRange, otherRange: IRange): boolean {\n\t\tif (otherRange.startLineNumber < range.startLineNumber || otherRange.endLineNumber < range.startLineNumber) {\n\t\t\treturn false;\n\t\t}\n\t\tif (otherRange.startLineNumber > range.endLineNumber || otherRange.endLineNumber > range.endLineNumber) {\n\t\t\treturn false;\n\t\t}\n\t\tif (otherRange.startLineNumber === range.startLineNumber && otherRange.startColumn < range.startColumn) {\n\t\t\treturn false;\n\t\t}\n\t\tif (otherRange.endLineNumber === range.endLineNumber && otherRange.endColumn > range.endColumn) {\n\t\t\treturn false;\n\t\t}\n\t\treturn true;\n\t}\n\n\t/**\n\t * A reunion of the two ranges.\n\t * The smallest position will be used as the start point, and the largest one as the end point.\n\t */\n\tpublic plusRange(range: IRange): Range {\n\t\treturn Range.plusRange(this, range);\n\t}\n\n\t/**\n\t * A reunion of the two ranges.\n\t * The smallest position will be used as the start point, and the largest one as the end point.\n\t */\n\tpublic static plusRange(a: IRange, b: IRange): Range {\n\t\tlet startLineNumber: number;\n\t\tlet startColumn: number;\n\t\tlet endLineNumber: number;\n\t\tlet endColumn: number;\n\n\t\tif (b.startLineNumber < a.startLineNumber) {\n\t\t\tstartLineNumber = b.startLineNumber;\n\t\t\tstartColumn = b.startColumn;\n\t\t} else if (b.startLineNumber === a.startLineNumber) {\n\t\t\tstartLineNumber = b.startLineNumber;\n\t\t\tstartColumn = Math.min(b.startColumn, a.startColumn);\n\t\t} else {\n\t\t\tstartLineNumber = a.startLineNumber;\n\t\t\tstartColumn = a.startColumn;\n\t\t}\n\n\t\tif (b.endLineNumber > a.endLineNumber) {\n\t\t\tendLineNumber = b.endLineNumber;\n\t\t\tendColumn = b.endColumn;\n\t\t} else if (b.endLineNumber === a.endLineNumber) {\n\t\t\tendLineNumber = b.endLineNumber;\n\t\t\tendColumn = Math.max(b.endColumn, a.endColumn);\n\t\t} else {\n\t\t\tendLineNumber = a.endLineNumber;\n\t\t\tendColumn = a.endColumn;\n\t\t}\n\n\t\treturn new Range(startLineNumber, startColumn, endLineNumber, endColumn);\n\t}\n\n\t/**\n\t * A intersection of the two ranges.\n\t */\n\tpublic intersectRanges(range: IRange): Range | null {\n\t\treturn Range.intersectRanges(this, range);\n\t}\n\n\t/**\n\t * A intersection of the two ranges.\n\t */\n\tpublic static intersectRanges(a: IRange, b: IRange): Range | null {\n\t\tlet resultStartLineNumber = a.startLineNumber;\n\t\tlet resultStartColumn = a.startColumn;\n\t\tlet resultEndLineNumber = a.endLineNumber;\n\t\tlet resultEndColumn = a.endColumn;\n\t\tlet otherStartLineNumber = b.startLineNumber;\n\t\tlet otherStartColumn = b.startColumn;\n\t\tlet otherEndLineNumber = b.endLineNumber;\n\t\tlet otherEndColumn = b.endColumn;\n\n\t\tif (resultStartLineNumber < otherStartLineNumber) {\n\t\t\tresultStartLineNumber = otherStartLineNumber;\n\t\t\tresultStartColumn = otherStartColumn;\n\t\t} else if (resultStartLineNumber === otherStartLineNumber) {\n\t\t\tresultStartColumn = Math.max(resultStartColumn, otherStartColumn);\n\t\t}\n\n\t\tif (resultEndLineNumber > otherEndLineNumber) {\n\t\t\tresultEndLineNumber = otherEndLineNumber;\n\t\t\tresultEndColumn = otherEndColumn;\n\t\t} else if (resultEndLineNumber === otherEndLineNumber) {\n\t\t\tresultEndColumn = Math.min(resultEndColumn, otherEndColumn);\n\t\t}\n\n\t\t// Check if selection is now empty\n\t\tif (resultStartLineNumber > resultEndLineNumber) {\n\t\t\treturn null;\n\t\t}\n\t\tif (resultStartLineNumber === resultEndLineNumber && resultStartColumn > resultEndColumn) {\n\t\t\treturn null;\n\t\t}\n\t\treturn new Range(resultStartLineNumber, resultStartColumn, resultEndLineNumber, resultEndColumn);\n\t}\n\n\t/**\n\t * Test if this range equals other.\n\t */\n\tpublic equalsRange(other: IRange | null): boolean {\n\t\treturn Range.equalsRange(this, other);\n\t}\n\n\t/**\n\t * Test if range `a` equals `b`.\n\t */\n\tpublic static equalsRange(a: IRange | null, b: IRange | null): boolean {\n\t\treturn (\n\t\t\t!!a &&\n\t\t\t!!b &&\n\t\t\ta.startLineNumber === b.startLineNumber &&\n\t\t\ta.startColumn === b.startColumn &&\n\t\t\ta.endLineNumber === b.endLineNumber &&\n\t\t\ta.endColumn === b.endColumn\n\t\t);\n\t}\n\n\t/**\n\t * Return the end position (which will be after or equal to the start position)\n\t */\n\tpublic getEndPosition(): Position {\n\t\treturn new Position(this.endLineNumber, this.endColumn);\n\t}\n\n\t/**\n\t * Return the start position (which will be before or equal to the end position)\n\t */\n\tpublic getStartPosition(): Position {\n\t\treturn new Position(this.startLineNumber, this.startColumn);\n\t}\n\n\t/**\n\t * Transform to a user presentable string representation.\n\t */\n\tpublic toString(): string {\n\t\treturn '[' + this.startLineNumber + ',' + this.startColumn + ' -> ' + this.endLineNumber + ',' + this.endColumn + ']';\n\t}\n\n\t/**\n\t * Create a new range using this range's start position, and using endLineNumber and endColumn as the end position.\n\t */\n\tpublic setEndPosition(endLineNumber: number, endColumn: number): Range {\n\t\treturn new Range(this.startLineNumber, this.startColumn, endLineNumber, endColumn);\n\t}\n\n\t/**\n\t * Create a new range using this range's end position, and using startLineNumber and startColumn as the start position.\n\t */\n\tpublic setStartPosition(startLineNumber: number, startColumn: number): Range {\n\t\treturn new Range(startLineNumber, startColumn, this.endLineNumber, this.endColumn);\n\t}\n\n\t/**\n\t * Create a new empty range using this range's start position.\n\t */\n\tpublic collapseToStart(): Range {\n\t\treturn Range.collapseToStart(this);\n\t}\n\n\t/**\n\t * Create a new empty range using this range's start position.\n\t */\n\tpublic static collapseToStart(range: IRange): Range {\n\t\treturn new Range(range.startLineNumber, range.startColumn, range.startLineNumber, range.startColumn);\n\t}\n\n\t// ---\n\n\tpublic static fromPositions(start: IPosition, end: IPosition = start): Range {\n\t\treturn new Range(start.lineNumber, start.column, end.lineNumber, end.column);\n\t}\n\n\t/**\n\t * Create a `Range` from an `IRange`.\n\t */\n\tpublic static lift(range: undefined | null): null;\n\tpublic static lift(range: IRange): Range;\n\tpublic static lift(range: IRange | undefined | null): Range | null {\n\t\tif (!range) {\n\t\t\treturn null;\n\t\t}\n\t\treturn new Range(range.startLineNumber, range.startColumn, range.endLineNumber, range.endColumn);\n\t}\n\n\t/**\n\t * Test if `obj` is an `IRange`.\n\t */\n\tpublic static isIRange(obj: any): obj is IRange {\n\t\treturn (\n\t\t\tobj\n\t\t\t&& (typeof obj.startLineNumber === 'number')\n\t\t\t&& (typeof obj.startColumn === 'number')\n\t\t\t&& (typeof obj.endLineNumber === 'number')\n\t\t\t&& (typeof obj.endColumn === 'number')\n\t\t);\n\t}\n\n\t/**\n\t * Test if the two ranges are touching in any way.\n\t */\n\tpublic static areIntersectingOrTouching(a: IRange, b: IRange): boolean {\n\t\t// Check if `a` is before `b`\n\t\tif (a.endLineNumber < b.startLineNumber || (a.endLineNumber === b.startLineNumber && a.endColumn < b.startColumn)) {\n\t\t\treturn false;\n\t\t}\n\n\t\t// Check if `b` is before `a`\n\t\tif (b.endLineNumber < a.startLineNumber || (b.endLineNumber === a.startLineNumber && b.endColumn < a.startColumn)) {\n\t\t\treturn false;\n\t\t}\n\n\t\t// These ranges must intersect\n\t\treturn true;\n\t}\n\n\t/**\n\t * Test if the two ranges are intersecting. If the ranges are touching it returns true.\n\t */\n\tpublic static areIntersecting(a: IRange, b: IRange): boolean {\n\t\t// Check if `a` is before `b`\n\t\tif (a.endLineNumber < b.startLineNumber || (a.endLineNumber === b.startLineNumber && a.endColumn <= b.startColumn)) {\n\t\t\treturn false;\n\t\t}\n\n\t\t// Check if `b` is before `a`\n\t\tif (b.endLineNumber < a.startLineNumber || (b.endLineNumber === a.startLineNumber && b.endColumn <= a.startColumn)) {\n\t\t\treturn false;\n\t\t}\n\n\t\t// These ranges must intersect\n\t\treturn true;\n\t}\n\n\t/**\n\t * A function that compares ranges, useful for sorting ranges\n\t * It will first compare ranges on the startPosition and then on the endPosition\n\t */\n\tpublic static compareRangesUsingStarts(a: IRange | null | undefined, b: IRange | null | undefined): number {\n\t\tif (a && b) {\n\t\t\tconst aStartLineNumber = a.startLineNumber | 0;\n\t\t\tconst bStartLineNumber = b.startLineNumber | 0;\n\n\t\t\tif (aStartLineNumber === bStartLineNumber) {\n\t\t\t\tconst aStartColumn = a.startColumn | 0;\n\t\t\t\tconst bStartColumn = b.startColumn | 0;\n\n\t\t\t\tif (aStartColumn === bStartColumn) {\n\t\t\t\t\tconst aEndLineNumber = a.endLineNumber | 0;\n\t\t\t\t\tconst bEndLineNumber = b.endLineNumber | 0;\n\n\t\t\t\t\tif (aEndLineNumber === bEndLineNumber) {\n\t\t\t\t\t\tconst aEndColumn = a.endColumn | 0;\n\t\t\t\t\t\tconst bEndColumn = b.endColumn | 0;\n\t\t\t\t\t\treturn aEndColumn - bEndColumn;\n\t\t\t\t\t}\n\t\t\t\t\treturn aEndLineNumber - bEndLineNumber;\n\t\t\t\t}\n\t\t\t\treturn aStartColumn - bStartColumn;\n\t\t\t}\n\t\t\treturn aStartLineNumber - bStartLineNumber;\n\t\t}\n\t\tconst aExists = (a ? 1 : 0);\n\t\tconst bExists = (b ? 1 : 0);\n\t\treturn aExists - bExists;\n\t}\n\n\t/**\n\t * A function that compares ranges, useful for sorting ranges\n\t * It will first compare ranges on the endPosition and then on the startPosition\n\t */\n\tpublic static compareRangesUsingEnds(a: IRange, b: IRange): number {\n\t\tif (a.endLineNumber === b.endLineNumber) {\n\t\t\tif (a.endColumn === b.endColumn) {\n\t\t\t\tif (a.startLineNumber === b.startLineNumber) {\n\t\t\t\t\treturn a.startColumn - b.startColumn;\n\t\t\t\t}\n\t\t\t\treturn a.startLineNumber - b.startLineNumber;\n\t\t\t}\n\t\t\treturn a.endColumn - b.endColumn;\n\t\t}\n\t\treturn a.endLineNumber - b.endLineNumber;\n\t}\n\n\t/**\n\t * Test if the range spans multiple lines.\n\t */\n\tpublic static spansMultipleLines(range: IRange): boolean {\n\t\treturn range.endLineNumber > range.startLineNumber;\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { IPosition, Position } from 'vs/editor/common/core/position';\nimport { Range } from 'vs/editor/common/core/range';\n\n/**\n * A selection in the editor.\n * The selection is a range that has an orientation.\n */\nexport interface ISelection {\n\t/**\n\t * The line number on which the selection has started.\n\t */\n\treadonly selectionStartLineNumber: number;\n\t/**\n\t * The column on `selectionStartLineNumber` where the selection has started.\n\t */\n\treadonly selectionStartColumn: number;\n\t/**\n\t * The line number on which the selection has ended.\n\t */\n\treadonly positionLineNumber: number;\n\t/**\n\t * The column on `positionLineNumber` where the selection has ended.\n\t */\n\treadonly positionColumn: number;\n}\n\n/**\n * The direction of a selection.\n */\nexport const enum SelectionDirection {\n\t/**\n\t * The selection starts above where it ends.\n\t */\n\tLTR,\n\t/**\n\t * The selection starts below where it ends.\n\t */\n\tRTL\n}\n\n/**\n * A selection in the editor.\n * The selection is a range that has an orientation.\n */\nexport class Selection extends Range {\n\t/**\n\t * The line number on which the selection has started.\n\t */\n\tpublic readonly selectionStartLineNumber: number;\n\t/**\n\t * The column on `selectionStartLineNumber` where the selection has started.\n\t */\n\tpublic readonly selectionStartColumn: number;\n\t/**\n\t * The line number on which the selection has ended.\n\t */\n\tpublic readonly positionLineNumber: number;\n\t/**\n\t * The column on `positionLineNumber` where the selection has ended.\n\t */\n\tpublic readonly positionColumn: number;\n\n\tconstructor(selectionStartLineNumber: number, selectionStartColumn: number, positionLineNumber: number, positionColumn: number) {\n\t\tsuper(selectionStartLineNumber, selectionStartColumn, positionLineNumber, positionColumn);\n\t\tthis.selectionStartLineNumber = selectionStartLineNumber;\n\t\tthis.selectionStartColumn = selectionStartColumn;\n\t\tthis.positionLineNumber = positionLineNumber;\n\t\tthis.positionColumn = positionColumn;\n\t}\n\n\t/**\n\t * Clone this selection.\n\t */\n\tpublic clone(): Selection {\n\t\treturn new Selection(this.selectionStartLineNumber, this.selectionStartColumn, this.positionLineNumber, this.positionColumn);\n\t}\n\n\t/**\n\t * Transform to a human-readable representation.\n\t */\n\tpublic toString(): string {\n\t\treturn '[' + this.selectionStartLineNumber + ',' + this.selectionStartColumn + ' -> ' + this.positionLineNumber + ',' + this.positionColumn + ']';\n\t}\n\n\t/**\n\t * Test if equals other selection.\n\t */\n\tpublic equalsSelection(other: ISelection): boolean {\n\t\treturn (\n\t\t\tSelection.selectionsEqual(this, other)\n\t\t);\n\t}\n\n\t/**\n\t * Test if the two selections are equal.\n\t */\n\tpublic static selectionsEqual(a: ISelection, b: ISelection): boolean {\n\t\treturn (\n\t\t\ta.selectionStartLineNumber === b.selectionStartLineNumber &&\n\t\t\ta.selectionStartColumn === b.selectionStartColumn &&\n\t\t\ta.positionLineNumber === b.positionLineNumber &&\n\t\t\ta.positionColumn === b.positionColumn\n\t\t);\n\t}\n\n\t/**\n\t * Get directions (LTR or RTL).\n\t */\n\tpublic getDirection(): SelectionDirection {\n\t\tif (this.selectionStartLineNumber === this.startLineNumber && this.selectionStartColumn === this.startColumn) {\n\t\t\treturn SelectionDirection.LTR;\n\t\t}\n\t\treturn SelectionDirection.RTL;\n\t}\n\n\t/**\n\t * Create a new selection with a different `positionLineNumber` and `positionColumn`.\n\t */\n\tpublic setEndPosition(endLineNumber: number, endColumn: number): Selection {\n\t\tif (this.getDirection() === SelectionDirection.LTR) {\n\t\t\treturn new Selection(this.startLineNumber, this.startColumn, endLineNumber, endColumn);\n\t\t}\n\t\treturn new Selection(endLineNumber, endColumn, this.startLineNumber, this.startColumn);\n\t}\n\n\t/**\n\t * Get the position at `positionLineNumber` and `positionColumn`.\n\t */\n\tpublic getPosition(): Position {\n\t\treturn new Position(this.positionLineNumber, this.positionColumn);\n\t}\n\n\t/**\n\t * Create a new selection with a different `selectionStartLineNumber` and `selectionStartColumn`.\n\t */\n\tpublic setStartPosition(startLineNumber: number, startColumn: number): Selection {\n\t\tif (this.getDirection() === SelectionDirection.LTR) {\n\t\t\treturn new Selection(startLineNumber, startColumn, this.endLineNumber, this.endColumn);\n\t\t}\n\t\treturn new Selection(this.endLineNumber, this.endColumn, startLineNumber, startColumn);\n\t}\n\n\t// ----\n\n\t/**\n\t * Create a `Selection` from one or two positions\n\t */\n\tpublic static fromPositions(start: IPosition, end: IPosition = start): Selection {\n\t\treturn new Selection(start.lineNumber, start.column, end.lineNumber, end.column);\n\t}\n\n\t/**\n\t * Create a `Selection` from an `ISelection`.\n\t */\n\tpublic static liftSelection(sel: ISelection): Selection {\n\t\treturn new Selection(sel.selectionStartLineNumber, sel.selectionStartColumn, sel.positionLineNumber, sel.positionColumn);\n\t}\n\n\t/**\n\t * `a` equals `b`.\n\t */\n\tpublic static selectionsArrEqual(a: ISelection[], b: ISelection[]): boolean {\n\t\tif (a && !b || !a && b) {\n\t\t\treturn false;\n\t\t}\n\t\tif (!a && !b) {\n\t\t\treturn true;\n\t\t}\n\t\tif (a.length !== b.length) {\n\t\t\treturn false;\n\t\t}\n\t\tfor (let i = 0, len = a.length; i < len; i++) {\n\t\t\tif (!this.selectionsEqual(a[i], b[i])) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t\treturn true;\n\t}\n\n\t/**\n\t * Test if `obj` is an `ISelection`.\n\t */\n\tpublic static isISelection(obj: any): obj is ISelection {\n\t\treturn (\n\t\t\tobj\n\t\t\t&& (typeof obj.selectionStartLineNumber === 'number')\n\t\t\t&& (typeof obj.selectionStartColumn === 'number')\n\t\t\t&& (typeof obj.positionLineNumber === 'number')\n\t\t\t&& (typeof obj.positionColumn === 'number')\n\t\t);\n\t}\n\n\t/**\n\t * Create with a direction.\n\t */\n\tpublic static createWithDirection(startLineNumber: number, startColumn: number, endLineNumber: number, endColumn: number, direction: SelectionDirection): Selection {\n\n\t\tif (direction === SelectionDirection.LTR) {\n\t\t\treturn new Selection(startLineNumber, startColumn, endLineNumber, endColumn);\n\t\t}\n\n\t\treturn new Selection(endLineNumber, endColumn, startLineNumber, startColumn);\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { IState } from 'vs/editor/common/modes';\n\nexport class Token {\n\t_tokenBrand: void;\n\n\tpublic readonly offset: number;\n\tpublic readonly type: string;\n\tpublic readonly language: string;\n\n\tconstructor(offset: number, type: string, language: string) {\n\t\tthis.offset = offset | 0;// @perf\n\t\tthis.type = type;\n\t\tthis.language = language;\n\t}\n\n\tpublic toString(): string {\n\t\treturn '(' + this.offset + ', ' + this.type + ')';\n\t}\n}\n\nexport class TokenizationResult {\n\t_tokenizationResultBrand: void;\n\n\tpublic readonly tokens: Token[];\n\tpublic readonly endState: IState;\n\n\tconstructor(tokens: Token[], endState: IState) {\n\t\tthis.tokens = tokens;\n\t\tthis.endState = endState;\n\t}\n}\n\nexport class TokenizationResult2 {\n\t_tokenizationResult2Brand: void;\n\n\t/**\n\t * The tokens in binary format. Each token occupies two array indices. For token i:\n\t *  - at offset 2*i => startIndex\n\t *  - at offset 2*i + 1 => metadata\n\t *\n\t */\n\tpublic readonly tokens: Uint32Array;\n\tpublic readonly endState: IState;\n\n\tconstructor(tokens: Uint32Array, endState: IState) {\n\t\tthis.tokens = tokens;\n\t\tthis.endState = endState;\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nexport class Uint8Matrix {\n\n\tprivate readonly _data: Uint8Array;\n\tpublic readonly rows: number;\n\tpublic readonly cols: number;\n\n\tconstructor(rows: number, cols: number, defaultValue: number) {\n\t\tlet data = new Uint8Array(rows * cols);\n\t\tfor (let i = 0, len = rows * cols; i < len; i++) {\n\t\t\tdata[i] = defaultValue;\n\t\t}\n\n\t\tthis._data = data;\n\t\tthis.rows = rows;\n\t\tthis.cols = cols;\n\t}\n\n\tpublic get(row: number, col: number): number {\n\t\treturn this._data[row * this.cols + col];\n\t}\n\n\tpublic set(row: number, col: number, value: number): void {\n\t\tthis._data[row * this.cols + col] = value;\n\t}\n}\n\nexport const enum Constants {\n\t/**\n\t * MAX SMI (SMall Integer) as defined in v8.\n\t * one bit is lost for boxing/unboxing flag.\n\t * one bit is lost for sign flag.\n\t * See https://thibaultlaurens.github.io/javascript/2013/04/29/how-the-v8-engine-works/#tagged-values\n\t */\n\tMAX_SAFE_SMALL_INTEGER = 1 << 30,\n\n\t/**\n\t * MIN SMI (SMall Integer) as defined in v8.\n\t * one bit is lost for boxing/unboxing flag.\n\t * one bit is lost for sign flag.\n\t * See https://thibaultlaurens.github.io/javascript/2013/04/29/how-the-v8-engine-works/#tagged-values\n\t */\n\tMIN_SAFE_SMALL_INTEGER = -(1 << 30),\n\n\t/**\n\t * Max unsigned integer that fits on 8 bits.\n\t */\n\tMAX_UINT_8 = 255, // 2^8 - 1\n\n\t/**\n\t * Max unsigned integer that fits on 16 bits.\n\t */\n\tMAX_UINT_16 = 65535, // 2^16 - 1\n\n\t/**\n\t * Max unsigned integer that fits on 32 bits.\n\t */\n\tMAX_UINT_32 = 4294967295, // 2^32 - 1\n\n\n}\n\nexport function toUint8(v: number): number {\n\tif (v < 0) {\n\t\treturn 0;\n\t}\n\tif (v > Constants.MAX_UINT_8) {\n\t\treturn Constants.MAX_UINT_8;\n\t}\n\treturn v | 0;\n}\n\nexport function toUint32(v: number): number {\n\tif (v < 0) {\n\t\treturn 0;\n\t}\n\tif (v > Constants.MAX_UINT_32) {\n\t\treturn Constants.MAX_UINT_32;\n\t}\n\treturn v | 0;\n}\n\nexport function toUint32Array(arr: number[]): Uint32Array {\n\tlet len = arr.length;\n\tlet r = new Uint32Array(len);\n\tfor (let i = 0; i < len; i++) {\n\t\tr[i] = toUint32(arr[i]);\n\t}\n\treturn r;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { toUint8 } from 'vs/editor/common/core/uint';\n\n/**\n * A fast character classifier that uses a compact array for ASCII values.\n */\nexport class CharacterClassifier<T extends number> {\n\t/**\n\t * Maintain a compact (fully initialized ASCII map for quickly classifying ASCII characters - used more often in code).\n\t */\n\tprivate _asciiMap: Uint8Array;\n\n\t/**\n\t * The entire map (sparse array).\n\t */\n\tprivate _map: Map<number, number>;\n\n\tprivate _defaultValue: number;\n\n\tconstructor(_defaultValue: T) {\n\t\tlet defaultValue = toUint8(_defaultValue);\n\n\t\tthis._defaultValue = defaultValue;\n\t\tthis._asciiMap = CharacterClassifier._createAsciiMap(defaultValue);\n\t\tthis._map = new Map<number, number>();\n\t}\n\n\tprivate static _createAsciiMap(defaultValue: number): Uint8Array {\n\t\tlet asciiMap: Uint8Array = new Uint8Array(256);\n\t\tfor (let i = 0; i < 256; i++) {\n\t\t\tasciiMap[i] = defaultValue;\n\t\t}\n\t\treturn asciiMap;\n\t}\n\n\tpublic set(charCode: number, _value: T): void {\n\t\tlet value = toUint8(_value);\n\n\t\tif (charCode >= 0 && charCode < 256) {\n\t\t\tthis._asciiMap[charCode] = value;\n\t\t} else {\n\t\t\tthis._map.set(charCode, value);\n\t\t}\n\t}\n\n\tpublic get(charCode: number): T {\n\t\tif (charCode >= 0 && charCode < 256) {\n\t\t\treturn <T>this._asciiMap[charCode];\n\t\t} else {\n\t\t\treturn <T>(this._map.get(charCode) || this._defaultValue);\n\t\t}\n\t}\n}\n\nconst enum Boolean {\n\tFalse = 0,\n\tTrue = 1\n}\n\nexport class CharacterSet {\n\n\tprivate readonly _actual: CharacterClassifier<Boolean>;\n\n\tconstructor() {\n\t\tthis._actual = new CharacterClassifier<Boolean>(Boolean.False);\n\t}\n\n\tpublic add(charCode: number): void {\n\t\tthis._actual.set(charCode, Boolean.True);\n\t}\n\n\tpublic has(charCode: number): boolean {\n\t\treturn (this._actual.get(charCode) === Boolean.True);\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { IDiffChange, ISequence, LcsDiff } from 'vs/base/common/diff/diff';\nimport * as strings from 'vs/base/common/strings';\nimport { ICharChange, ILineChange } from 'vs/editor/common/editorCommon';\n\nconst MAXIMUM_RUN_TIME = 5000; // 5 seconds\nconst MINIMUM_MATCHING_CHARACTER_LENGTH = 3;\n\nfunction computeDiff(originalSequence: ISequence, modifiedSequence: ISequence, continueProcessingPredicate: () => boolean, pretty: boolean): IDiffChange[] {\n\tconst diffAlgo = new LcsDiff(originalSequence, modifiedSequence, continueProcessingPredicate);\n\treturn diffAlgo.ComputeDiff(pretty);\n}\n\nclass LineMarkerSequence implements ISequence {\n\n\tprivate readonly _lines: string[];\n\tprivate readonly _startColumns: number[];\n\tprivate readonly _endColumns: number[];\n\n\tconstructor(lines: string[]) {\n\t\tlet startColumns: number[] = [];\n\t\tlet endColumns: number[] = [];\n\t\tfor (let i = 0, length = lines.length; i < length; i++) {\n\t\t\tstartColumns[i] = LineMarkerSequence._getFirstNonBlankColumn(lines[i], 1);\n\t\t\tendColumns[i] = LineMarkerSequence._getLastNonBlankColumn(lines[i], 1);\n\t\t}\n\t\tthis._lines = lines;\n\t\tthis._startColumns = startColumns;\n\t\tthis._endColumns = endColumns;\n\t}\n\n\tpublic getLength(): number {\n\t\treturn this._lines.length;\n\t}\n\n\tpublic getElementAtIndex(i: number): string {\n\t\treturn this._lines[i].substring(this._startColumns[i] - 1, this._endColumns[i] - 1);\n\t}\n\n\tpublic getStartLineNumber(i: number): number {\n\t\treturn i + 1;\n\t}\n\n\tpublic getEndLineNumber(i: number): number {\n\t\treturn i + 1;\n\t}\n\n\tpublic static _getFirstNonBlankColumn(txt: string, defaultValue: number): number {\n\t\tconst r = strings.firstNonWhitespaceIndex(txt);\n\t\tif (r === -1) {\n\t\t\treturn defaultValue;\n\t\t}\n\t\treturn r + 1;\n\t}\n\n\tpublic static _getLastNonBlankColumn(txt: string, defaultValue: number): number {\n\t\tconst r = strings.lastNonWhitespaceIndex(txt);\n\t\tif (r === -1) {\n\t\t\treturn defaultValue;\n\t\t}\n\t\treturn r + 2;\n\t}\n\n\tpublic getCharSequence(shouldIgnoreTrimWhitespace: boolean, startIndex: number, endIndex: number): CharSequence {\n\t\tlet charCodes: number[] = [];\n\t\tlet lineNumbers: number[] = [];\n\t\tlet columns: number[] = [];\n\t\tlet len = 0;\n\t\tfor (let index = startIndex; index <= endIndex; index++) {\n\t\t\tconst lineContent = this._lines[index];\n\t\t\tconst startColumn = (shouldIgnoreTrimWhitespace ? this._startColumns[index] : 1);\n\t\t\tconst endColumn = (shouldIgnoreTrimWhitespace ? this._endColumns[index] : lineContent.length + 1);\n\t\t\tfor (let col = startColumn; col < endColumn; col++) {\n\t\t\t\tcharCodes[len] = lineContent.charCodeAt(col - 1);\n\t\t\t\tlineNumbers[len] = index + 1;\n\t\t\t\tcolumns[len] = col;\n\t\t\t\tlen++;\n\t\t\t}\n\t\t}\n\t\treturn new CharSequence(charCodes, lineNumbers, columns);\n\t}\n}\n\nclass CharSequence implements ISequence {\n\n\tprivate readonly _charCodes: number[];\n\tprivate readonly _lineNumbers: number[];\n\tprivate readonly _columns: number[];\n\n\tconstructor(charCodes: number[], lineNumbers: number[], columns: number[]) {\n\t\tthis._charCodes = charCodes;\n\t\tthis._lineNumbers = lineNumbers;\n\t\tthis._columns = columns;\n\t}\n\n\tpublic getLength(): number {\n\t\treturn this._charCodes.length;\n\t}\n\n\tpublic getElementAtIndex(i: number): number {\n\t\treturn this._charCodes[i];\n\t}\n\n\tpublic getStartLineNumber(i: number): number {\n\t\treturn this._lineNumbers[i];\n\t}\n\n\tpublic getStartColumn(i: number): number {\n\t\treturn this._columns[i];\n\t}\n\n\tpublic getEndLineNumber(i: number): number {\n\t\treturn this._lineNumbers[i];\n\t}\n\n\tpublic getEndColumn(i: number): number {\n\t\treturn this._columns[i] + 1;\n\t}\n}\n\nclass CharChange implements ICharChange {\n\n\tpublic originalStartLineNumber: number;\n\tpublic originalStartColumn: number;\n\tpublic originalEndLineNumber: number;\n\tpublic originalEndColumn: number;\n\n\tpublic modifiedStartLineNumber: number;\n\tpublic modifiedStartColumn: number;\n\tpublic modifiedEndLineNumber: number;\n\tpublic modifiedEndColumn: number;\n\n\tconstructor(\n\t\toriginalStartLineNumber: number,\n\t\toriginalStartColumn: number,\n\t\toriginalEndLineNumber: number,\n\t\toriginalEndColumn: number,\n\t\tmodifiedStartLineNumber: number,\n\t\tmodifiedStartColumn: number,\n\t\tmodifiedEndLineNumber: number,\n\t\tmodifiedEndColumn: number\n\t) {\n\t\tthis.originalStartLineNumber = originalStartLineNumber;\n\t\tthis.originalStartColumn = originalStartColumn;\n\t\tthis.originalEndLineNumber = originalEndLineNumber;\n\t\tthis.originalEndColumn = originalEndColumn;\n\t\tthis.modifiedStartLineNumber = modifiedStartLineNumber;\n\t\tthis.modifiedStartColumn = modifiedStartColumn;\n\t\tthis.modifiedEndLineNumber = modifiedEndLineNumber;\n\t\tthis.modifiedEndColumn = modifiedEndColumn;\n\t}\n\n\tpublic static createFromDiffChange(diffChange: IDiffChange, originalCharSequence: CharSequence, modifiedCharSequence: CharSequence): CharChange {\n\t\tlet originalStartLineNumber: number;\n\t\tlet originalStartColumn: number;\n\t\tlet originalEndLineNumber: number;\n\t\tlet originalEndColumn: number;\n\t\tlet modifiedStartLineNumber: number;\n\t\tlet modifiedStartColumn: number;\n\t\tlet modifiedEndLineNumber: number;\n\t\tlet modifiedEndColumn: number;\n\n\t\tif (diffChange.originalLength === 0) {\n\t\t\toriginalStartLineNumber = 0;\n\t\t\toriginalStartColumn = 0;\n\t\t\toriginalEndLineNumber = 0;\n\t\t\toriginalEndColumn = 0;\n\t\t} else {\n\t\t\toriginalStartLineNumber = originalCharSequence.getStartLineNumber(diffChange.originalStart);\n\t\t\toriginalStartColumn = originalCharSequence.getStartColumn(diffChange.originalStart);\n\t\t\toriginalEndLineNumber = originalCharSequence.getEndLineNumber(diffChange.originalStart + diffChange.originalLength - 1);\n\t\t\toriginalEndColumn = originalCharSequence.getEndColumn(diffChange.originalStart + diffChange.originalLength - 1);\n\t\t}\n\n\t\tif (diffChange.modifiedLength === 0) {\n\t\t\tmodifiedStartLineNumber = 0;\n\t\t\tmodifiedStartColumn = 0;\n\t\t\tmodifiedEndLineNumber = 0;\n\t\t\tmodifiedEndColumn = 0;\n\t\t} else {\n\t\t\tmodifiedStartLineNumber = modifiedCharSequence.getStartLineNumber(diffChange.modifiedStart);\n\t\t\tmodifiedStartColumn = modifiedCharSequence.getStartColumn(diffChange.modifiedStart);\n\t\t\tmodifiedEndLineNumber = modifiedCharSequence.getEndLineNumber(diffChange.modifiedStart + diffChange.modifiedLength - 1);\n\t\t\tmodifiedEndColumn = modifiedCharSequence.getEndColumn(diffChange.modifiedStart + diffChange.modifiedLength - 1);\n\t\t}\n\n\t\treturn new CharChange(\n\t\t\toriginalStartLineNumber, originalStartColumn, originalEndLineNumber, originalEndColumn,\n\t\t\tmodifiedStartLineNumber, modifiedStartColumn, modifiedEndLineNumber, modifiedEndColumn,\n\t\t);\n\t}\n}\n\nfunction postProcessCharChanges(rawChanges: IDiffChange[]): IDiffChange[] {\n\tif (rawChanges.length <= 1) {\n\t\treturn rawChanges;\n\t}\n\n\tlet result = [rawChanges[0]];\n\tlet prevChange = result[0];\n\n\tfor (let i = 1, len = rawChanges.length; i < len; i++) {\n\t\tconst currChange = rawChanges[i];\n\n\t\tconst originalMatchingLength = currChange.originalStart - (prevChange.originalStart + prevChange.originalLength);\n\t\tconst modifiedMatchingLength = currChange.modifiedStart - (prevChange.modifiedStart + prevChange.modifiedLength);\n\t\t// Both of the above should be equal, but the continueProcessingPredicate may prevent this from being true\n\t\tconst matchingLength = Math.min(originalMatchingLength, modifiedMatchingLength);\n\n\t\tif (matchingLength < MINIMUM_MATCHING_CHARACTER_LENGTH) {\n\t\t\t// Merge the current change into the previous one\n\t\t\tprevChange.originalLength = (currChange.originalStart + currChange.originalLength) - prevChange.originalStart;\n\t\t\tprevChange.modifiedLength = (currChange.modifiedStart + currChange.modifiedLength) - prevChange.modifiedStart;\n\t\t} else {\n\t\t\t// Add the current change\n\t\t\tresult.push(currChange);\n\t\t\tprevChange = currChange;\n\t\t}\n\t}\n\n\treturn result;\n}\n\nclass LineChange implements ILineChange {\n\tpublic originalStartLineNumber: number;\n\tpublic originalEndLineNumber: number;\n\tpublic modifiedStartLineNumber: number;\n\tpublic modifiedEndLineNumber: number;\n\tpublic charChanges: CharChange[] | undefined;\n\n\tconstructor(\n\t\toriginalStartLineNumber: number,\n\t\toriginalEndLineNumber: number,\n\t\tmodifiedStartLineNumber: number,\n\t\tmodifiedEndLineNumber: number,\n\t\tcharChanges: CharChange[] | undefined\n\t) {\n\t\tthis.originalStartLineNumber = originalStartLineNumber;\n\t\tthis.originalEndLineNumber = originalEndLineNumber;\n\t\tthis.modifiedStartLineNumber = modifiedStartLineNumber;\n\t\tthis.modifiedEndLineNumber = modifiedEndLineNumber;\n\t\tthis.charChanges = charChanges;\n\t}\n\n\tpublic static createFromDiffResult(shouldIgnoreTrimWhitespace: boolean, diffChange: IDiffChange, originalLineSequence: LineMarkerSequence, modifiedLineSequence: LineMarkerSequence, continueProcessingPredicate: () => boolean, shouldComputeCharChanges: boolean, shouldPostProcessCharChanges: boolean): LineChange {\n\t\tlet originalStartLineNumber: number;\n\t\tlet originalEndLineNumber: number;\n\t\tlet modifiedStartLineNumber: number;\n\t\tlet modifiedEndLineNumber: number;\n\t\tlet charChanges: CharChange[] | undefined = undefined;\n\n\t\tif (diffChange.originalLength === 0) {\n\t\t\toriginalStartLineNumber = originalLineSequence.getStartLineNumber(diffChange.originalStart) - 1;\n\t\t\toriginalEndLineNumber = 0;\n\t\t} else {\n\t\t\toriginalStartLineNumber = originalLineSequence.getStartLineNumber(diffChange.originalStart);\n\t\t\toriginalEndLineNumber = originalLineSequence.getEndLineNumber(diffChange.originalStart + diffChange.originalLength - 1);\n\t\t}\n\n\t\tif (diffChange.modifiedLength === 0) {\n\t\t\tmodifiedStartLineNumber = modifiedLineSequence.getStartLineNumber(diffChange.modifiedStart) - 1;\n\t\t\tmodifiedEndLineNumber = 0;\n\t\t} else {\n\t\t\tmodifiedStartLineNumber = modifiedLineSequence.getStartLineNumber(diffChange.modifiedStart);\n\t\t\tmodifiedEndLineNumber = modifiedLineSequence.getEndLineNumber(diffChange.modifiedStart + diffChange.modifiedLength - 1);\n\t\t}\n\n\t\tif (shouldComputeCharChanges && diffChange.originalLength !== 0 && diffChange.modifiedLength !== 0 && continueProcessingPredicate()) {\n\t\t\tconst originalCharSequence = originalLineSequence.getCharSequence(shouldIgnoreTrimWhitespace, diffChange.originalStart, diffChange.originalStart + diffChange.originalLength - 1);\n\t\t\tconst modifiedCharSequence = modifiedLineSequence.getCharSequence(shouldIgnoreTrimWhitespace, diffChange.modifiedStart, diffChange.modifiedStart + diffChange.modifiedLength - 1);\n\n\t\t\tlet rawChanges = computeDiff(originalCharSequence, modifiedCharSequence, continueProcessingPredicate, true);\n\n\t\t\tif (shouldPostProcessCharChanges) {\n\t\t\t\trawChanges = postProcessCharChanges(rawChanges);\n\t\t\t}\n\n\t\t\tcharChanges = [];\n\t\t\tfor (let i = 0, length = rawChanges.length; i < length; i++) {\n\t\t\t\tcharChanges.push(CharChange.createFromDiffChange(rawChanges[i], originalCharSequence, modifiedCharSequence));\n\t\t\t}\n\t\t}\n\n\t\treturn new LineChange(originalStartLineNumber, originalEndLineNumber, modifiedStartLineNumber, modifiedEndLineNumber, charChanges);\n\t}\n}\n\nexport interface IDiffComputerOpts {\n\tshouldComputeCharChanges: boolean;\n\tshouldPostProcessCharChanges: boolean;\n\tshouldIgnoreTrimWhitespace: boolean;\n\tshouldMakePrettyDiff: boolean;\n}\n\nexport class DiffComputer {\n\n\tprivate readonly shouldComputeCharChanges: boolean;\n\tprivate readonly shouldPostProcessCharChanges: boolean;\n\tprivate readonly shouldIgnoreTrimWhitespace: boolean;\n\tprivate readonly shouldMakePrettyDiff: boolean;\n\tprivate readonly maximumRunTimeMs: number;\n\tprivate readonly originalLines: string[];\n\tprivate readonly modifiedLines: string[];\n\tprivate readonly original: LineMarkerSequence;\n\tprivate readonly modified: LineMarkerSequence;\n\n\tprivate computationStartTime: number;\n\n\tconstructor(originalLines: string[], modifiedLines: string[], opts: IDiffComputerOpts) {\n\t\tthis.shouldComputeCharChanges = opts.shouldComputeCharChanges;\n\t\tthis.shouldPostProcessCharChanges = opts.shouldPostProcessCharChanges;\n\t\tthis.shouldIgnoreTrimWhitespace = opts.shouldIgnoreTrimWhitespace;\n\t\tthis.shouldMakePrettyDiff = opts.shouldMakePrettyDiff;\n\t\tthis.maximumRunTimeMs = MAXIMUM_RUN_TIME;\n\t\tthis.originalLines = originalLines;\n\t\tthis.modifiedLines = modifiedLines;\n\t\tthis.original = new LineMarkerSequence(originalLines);\n\t\tthis.modified = new LineMarkerSequence(modifiedLines);\n\t}\n\n\tpublic computeDiff(): ILineChange[] {\n\n\t\tif (this.original.getLength() === 1 && this.original.getElementAtIndex(0).length === 0) {\n\t\t\t// empty original => fast path\n\t\t\treturn [{\n\t\t\t\toriginalStartLineNumber: 1,\n\t\t\t\toriginalEndLineNumber: 1,\n\t\t\t\tmodifiedStartLineNumber: 1,\n\t\t\t\tmodifiedEndLineNumber: this.modified.getLength(),\n\t\t\t\tcharChanges: [{\n\t\t\t\t\tmodifiedEndColumn: 0,\n\t\t\t\t\tmodifiedEndLineNumber: 0,\n\t\t\t\t\tmodifiedStartColumn: 0,\n\t\t\t\t\tmodifiedStartLineNumber: 0,\n\t\t\t\t\toriginalEndColumn: 0,\n\t\t\t\t\toriginalEndLineNumber: 0,\n\t\t\t\t\toriginalStartColumn: 0,\n\t\t\t\t\toriginalStartLineNumber: 0\n\t\t\t\t}]\n\t\t\t}];\n\t\t}\n\n\t\tif (this.modified.getLength() === 1 && this.modified.getElementAtIndex(0).length === 0) {\n\t\t\t// empty modified => fast path\n\t\t\treturn [{\n\t\t\t\toriginalStartLineNumber: 1,\n\t\t\t\toriginalEndLineNumber: this.original.getLength(),\n\t\t\t\tmodifiedStartLineNumber: 1,\n\t\t\t\tmodifiedEndLineNumber: 1,\n\t\t\t\tcharChanges: [{\n\t\t\t\t\tmodifiedEndColumn: 0,\n\t\t\t\t\tmodifiedEndLineNumber: 0,\n\t\t\t\t\tmodifiedStartColumn: 0,\n\t\t\t\t\tmodifiedStartLineNumber: 0,\n\t\t\t\t\toriginalEndColumn: 0,\n\t\t\t\t\toriginalEndLineNumber: 0,\n\t\t\t\t\toriginalStartColumn: 0,\n\t\t\t\t\toriginalStartLineNumber: 0\n\t\t\t\t}]\n\t\t\t}];\n\t\t}\n\n\t\tthis.computationStartTime = (new Date()).getTime();\n\n\t\tlet rawChanges = computeDiff(this.original, this.modified, this._continueProcessingPredicate.bind(this), this.shouldMakePrettyDiff);\n\n\t\t// The diff is always computed with ignoring trim whitespace\n\t\t// This ensures we get the prettiest diff\n\n\t\tif (this.shouldIgnoreTrimWhitespace) {\n\t\t\tlet lineChanges: LineChange[] = [];\n\t\t\tfor (let i = 0, length = rawChanges.length; i < length; i++) {\n\t\t\t\tlineChanges.push(LineChange.createFromDiffResult(this.shouldIgnoreTrimWhitespace, rawChanges[i], this.original, this.modified, this._continueProcessingPredicate.bind(this), this.shouldComputeCharChanges, this.shouldPostProcessCharChanges));\n\t\t\t}\n\t\t\treturn lineChanges;\n\t\t}\n\n\t\t// Need to post-process and introduce changes where the trim whitespace is different\n\t\t// Note that we are looping starting at -1 to also cover the lines before the first change\n\t\tlet result: LineChange[] = [];\n\n\t\tlet originalLineIndex = 0;\n\t\tlet modifiedLineIndex = 0;\n\t\tfor (let i = -1 /* !!!! */, len = rawChanges.length; i < len; i++) {\n\t\t\tconst nextChange = (i + 1 < len ? rawChanges[i + 1] : null);\n\t\t\tconst originalStop = (nextChange ? nextChange.originalStart : this.originalLines.length);\n\t\t\tconst modifiedStop = (nextChange ? nextChange.modifiedStart : this.modifiedLines.length);\n\n\t\t\twhile (originalLineIndex < originalStop && modifiedLineIndex < modifiedStop) {\n\t\t\t\tconst originalLine = this.originalLines[originalLineIndex];\n\t\t\t\tconst modifiedLine = this.modifiedLines[modifiedLineIndex];\n\n\t\t\t\tif (originalLine !== modifiedLine) {\n\t\t\t\t\t// These lines differ only in trim whitespace\n\n\t\t\t\t\t// Check the leading whitespace\n\t\t\t\t\t{\n\t\t\t\t\t\tlet originalStartColumn = LineMarkerSequence._getFirstNonBlankColumn(originalLine, 1);\n\t\t\t\t\t\tlet modifiedStartColumn = LineMarkerSequence._getFirstNonBlankColumn(modifiedLine, 1);\n\t\t\t\t\t\twhile (originalStartColumn > 1 && modifiedStartColumn > 1) {\n\t\t\t\t\t\t\tconst originalChar = originalLine.charCodeAt(originalStartColumn - 2);\n\t\t\t\t\t\t\tconst modifiedChar = modifiedLine.charCodeAt(modifiedStartColumn - 2);\n\t\t\t\t\t\t\tif (originalChar !== modifiedChar) {\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\toriginalStartColumn--;\n\t\t\t\t\t\t\tmodifiedStartColumn--;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (originalStartColumn > 1 || modifiedStartColumn > 1) {\n\t\t\t\t\t\t\tthis._pushTrimWhitespaceCharChange(result,\n\t\t\t\t\t\t\t\toriginalLineIndex + 1, 1, originalStartColumn,\n\t\t\t\t\t\t\t\tmodifiedLineIndex + 1, 1, modifiedStartColumn\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\t// Check the trailing whitespace\n\t\t\t\t\t{\n\t\t\t\t\t\tlet originalEndColumn = LineMarkerSequence._getLastNonBlankColumn(originalLine, 1);\n\t\t\t\t\t\tlet modifiedEndColumn = LineMarkerSequence._getLastNonBlankColumn(modifiedLine, 1);\n\t\t\t\t\t\tconst originalMaxColumn = originalLine.length + 1;\n\t\t\t\t\t\tconst modifiedMaxColumn = modifiedLine.length + 1;\n\t\t\t\t\t\twhile (originalEndColumn < originalMaxColumn && modifiedEndColumn < modifiedMaxColumn) {\n\t\t\t\t\t\t\tconst originalChar = originalLine.charCodeAt(originalEndColumn - 1);\n\t\t\t\t\t\t\tconst modifiedChar = originalLine.charCodeAt(modifiedEndColumn - 1);\n\t\t\t\t\t\t\tif (originalChar !== modifiedChar) {\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\toriginalEndColumn++;\n\t\t\t\t\t\t\tmodifiedEndColumn++;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (originalEndColumn < originalMaxColumn || modifiedEndColumn < modifiedMaxColumn) {\n\t\t\t\t\t\t\tthis._pushTrimWhitespaceCharChange(result,\n\t\t\t\t\t\t\t\toriginalLineIndex + 1, originalEndColumn, originalMaxColumn,\n\t\t\t\t\t\t\t\tmodifiedLineIndex + 1, modifiedEndColumn, modifiedMaxColumn\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\toriginalLineIndex++;\n\t\t\t\tmodifiedLineIndex++;\n\t\t\t}\n\n\t\t\tif (nextChange) {\n\t\t\t\t// Emit the actual change\n\t\t\t\tresult.push(LineChange.createFromDiffResult(this.shouldIgnoreTrimWhitespace, nextChange, this.original, this.modified, this._continueProcessingPredicate.bind(this), this.shouldComputeCharChanges, this.shouldPostProcessCharChanges));\n\n\t\t\t\toriginalLineIndex += nextChange.originalLength;\n\t\t\t\tmodifiedLineIndex += nextChange.modifiedLength;\n\t\t\t}\n\t\t}\n\n\t\treturn result;\n\t}\n\n\tprivate _pushTrimWhitespaceCharChange(\n\t\tresult: LineChange[],\n\t\toriginalLineNumber: number, originalStartColumn: number, originalEndColumn: number,\n\t\tmodifiedLineNumber: number, modifiedStartColumn: number, modifiedEndColumn: number\n\t): void {\n\t\tif (this._mergeTrimWhitespaceCharChange(result, originalLineNumber, originalStartColumn, originalEndColumn, modifiedLineNumber, modifiedStartColumn, modifiedEndColumn)) {\n\t\t\t// Merged into previous\n\t\t\treturn;\n\t\t}\n\n\t\tlet charChanges: CharChange[] | undefined = undefined;\n\t\tif (this.shouldComputeCharChanges) {\n\t\t\tcharChanges = [new CharChange(\n\t\t\t\toriginalLineNumber, originalStartColumn, originalLineNumber, originalEndColumn,\n\t\t\t\tmodifiedLineNumber, modifiedStartColumn, modifiedLineNumber, modifiedEndColumn\n\t\t\t)];\n\t\t}\n\t\tresult.push(new LineChange(\n\t\t\toriginalLineNumber, originalLineNumber,\n\t\t\tmodifiedLineNumber, modifiedLineNumber,\n\t\t\tcharChanges\n\t\t));\n\t}\n\n\tprivate _mergeTrimWhitespaceCharChange(\n\t\tresult: LineChange[],\n\t\toriginalLineNumber: number, originalStartColumn: number, originalEndColumn: number,\n\t\tmodifiedLineNumber: number, modifiedStartColumn: number, modifiedEndColumn: number\n\t): boolean {\n\t\tconst len = result.length;\n\t\tif (len === 0) {\n\t\t\treturn false;\n\t\t}\n\n\t\tconst prevChange = result[len - 1];\n\n\t\tif (prevChange.originalEndLineNumber === 0 || prevChange.modifiedEndLineNumber === 0) {\n\t\t\t// Don't merge with inserts/deletes\n\t\t\treturn false;\n\t\t}\n\n\t\tif (prevChange.originalEndLineNumber + 1 === originalLineNumber && prevChange.modifiedEndLineNumber + 1 === modifiedLineNumber) {\n\t\t\tprevChange.originalEndLineNumber = originalLineNumber;\n\t\t\tprevChange.modifiedEndLineNumber = modifiedLineNumber;\n\t\t\tif (this.shouldComputeCharChanges) {\n\t\t\t\tprevChange.charChanges!.push(new CharChange(\n\t\t\t\t\toriginalLineNumber, originalStartColumn, originalLineNumber, originalEndColumn,\n\t\t\t\t\tmodifiedLineNumber, modifiedStartColumn, modifiedLineNumber, modifiedEndColumn\n\t\t\t\t));\n\t\t\t}\n\t\t\treturn true;\n\t\t}\n\n\t\treturn false;\n\t}\n\n\tprivate _continueProcessingPredicate(): boolean {\n\t\tif (this.maximumRunTimeMs === 0) {\n\t\t\treturn true;\n\t\t}\n\t\tconst now = (new Date()).getTime();\n\t\treturn now - this.computationStartTime < this.maximumRunTimeMs;\n\t}\n\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { IWordAtPosition } from 'vs/editor/common/model';\n\nexport const USUAL_WORD_SEPARATORS = '`~!@#$%^&*()-=+[{]}\\\\|;:\\'\",.<>/?';\n\n/**\n * Create a word definition regular expression based on default word separators.\n * Optionally provide allowed separators that should be included in words.\n *\n * The default would look like this:\n * /(-?\\d*\\.\\d\\w*)|([^\\`\\~\\!\\@\\#\\$\\%\\^\\&\\*\\(\\)\\-\\=\\+\\[\\{\\]\\}\\\\\\|\\;\\:\\'\\\"\\,\\.\\<\\>\\/\\?\\s]+)/g\n */\nfunction createWordRegExp(allowInWords: string = ''): RegExp {\n\tlet source = '(-?\\\\d*\\\\.\\\\d\\\\w*)|([^';\n\tfor (const sep of USUAL_WORD_SEPARATORS) {\n\t\tif (allowInWords.indexOf(sep) >= 0) {\n\t\t\tcontinue;\n\t\t}\n\t\tsource += '\\\\' + sep;\n\t}\n\tsource += '\\\\s]+)';\n\treturn new RegExp(source, 'g');\n}\n\n// catches numbers (including floating numbers) in the first group, and alphanum in the second\nexport const DEFAULT_WORD_REGEXP = createWordRegExp();\n\nexport function ensureValidWordDefinition(wordDefinition?: RegExp | null): RegExp {\n\tlet result: RegExp = DEFAULT_WORD_REGEXP;\n\n\tif (wordDefinition && (wordDefinition instanceof RegExp)) {\n\t\tif (!wordDefinition.global) {\n\t\t\tlet flags = 'g';\n\t\t\tif (wordDefinition.ignoreCase) {\n\t\t\t\tflags += 'i';\n\t\t\t}\n\t\t\tif (wordDefinition.multiline) {\n\t\t\t\tflags += 'm';\n\t\t\t}\n\t\t\tif ((wordDefinition as any).unicode) {\n\t\t\t\tflags += 'u';\n\t\t\t}\n\t\t\tresult = new RegExp(wordDefinition.source, flags);\n\t\t} else {\n\t\t\tresult = wordDefinition;\n\t\t}\n\t}\n\n\tresult.lastIndex = 0;\n\n\treturn result;\n}\n\nfunction getWordAtPosFast(column: number, wordDefinition: RegExp, text: string, textOffset: number): IWordAtPosition | null {\n\t// find whitespace enclosed text around column and match from there\n\n\tlet pos = column - 1 - textOffset;\n\tlet start = text.lastIndexOf(' ', pos - 1) + 1;\n\n\twordDefinition.lastIndex = start;\n\tlet match: RegExpMatchArray | null;\n\twhile (match = wordDefinition.exec(text)) {\n\t\tconst matchIndex = match.index || 0;\n\t\tif (matchIndex <= pos && wordDefinition.lastIndex >= pos) {\n\t\t\treturn {\n\t\t\t\tword: match[0],\n\t\t\t\tstartColumn: textOffset + 1 + matchIndex,\n\t\t\t\tendColumn: textOffset + 1 + wordDefinition.lastIndex\n\t\t\t};\n\t\t}\n\t}\n\n\treturn null;\n}\n\n\nfunction getWordAtPosSlow(column: number, wordDefinition: RegExp, text: string, textOffset: number): IWordAtPosition | null {\n\t// matches all words starting at the beginning\n\t// of the input until it finds a match that encloses\n\t// the desired column. slow but correct\n\n\tlet pos = column - 1 - textOffset;\n\twordDefinition.lastIndex = 0;\n\n\tlet match: RegExpMatchArray | null;\n\twhile (match = wordDefinition.exec(text)) {\n\t\tconst matchIndex = match.index || 0;\n\t\tif (matchIndex > pos) {\n\t\t\t// |nW -> matched only after the pos\n\t\t\treturn null;\n\n\t\t} else if (wordDefinition.lastIndex >= pos) {\n\t\t\t// W|W -> match encloses pos\n\t\t\treturn {\n\t\t\t\tword: match[0],\n\t\t\t\tstartColumn: textOffset + 1 + matchIndex,\n\t\t\t\tendColumn: textOffset + 1 + wordDefinition.lastIndex\n\t\t\t};\n\t\t}\n\t}\n\n\treturn null;\n}\n\nexport function getWordAtText(column: number, wordDefinition: RegExp, text: string, textOffset: number): IWordAtPosition | null {\n\n\t// if `words` can contain whitespace character we have to use the slow variant\n\t// otherwise we use the fast variant of finding a word\n\twordDefinition.lastIndex = 0;\n\tlet match = wordDefinition.exec(text);\n\tif (!match) {\n\t\treturn null;\n\t}\n\t// todo@joh the `match` could already be the (first) word\n\tconst ret = match[0].indexOf(' ') >= 0\n\t\t// did match a word which contains a space character -> use slow word find\n\t\t? getWordAtPosSlow(column, wordDefinition, text, textOffset)\n\t\t// sane word definition -> use fast word find\n\t\t: getWordAtPosFast(column, wordDefinition, text, textOffset);\n\n\t// both (getWordAtPosFast and getWordAtPosSlow) leave the wordDefinition-RegExp\n\t// in an undefined state and to not confuse other users of the wordDefinition\n\t// we reset the lastIndex\n\twordDefinition.lastIndex = 0;\n\n\treturn ret;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { CharCode } from 'vs/base/common/charCode';\nimport { CharacterClassifier } from 'vs/editor/common/core/characterClassifier';\nimport { Uint8Matrix } from 'vs/editor/common/core/uint';\nimport { ILink } from 'vs/editor/common/modes';\n\nexport interface ILinkComputerTarget {\n\tgetLineCount(): number;\n\tgetLineContent(lineNumber: number): string;\n}\n\nexport const enum State {\n\tInvalid = 0,\n\tStart = 1,\n\tH = 2,\n\tHT = 3,\n\tHTT = 4,\n\tHTTP = 5,\n\tF = 6,\n\tFI = 7,\n\tFIL = 8,\n\tBeforeColon = 9,\n\tAfterColon = 10,\n\tAlmostThere = 11,\n\tEnd = 12,\n\tAccept = 13,\n\tLastKnownState = 14 // marker, custom states may follow\n}\n\nexport type Edge = [State, number, State];\n\nexport class StateMachine {\n\n\tprivate readonly _states: Uint8Matrix;\n\tprivate readonly _maxCharCode: number;\n\n\tconstructor(edges: Edge[]) {\n\t\tlet maxCharCode = 0;\n\t\tlet maxState = State.Invalid;\n\t\tfor (let i = 0, len = edges.length; i < len; i++) {\n\t\t\tlet [from, chCode, to] = edges[i];\n\t\t\tif (chCode > maxCharCode) {\n\t\t\t\tmaxCharCode = chCode;\n\t\t\t}\n\t\t\tif (from > maxState) {\n\t\t\t\tmaxState = from;\n\t\t\t}\n\t\t\tif (to > maxState) {\n\t\t\t\tmaxState = to;\n\t\t\t}\n\t\t}\n\n\t\tmaxCharCode++;\n\t\tmaxState++;\n\n\t\tlet states = new Uint8Matrix(maxState, maxCharCode, State.Invalid);\n\t\tfor (let i = 0, len = edges.length; i < len; i++) {\n\t\t\tlet [from, chCode, to] = edges[i];\n\t\t\tstates.set(from, chCode, to);\n\t\t}\n\n\t\tthis._states = states;\n\t\tthis._maxCharCode = maxCharCode;\n\t}\n\n\tpublic nextState(currentState: State, chCode: number): State {\n\t\tif (chCode < 0 || chCode >= this._maxCharCode) {\n\t\t\treturn State.Invalid;\n\t\t}\n\t\treturn this._states.get(currentState, chCode);\n\t}\n}\n\n// State machine for http:// or https:// or file://\nlet _stateMachine: StateMachine | null = null;\nfunction getStateMachine(): StateMachine {\n\tif (_stateMachine === null) {\n\t\t_stateMachine = new StateMachine([\n\t\t\t[State.Start, CharCode.h, State.H],\n\t\t\t[State.Start, CharCode.H, State.H],\n\t\t\t[State.Start, CharCode.f, State.F],\n\t\t\t[State.Start, CharCode.F, State.F],\n\n\t\t\t[State.H, CharCode.t, State.HT],\n\t\t\t[State.H, CharCode.T, State.HT],\n\n\t\t\t[State.HT, CharCode.t, State.HTT],\n\t\t\t[State.HT, CharCode.T, State.HTT],\n\n\t\t\t[State.HTT, CharCode.p, State.HTTP],\n\t\t\t[State.HTT, CharCode.P, State.HTTP],\n\n\t\t\t[State.HTTP, CharCode.s, State.BeforeColon],\n\t\t\t[State.HTTP, CharCode.S, State.BeforeColon],\n\t\t\t[State.HTTP, CharCode.Colon, State.AfterColon],\n\n\t\t\t[State.F, CharCode.i, State.FI],\n\t\t\t[State.F, CharCode.I, State.FI],\n\n\t\t\t[State.FI, CharCode.l, State.FIL],\n\t\t\t[State.FI, CharCode.L, State.FIL],\n\n\t\t\t[State.FIL, CharCode.e, State.BeforeColon],\n\t\t\t[State.FIL, CharCode.E, State.BeforeColon],\n\n\t\t\t[State.BeforeColon, CharCode.Colon, State.AfterColon],\n\n\t\t\t[State.AfterColon, CharCode.Slash, State.AlmostThere],\n\n\t\t\t[State.AlmostThere, CharCode.Slash, State.End],\n\t\t]);\n\t}\n\treturn _stateMachine;\n}\n\n\nconst enum CharacterClass {\n\tNone = 0,\n\tForceTermination = 1,\n\tCannotEndIn = 2\n}\n\nlet _classifier: CharacterClassifier<CharacterClass> | null = null;\nfunction getClassifier(): CharacterClassifier<CharacterClass> {\n\tif (_classifier === null) {\n\t\t_classifier = new CharacterClassifier<CharacterClass>(CharacterClass.None);\n\n\t\tconst FORCE_TERMINATION_CHARACTERS = ' \\t<>\\'\\\"、。｡､，．：；？！＠＃＄％＆＊‘“〈《「『【〔（［｛｢｣｝］）〕】』」》〉”’｀～…';\n\t\tfor (let i = 0; i < FORCE_TERMINATION_CHARACTERS.length; i++) {\n\t\t\t_classifier.set(FORCE_TERMINATION_CHARACTERS.charCodeAt(i), CharacterClass.ForceTermination);\n\t\t}\n\n\t\tconst CANNOT_END_WITH_CHARACTERS = '.,;';\n\t\tfor (let i = 0; i < CANNOT_END_WITH_CHARACTERS.length; i++) {\n\t\t\t_classifier.set(CANNOT_END_WITH_CHARACTERS.charCodeAt(i), CharacterClass.CannotEndIn);\n\t\t}\n\t}\n\treturn _classifier;\n}\n\nexport class LinkComputer {\n\n\tprivate static _createLink(classifier: CharacterClassifier<CharacterClass>, line: string, lineNumber: number, linkBeginIndex: number, linkEndIndex: number): ILink {\n\t\t// Do not allow to end link in certain characters...\n\t\tlet lastIncludedCharIndex = linkEndIndex - 1;\n\t\tdo {\n\t\t\tconst chCode = line.charCodeAt(lastIncludedCharIndex);\n\t\t\tconst chClass = classifier.get(chCode);\n\t\t\tif (chClass !== CharacterClass.CannotEndIn) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tlastIncludedCharIndex--;\n\t\t} while (lastIncludedCharIndex > linkBeginIndex);\n\n\t\t// Handle links enclosed in parens, square brackets and curlys.\n\t\tif (linkBeginIndex > 0) {\n\t\t\tconst charCodeBeforeLink = line.charCodeAt(linkBeginIndex - 1);\n\t\t\tconst lastCharCodeInLink = line.charCodeAt(lastIncludedCharIndex);\n\n\t\t\tif (\n\t\t\t\t(charCodeBeforeLink === CharCode.OpenParen && lastCharCodeInLink === CharCode.CloseParen)\n\t\t\t\t|| (charCodeBeforeLink === CharCode.OpenSquareBracket && lastCharCodeInLink === CharCode.CloseSquareBracket)\n\t\t\t\t|| (charCodeBeforeLink === CharCode.OpenCurlyBrace && lastCharCodeInLink === CharCode.CloseCurlyBrace)\n\t\t\t) {\n\t\t\t\t// Do not end in ) if ( is before the link start\n\t\t\t\t// Do not end in ] if [ is before the link start\n\t\t\t\t// Do not end in } if { is before the link start\n\t\t\t\tlastIncludedCharIndex--;\n\t\t\t}\n\t\t}\n\n\t\treturn {\n\t\t\trange: {\n\t\t\t\tstartLineNumber: lineNumber,\n\t\t\t\tstartColumn: linkBeginIndex + 1,\n\t\t\t\tendLineNumber: lineNumber,\n\t\t\t\tendColumn: lastIncludedCharIndex + 2\n\t\t\t},\n\t\t\turl: line.substring(linkBeginIndex, lastIncludedCharIndex + 1)\n\t\t};\n\t}\n\n\tpublic static computeLinks(model: ILinkComputerTarget, stateMachine: StateMachine = getStateMachine()): ILink[] {\n\t\tconst classifier = getClassifier();\n\n\t\tlet result: ILink[] = [];\n\t\tfor (let i = 1, lineCount = model.getLineCount(); i <= lineCount; i++) {\n\t\t\tconst line = model.getLineContent(i);\n\t\t\tconst len = line.length;\n\n\t\t\tlet j = 0;\n\t\t\tlet linkBeginIndex = 0;\n\t\t\tlet linkBeginChCode = 0;\n\t\t\tlet state = State.Start;\n\t\t\tlet hasOpenParens = false;\n\t\t\tlet hasOpenSquareBracket = false;\n\t\t\tlet hasOpenCurlyBracket = false;\n\n\t\t\twhile (j < len) {\n\n\t\t\t\tlet resetStateMachine = false;\n\t\t\t\tconst chCode = line.charCodeAt(j);\n\n\t\t\t\tif (state === State.Accept) {\n\t\t\t\t\tlet chClass: CharacterClass;\n\t\t\t\t\tswitch (chCode) {\n\t\t\t\t\t\tcase CharCode.OpenParen:\n\t\t\t\t\t\t\thasOpenParens = true;\n\t\t\t\t\t\t\tchClass = CharacterClass.None;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase CharCode.CloseParen:\n\t\t\t\t\t\t\tchClass = (hasOpenParens ? CharacterClass.None : CharacterClass.ForceTermination);\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase CharCode.OpenSquareBracket:\n\t\t\t\t\t\t\thasOpenSquareBracket = true;\n\t\t\t\t\t\t\tchClass = CharacterClass.None;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase CharCode.CloseSquareBracket:\n\t\t\t\t\t\t\tchClass = (hasOpenSquareBracket ? CharacterClass.None : CharacterClass.ForceTermination);\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase CharCode.OpenCurlyBrace:\n\t\t\t\t\t\t\thasOpenCurlyBracket = true;\n\t\t\t\t\t\t\tchClass = CharacterClass.None;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase CharCode.CloseCurlyBrace:\n\t\t\t\t\t\t\tchClass = (hasOpenCurlyBracket ? CharacterClass.None : CharacterClass.ForceTermination);\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t/* The following three rules make it that ' or \" or ` are allowed inside links if the link began with a different one */\n\t\t\t\t\t\tcase CharCode.SingleQuote:\n\t\t\t\t\t\t\tchClass = (linkBeginChCode === CharCode.DoubleQuote || linkBeginChCode === CharCode.BackTick) ? CharacterClass.None : CharacterClass.ForceTermination;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase CharCode.DoubleQuote:\n\t\t\t\t\t\t\tchClass = (linkBeginChCode === CharCode.SingleQuote || linkBeginChCode === CharCode.BackTick) ? CharacterClass.None : CharacterClass.ForceTermination;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase CharCode.BackTick:\n\t\t\t\t\t\t\tchClass = (linkBeginChCode === CharCode.SingleQuote || linkBeginChCode === CharCode.DoubleQuote) ? CharacterClass.None : CharacterClass.ForceTermination;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\tchClass = classifier.get(chCode);\n\t\t\t\t\t}\n\n\t\t\t\t\t// Check if character terminates link\n\t\t\t\t\tif (chClass === CharacterClass.ForceTermination) {\n\t\t\t\t\t\tresult.push(LinkComputer._createLink(classifier, line, i, linkBeginIndex, j));\n\t\t\t\t\t\tresetStateMachine = true;\n\t\t\t\t\t}\n\t\t\t\t} else if (state === State.End) {\n\n\t\t\t\t\tlet chClass: CharacterClass;\n\t\t\t\t\tif (chCode === CharCode.OpenSquareBracket) {\n\t\t\t\t\t\t// Allow for the authority part to contain ipv6 addresses which contain [ and ]\n\t\t\t\t\t\thasOpenSquareBracket = true;\n\t\t\t\t\t\tchClass = CharacterClass.None;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tchClass = classifier.get(chCode);\n\t\t\t\t\t}\n\n\t\t\t\t\t// Check if character terminates link\n\t\t\t\t\tif (chClass === CharacterClass.ForceTermination) {\n\t\t\t\t\t\tresetStateMachine = true;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tstate = State.Accept;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tstate = stateMachine.nextState(state, chCode);\n\t\t\t\t\tif (state === State.Invalid) {\n\t\t\t\t\t\tresetStateMachine = true;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (resetStateMachine) {\n\t\t\t\t\tstate = State.Start;\n\t\t\t\t\thasOpenParens = false;\n\t\t\t\t\thasOpenSquareBracket = false;\n\t\t\t\t\thasOpenCurlyBracket = false;\n\n\t\t\t\t\t// Record where the link started\n\t\t\t\t\tlinkBeginIndex = j + 1;\n\t\t\t\t\tlinkBeginChCode = chCode;\n\t\t\t\t}\n\n\t\t\t\tj++;\n\t\t\t}\n\n\t\t\tif (state === State.Accept) {\n\t\t\t\tresult.push(LinkComputer._createLink(classifier, line, i, linkBeginIndex, len));\n\t\t\t}\n\n\t\t}\n\n\t\treturn result;\n\t}\n}\n\n/**\n * Returns an array of all links contains in the provided\n * document. *Note* that this operation is computational\n * expensive and should not run in the UI thread.\n */\nexport function computeLinks(model: ILinkComputerTarget | null): ILink[] {\n\tif (!model || typeof model.getLineCount !== 'function' || typeof model.getLineContent !== 'function') {\n\t\t// Unknown caller!\n\t\treturn [];\n\t}\n\treturn LinkComputer.computeLinks(model);\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { IRange } from 'vs/editor/common/core/range';\nimport { IInplaceReplaceSupportResult } from 'vs/editor/common/modes';\n\nexport class BasicInplaceReplace {\n\n\tpublic static readonly INSTANCE = new BasicInplaceReplace();\n\n\tpublic navigateValueSet(range1: IRange, text1: string, range2: IRange, text2: string | null, up: boolean): IInplaceReplaceSupportResult | null {\n\n\t\tif (range1 && text1) {\n\t\t\tlet result = this.doNavigateValueSet(text1, up);\n\t\t\tif (result) {\n\t\t\t\treturn {\n\t\t\t\t\trange: range1,\n\t\t\t\t\tvalue: result\n\t\t\t\t};\n\t\t\t}\n\t\t}\n\n\t\tif (range2 && text2) {\n\t\t\tlet result = this.doNavigateValueSet(text2, up);\n\t\t\tif (result) {\n\t\t\t\treturn {\n\t\t\t\t\trange: range2,\n\t\t\t\t\tvalue: result\n\t\t\t\t};\n\t\t\t}\n\t\t}\n\n\t\treturn null;\n\t}\n\n\tprivate doNavigateValueSet(text: string, up: boolean): string | null {\n\t\tlet numberResult = this.numberReplace(text, up);\n\t\tif (numberResult !== null) {\n\t\t\treturn numberResult;\n\t\t}\n\t\treturn this.textReplace(text, up);\n\t}\n\n\tprivate numberReplace(value: string, up: boolean): string | null {\n\t\tlet precision = Math.pow(10, value.length - (value.lastIndexOf('.') + 1));\n\t\tlet n1 = Number(value);\n\t\tlet n2 = parseFloat(value);\n\n\t\tif (!isNaN(n1) && !isNaN(n2) && n1 === n2) {\n\n\t\t\tif (n1 === 0 && !up) {\n\t\t\t\treturn null; // don't do negative\n\t\t\t\t//\t\t\t} else if(n1 === 9 && up) {\n\t\t\t\t//\t\t\t\treturn null; // don't insert 10 into a number\n\t\t\t} else {\n\t\t\t\tn1 = Math.floor(n1 * precision);\n\t\t\t\tn1 += up ? precision : -precision;\n\t\t\t\treturn String(n1 / precision);\n\t\t\t}\n\t\t}\n\n\t\treturn null;\n\t}\n\n\tprivate readonly _defaultValueSet: string[][] = [\n\t\t['true', 'false'],\n\t\t['True', 'False'],\n\t\t['Private', 'Public', 'Friend', 'ReadOnly', 'Partial', 'Protected', 'WriteOnly'],\n\t\t['public', 'protected', 'private'],\n\t];\n\n\tprivate textReplace(value: string, up: boolean): string | null {\n\t\treturn this.valueSetsReplace(this._defaultValueSet, value, up);\n\t}\n\n\tprivate valueSetsReplace(valueSets: string[][], value: string, up: boolean): string | null {\n\t\tlet result: string | null = null;\n\t\tfor (let i = 0, len = valueSets.length; result === null && i < len; i++) {\n\t\t\tresult = this.valueSetReplace(valueSets[i], value, up);\n\t\t}\n\t\treturn result;\n\t}\n\n\tprivate valueSetReplace(valueSet: string[], value: string, up: boolean): string | null {\n\t\tlet idx = valueSet.indexOf(value);\n\t\tif (idx >= 0) {\n\t\t\tidx += up ? +1 : -1;\n\t\t\tif (idx < 0) {\n\t\t\t\tidx = valueSet.length - 1;\n\t\t\t} else {\n\t\t\t\tidx %= valueSet.length;\n\t\t\t}\n\t\t\treturn valueSet[idx];\n\t\t}\n\t\treturn null;\n\t}\n}\n","/*!\nCopyright (c) 2014 Taylor Hakes\nCopyright (c) 2014 Forbes Lindesay\n */\n(function (global, factory) {\n\ttypeof exports === 'object' && typeof module !== 'undefined' ? factory() :\n\t\ttypeof define === 'function' && define.amd ? define(\"vs/editor/common/standalone/promise-polyfill/polyfill\", factory) :\n\t\t\t(factory());\n}(this, (function () {\n\t'use strict';\n\n\t/**\n\t * @this {Promise}\n\t */\n\tfunction finallyConstructor(callback) {\n\t\tvar constructor = this.constructor;\n\t\treturn this.then(\n\t\t\tfunction (value) {\n\t\t\t\treturn constructor.resolve(callback()).then(function () {\n\t\t\t\t\treturn value;\n\t\t\t\t});\n\t\t\t},\n\t\t\tfunction (reason) {\n\t\t\t\treturn constructor.resolve(callback()).then(function () {\n\t\t\t\t\treturn constructor.reject(reason);\n\t\t\t\t});\n\t\t\t}\n\t\t);\n\t}\n\n\t// Store setTimeout reference so promise-polyfill will be unaffected by\n\t// other code modifying setTimeout (like sinon.useFakeTimers())\n\tvar setTimeoutFunc = setTimeout;\n\n\tfunction noop() { }\n\n\t// Polyfill for Function.prototype.bind\n\tfunction bind(fn, thisArg) {\n\t\treturn function () {\n\t\t\tfn.apply(thisArg, arguments);\n\t\t};\n\t}\n\n\t/**\n\t * @constructor\n\t * @param {Function} fn\n\t */\n\tfunction Promise(fn) {\n\t\tif (!(this instanceof Promise))\n\t\t\tthrow new TypeError('Promises must be constructed via new');\n\t\tif (typeof fn !== 'function') throw new TypeError('not a function');\n\t\t/** @type {!number} */\n\t\tthis._state = 0;\n\t\t/** @type {!boolean} */\n\t\tthis._handled = false;\n\t\t/** @type {Promise|undefined} */\n\t\tthis._value = undefined;\n\t\t/** @type {!Array<!Function>} */\n\t\tthis._deferreds = [];\n\n\t\tdoResolve(fn, this);\n\t}\n\n\tfunction handle(self, deferred) {\n\t\twhile (self._state === 3) {\n\t\t\tself = self._value;\n\t\t}\n\t\tif (self._state === 0) {\n\t\t\tself._deferreds.push(deferred);\n\t\t\treturn;\n\t\t}\n\t\tself._handled = true;\n\t\tPromise._immediateFn(function () {\n\t\t\tvar cb = self._state === 1 ? deferred.onFulfilled : deferred.onRejected;\n\t\t\tif (cb === null) {\n\t\t\t\t(self._state === 1 ? resolve : reject)(deferred.promise, self._value);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tvar ret;\n\t\t\ttry {\n\t\t\t\tret = cb(self._value);\n\t\t\t} catch (e) {\n\t\t\t\treject(deferred.promise, e);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tresolve(deferred.promise, ret);\n\t\t});\n\t}\n\n\tfunction resolve(self, newValue) {\n\t\ttry {\n\t\t\t// Promise Resolution Procedure: https://github.com/promises-aplus/promises-spec#the-promise-resolution-procedure\n\t\t\tif (newValue === self)\n\t\t\t\tthrow new TypeError('A promise cannot be resolved with itself.');\n\t\t\tif (\n\t\t\t\tnewValue &&\n\t\t\t\t(typeof newValue === 'object' || typeof newValue === 'function')\n\t\t\t) {\n\t\t\t\tvar then = newValue.then;\n\t\t\t\tif (newValue instanceof Promise) {\n\t\t\t\t\tself._state = 3;\n\t\t\t\t\tself._value = newValue;\n\t\t\t\t\tfinale(self);\n\t\t\t\t\treturn;\n\t\t\t\t} else if (typeof then === 'function') {\n\t\t\t\t\tdoResolve(bind(then, newValue), self);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\t\t\tself._state = 1;\n\t\t\tself._value = newValue;\n\t\t\tfinale(self);\n\t\t} catch (e) {\n\t\t\treject(self, e);\n\t\t}\n\t}\n\n\tfunction reject(self, newValue) {\n\t\tself._state = 2;\n\t\tself._value = newValue;\n\t\tfinale(self);\n\t}\n\n\tfunction finale(self) {\n\t\tif (self._state === 2 && self._deferreds.length === 0) {\n\t\t\tPromise._immediateFn(function () {\n\t\t\t\tif (!self._handled) {\n\t\t\t\t\tPromise._unhandledRejectionFn(self._value);\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\n\t\tfor (var i = 0, len = self._deferreds.length; i < len; i++) {\n\t\t\thandle(self, self._deferreds[i]);\n\t\t}\n\t\tself._deferreds = null;\n\t}\n\n\t/**\n\t * @constructor\n\t */\n\tfunction Handler(onFulfilled, onRejected, promise) {\n\t\tthis.onFulfilled = typeof onFulfilled === 'function' ? onFulfilled : null;\n\t\tthis.onRejected = typeof onRejected === 'function' ? onRejected : null;\n\t\tthis.promise = promise;\n\t}\n\n\t/**\n\t * Take a potentially misbehaving resolver function and make sure\n\t * onFulfilled and onRejected are only called once.\n\t *\n\t * Makes no guarantees about asynchrony.\n\t */\n\tfunction doResolve(fn, self) {\n\t\tvar done = false;\n\t\ttry {\n\t\t\tfn(\n\t\t\t\tfunction (value) {\n\t\t\t\t\tif (done) return;\n\t\t\t\t\tdone = true;\n\t\t\t\t\tresolve(self, value);\n\t\t\t\t},\n\t\t\t\tfunction (reason) {\n\t\t\t\t\tif (done) return;\n\t\t\t\t\tdone = true;\n\t\t\t\t\treject(self, reason);\n\t\t\t\t}\n\t\t\t);\n\t\t} catch (ex) {\n\t\t\tif (done) return;\n\t\t\tdone = true;\n\t\t\treject(self, ex);\n\t\t}\n\t}\n\n\tPromise.prototype['catch'] = function (onRejected) {\n\t\treturn this.then(null, onRejected);\n\t};\n\n\tPromise.prototype.then = function (onFulfilled, onRejected) {\n\t\t// @ts-ignore\n\t\tvar prom = new this.constructor(noop);\n\n\t\thandle(this, new Handler(onFulfilled, onRejected, prom));\n\t\treturn prom;\n\t};\n\n\tPromise.prototype['finally'] = finallyConstructor;\n\n\tPromise.all = function (arr) {\n\t\treturn new Promise(function (resolve, reject) {\n\t\t\tif (!arr || typeof arr.length === 'undefined')\n\t\t\t\tthrow new TypeError('Promise.all accepts an array');\n\t\t\tvar args = Array.prototype.slice.call(arr);\n\t\t\tif (args.length === 0) return resolve([]);\n\t\t\tvar remaining = args.length;\n\n\t\t\tfunction res(i, val) {\n\t\t\t\ttry {\n\t\t\t\t\tif (val && (typeof val === 'object' || typeof val === 'function')) {\n\t\t\t\t\t\tvar then = val.then;\n\t\t\t\t\t\tif (typeof then === 'function') {\n\t\t\t\t\t\t\tthen.call(\n\t\t\t\t\t\t\t\tval,\n\t\t\t\t\t\t\t\tfunction (val) {\n\t\t\t\t\t\t\t\t\tres(i, val);\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\treject\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\targs[i] = val;\n\t\t\t\t\tif (--remaining === 0) {\n\t\t\t\t\t\tresolve(args);\n\t\t\t\t\t}\n\t\t\t\t} catch (ex) {\n\t\t\t\t\treject(ex);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tfor (var i = 0; i < args.length; i++) {\n\t\t\t\tres(i, args[i]);\n\t\t\t}\n\t\t});\n\t};\n\n\tPromise.resolve = function (value) {\n\t\tif (value && typeof value === 'object' && value.constructor === Promise) {\n\t\t\treturn value;\n\t\t}\n\n\t\treturn new Promise(function (resolve) {\n\t\t\tresolve(value);\n\t\t});\n\t};\n\n\tPromise.reject = function (value) {\n\t\treturn new Promise(function (resolve, reject) {\n\t\t\treject(value);\n\t\t});\n\t};\n\n\tPromise.race = function (values) {\n\t\treturn new Promise(function (resolve, reject) {\n\t\t\tfor (var i = 0, len = values.length; i < len; i++) {\n\t\t\t\tvalues[i].then(resolve, reject);\n\t\t\t}\n\t\t});\n\t};\n\n\t// Use polyfill for setImmediate for performance gains\n\tPromise._immediateFn =\n\t\t(typeof setImmediate === 'function' &&\n\t\t\tfunction (fn) {\n\t\t\t\tsetImmediate(fn);\n\t\t\t}) ||\n\t\tfunction (fn) {\n\t\t\tsetTimeoutFunc(fn, 0);\n\t\t};\n\n\tPromise._unhandledRejectionFn = function _unhandledRejectionFn(err) {\n\t\tif (typeof console !== 'undefined' && console) {\n\t\t\tconsole.warn('Possible Unhandled Promise Rejection:', err); // eslint-disable-line no-console\n\t\t}\n\t};\n\n\t/** @suppress {undefinedVars} */\n\tvar globalNS = (function () {\n\t\t// the only reliable means to get the global object is\n\t\t// `Function('return this')()`\n\t\t// However, this causes CSP violations in Chrome apps.\n\t\tif (typeof self !== 'undefined') {\n\t\t\treturn self;\n\t\t}\n\t\tif (typeof window !== 'undefined') {\n\t\t\treturn window;\n\t\t}\n\t\tif (typeof global !== 'undefined') {\n\t\t\treturn global;\n\t\t}\n\t\tthrow new Error('unable to locate global object');\n\t})();\n\n\tif (!('Promise' in globalNS)) {\n\t\tglobalNS['Promise'] = Promise;\n\t} else if (!globalNS.Promise.prototype['finally']) {\n\t\tglobalNS.Promise.prototype['finally'] = finallyConstructor;\n\t}\n\n})));\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\n// THIS IS A GENERATED FILE. DO NOT EDIT DIRECTLY.\n\n\nexport enum MarkerTag {\n\tUnnecessary = 1\n}\n\nexport enum MarkerSeverity {\n\tHint = 1,\n\tInfo = 2,\n\tWarning = 4,\n\tError = 8\n}\n\n/**\n * Virtual Key Codes, the value does not hold any inherent meaning.\n * Inspired somewhat from https://msdn.microsoft.com/en-us/library/windows/desktop/dd375731(v=vs.85).aspx\n * But these are \"more general\", as they should work across browsers & OS`s.\n */\nexport enum KeyCode {\n\t/**\n\t * Placed first to cover the 0 value of the enum.\n\t */\n\tUnknown = 0,\n\tBackspace = 1,\n\tTab = 2,\n\tEnter = 3,\n\tShift = 4,\n\tCtrl = 5,\n\tAlt = 6,\n\tPauseBreak = 7,\n\tCapsLock = 8,\n\tEscape = 9,\n\tSpace = 10,\n\tPageUp = 11,\n\tPageDown = 12,\n\tEnd = 13,\n\tHome = 14,\n\tLeftArrow = 15,\n\tUpArrow = 16,\n\tRightArrow = 17,\n\tDownArrow = 18,\n\tInsert = 19,\n\tDelete = 20,\n\tKEY_0 = 21,\n\tKEY_1 = 22,\n\tKEY_2 = 23,\n\tKEY_3 = 24,\n\tKEY_4 = 25,\n\tKEY_5 = 26,\n\tKEY_6 = 27,\n\tKEY_7 = 28,\n\tKEY_8 = 29,\n\tKEY_9 = 30,\n\tKEY_A = 31,\n\tKEY_B = 32,\n\tKEY_C = 33,\n\tKEY_D = 34,\n\tKEY_E = 35,\n\tKEY_F = 36,\n\tKEY_G = 37,\n\tKEY_H = 38,\n\tKEY_I = 39,\n\tKEY_J = 40,\n\tKEY_K = 41,\n\tKEY_L = 42,\n\tKEY_M = 43,\n\tKEY_N = 44,\n\tKEY_O = 45,\n\tKEY_P = 46,\n\tKEY_Q = 47,\n\tKEY_R = 48,\n\tKEY_S = 49,\n\tKEY_T = 50,\n\tKEY_U = 51,\n\tKEY_V = 52,\n\tKEY_W = 53,\n\tKEY_X = 54,\n\tKEY_Y = 55,\n\tKEY_Z = 56,\n\tMeta = 57,\n\tContextMenu = 58,\n\tF1 = 59,\n\tF2 = 60,\n\tF3 = 61,\n\tF4 = 62,\n\tF5 = 63,\n\tF6 = 64,\n\tF7 = 65,\n\tF8 = 66,\n\tF9 = 67,\n\tF10 = 68,\n\tF11 = 69,\n\tF12 = 70,\n\tF13 = 71,\n\tF14 = 72,\n\tF15 = 73,\n\tF16 = 74,\n\tF17 = 75,\n\tF18 = 76,\n\tF19 = 77,\n\tNumLock = 78,\n\tScrollLock = 79,\n\t/**\n\t * Used for miscellaneous characters; it can vary by keyboard.\n\t * For the US standard keyboard, the ';:' key\n\t */\n\tUS_SEMICOLON = 80,\n\t/**\n\t * For any country/region, the '+' key\n\t * For the US standard keyboard, the '=+' key\n\t */\n\tUS_EQUAL = 81,\n\t/**\n\t * For any country/region, the ',' key\n\t * For the US standard keyboard, the ',<' key\n\t */\n\tUS_COMMA = 82,\n\t/**\n\t * For any country/region, the '-' key\n\t * For the US standard keyboard, the '-_' key\n\t */\n\tUS_MINUS = 83,\n\t/**\n\t * For any country/region, the '.' key\n\t * For the US standard keyboard, the '.>' key\n\t */\n\tUS_DOT = 84,\n\t/**\n\t * Used for miscellaneous characters; it can vary by keyboard.\n\t * For the US standard keyboard, the '/?' key\n\t */\n\tUS_SLASH = 85,\n\t/**\n\t * Used for miscellaneous characters; it can vary by keyboard.\n\t * For the US standard keyboard, the '`~' key\n\t */\n\tUS_BACKTICK = 86,\n\t/**\n\t * Used for miscellaneous characters; it can vary by keyboard.\n\t * For the US standard keyboard, the '[{' key\n\t */\n\tUS_OPEN_SQUARE_BRACKET = 87,\n\t/**\n\t * Used for miscellaneous characters; it can vary by keyboard.\n\t * For the US standard keyboard, the '\\|' key\n\t */\n\tUS_BACKSLASH = 88,\n\t/**\n\t * Used for miscellaneous characters; it can vary by keyboard.\n\t * For the US standard keyboard, the ']}' key\n\t */\n\tUS_CLOSE_SQUARE_BRACKET = 89,\n\t/**\n\t * Used for miscellaneous characters; it can vary by keyboard.\n\t * For the US standard keyboard, the ''\"' key\n\t */\n\tUS_QUOTE = 90,\n\t/**\n\t * Used for miscellaneous characters; it can vary by keyboard.\n\t */\n\tOEM_8 = 91,\n\t/**\n\t * Either the angle bracket key or the backslash key on the RT 102-key keyboard.\n\t */\n\tOEM_102 = 92,\n\tNUMPAD_0 = 93,\n\tNUMPAD_1 = 94,\n\tNUMPAD_2 = 95,\n\tNUMPAD_3 = 96,\n\tNUMPAD_4 = 97,\n\tNUMPAD_5 = 98,\n\tNUMPAD_6 = 99,\n\tNUMPAD_7 = 100,\n\tNUMPAD_8 = 101,\n\tNUMPAD_9 = 102,\n\tNUMPAD_MULTIPLY = 103,\n\tNUMPAD_ADD = 104,\n\tNUMPAD_SEPARATOR = 105,\n\tNUMPAD_SUBTRACT = 106,\n\tNUMPAD_DECIMAL = 107,\n\tNUMPAD_DIVIDE = 108,\n\t/**\n\t * Cover all key codes when IME is processing input.\n\t */\n\tKEY_IN_COMPOSITION = 109,\n\tABNT_C1 = 110,\n\tABNT_C2 = 111,\n\t/**\n\t * Placed last to cover the length of the enum.\n\t * Please do not depend on this value!\n\t */\n\tMAX_VALUE = 112\n}\n\n/**\n * The direction of a selection.\n */\nexport enum SelectionDirection {\n\t/**\n\t * The selection starts above where it ends.\n\t */\n\tLTR = 0,\n\t/**\n\t * The selection starts below where it ends.\n\t */\n\tRTL = 1\n}\n\nexport enum ScrollbarVisibility {\n\tAuto = 1,\n\tHidden = 2,\n\tVisible = 3\n}\n\n/**\n * Vertical Lane in the overview ruler of the editor.\n */\nexport enum OverviewRulerLane {\n\tLeft = 1,\n\tCenter = 2,\n\tRight = 4,\n\tFull = 7\n}\n\n/**\n * End of line character preference.\n */\nexport enum EndOfLinePreference {\n\t/**\n\t * Use the end of line character identified in the text buffer.\n\t */\n\tTextDefined = 0,\n\t/**\n\t * Use line feed (\\n) as the end of line character.\n\t */\n\tLF = 1,\n\t/**\n\t * Use carriage return and line feed (\\r\\n) as the end of line character.\n\t */\n\tCRLF = 2\n}\n\n/**\n * The default end of line to use when instantiating models.\n */\nexport enum DefaultEndOfLine {\n\t/**\n\t * Use line feed (\\n) as the end of line character.\n\t */\n\tLF = 1,\n\t/**\n\t * Use carriage return and line feed (\\r\\n) as the end of line character.\n\t */\n\tCRLF = 2\n}\n\n/**\n * End of line character preference.\n */\nexport enum EndOfLineSequence {\n\t/**\n\t * Use line feed (\\n) as the end of line character.\n\t */\n\tLF = 0,\n\t/**\n\t * Use carriage return and line feed (\\r\\n) as the end of line character.\n\t */\n\tCRLF = 1\n}\n\n/**\n * Describes the behavior of decorations when typing/editing near their edges.\n * Note: Please do not edit the values, as they very carefully match `DecorationRangeBehavior`\n */\nexport enum TrackedRangeStickiness {\n\tAlwaysGrowsWhenTypingAtEdges = 0,\n\tNeverGrowsWhenTypingAtEdges = 1,\n\tGrowsOnlyWhenTypingBefore = 2,\n\tGrowsOnlyWhenTypingAfter = 3\n}\n\nexport enum ScrollType {\n\tSmooth = 0,\n\tImmediate = 1\n}\n\n/**\n * Describes the reason the cursor has changed its position.\n */\nexport enum CursorChangeReason {\n\t/**\n\t * Unknown or not set.\n\t */\n\tNotSet = 0,\n\t/**\n\t * A `model.setValue()` was called.\n\t */\n\tContentFlush = 1,\n\t/**\n\t * The `model` has been changed outside of this cursor and the cursor recovers its position from associated markers.\n\t */\n\tRecoverFromMarkers = 2,\n\t/**\n\t * There was an explicit user gesture.\n\t */\n\tExplicit = 3,\n\t/**\n\t * There was a Paste.\n\t */\n\tPaste = 4,\n\t/**\n\t * There was an Undo.\n\t */\n\tUndo = 5,\n\t/**\n\t * There was a Redo.\n\t */\n\tRedo = 6\n}\n\nexport enum RenderMinimap {\n\tNone = 0,\n\tSmall = 1,\n\tLarge = 2,\n\tSmallBlocks = 3,\n\tLargeBlocks = 4\n}\n\n/**\n * Describes how to indent wrapped lines.\n */\nexport enum WrappingIndent {\n\t/**\n\t * No indentation => wrapped lines begin at column 1.\n\t */\n\tNone = 0,\n\t/**\n\t * Same => wrapped lines get the same indentation as the parent.\n\t */\n\tSame = 1,\n\t/**\n\t * Indent => wrapped lines get +1 indentation toward the parent.\n\t */\n\tIndent = 2,\n\t/**\n\t * DeepIndent => wrapped lines get +2 indentation toward the parent.\n\t */\n\tDeepIndent = 3\n}\n\n/**\n * The kind of animation in which the editor's cursor should be rendered.\n */\nexport enum TextEditorCursorBlinkingStyle {\n\t/**\n\t * Hidden\n\t */\n\tHidden = 0,\n\t/**\n\t * Blinking\n\t */\n\tBlink = 1,\n\t/**\n\t * Blinking with smooth fading\n\t */\n\tSmooth = 2,\n\t/**\n\t * Blinking with prolonged filled state and smooth fading\n\t */\n\tPhase = 3,\n\t/**\n\t * Expand collapse animation on the y axis\n\t */\n\tExpand = 4,\n\t/**\n\t * No-Blinking\n\t */\n\tSolid = 5\n}\n\n/**\n * The style in which the editor's cursor should be rendered.\n */\nexport enum TextEditorCursorStyle {\n\t/**\n\t * As a vertical line (sitting between two characters).\n\t */\n\tLine = 1,\n\t/**\n\t * As a block (sitting on top of a character).\n\t */\n\tBlock = 2,\n\t/**\n\t * As a horizontal line (sitting under a character).\n\t */\n\tUnderline = 3,\n\t/**\n\t * As a thin vertical line (sitting between two characters).\n\t */\n\tLineThin = 4,\n\t/**\n\t * As an outlined block (sitting on top of a character).\n\t */\n\tBlockOutline = 5,\n\t/**\n\t * As a thin horizontal line (sitting under a character).\n\t */\n\tUnderlineThin = 6\n}\n\nexport enum RenderLineNumbersType {\n\tOff = 0,\n\tOn = 1,\n\tRelative = 2,\n\tInterval = 3,\n\tCustom = 4\n}\n\n/**\n * A positioning preference for rendering content widgets.\n */\nexport enum ContentWidgetPositionPreference {\n\t/**\n\t * Place the content widget exactly at a position\n\t */\n\tEXACT = 0,\n\t/**\n\t * Place the content widget above a position\n\t */\n\tABOVE = 1,\n\t/**\n\t * Place the content widget below a position\n\t */\n\tBELOW = 2\n}\n\n/**\n * A positioning preference for rendering overlay widgets.\n */\nexport enum OverlayWidgetPositionPreference {\n\t/**\n\t * Position the overlay widget in the top right corner\n\t */\n\tTOP_RIGHT_CORNER = 0,\n\t/**\n\t * Position the overlay widget in the bottom right corner\n\t */\n\tBOTTOM_RIGHT_CORNER = 1,\n\t/**\n\t * Position the overlay widget in the top center\n\t */\n\tTOP_CENTER = 2\n}\n\n/**\n * Type of hit element with the mouse in the editor.\n */\nexport enum MouseTargetType {\n\t/**\n\t * Mouse is on top of an unknown element.\n\t */\n\tUNKNOWN = 0,\n\t/**\n\t * Mouse is on top of the textarea used for input.\n\t */\n\tTEXTAREA = 1,\n\t/**\n\t * Mouse is on top of the glyph margin\n\t */\n\tGUTTER_GLYPH_MARGIN = 2,\n\t/**\n\t * Mouse is on top of the line numbers\n\t */\n\tGUTTER_LINE_NUMBERS = 3,\n\t/**\n\t * Mouse is on top of the line decorations\n\t */\n\tGUTTER_LINE_DECORATIONS = 4,\n\t/**\n\t * Mouse is on top of the whitespace left in the gutter by a view zone.\n\t */\n\tGUTTER_VIEW_ZONE = 5,\n\t/**\n\t * Mouse is on top of text in the content.\n\t */\n\tCONTENT_TEXT = 6,\n\t/**\n\t * Mouse is on top of empty space in the content (e.g. after line text or below last line)\n\t */\n\tCONTENT_EMPTY = 7,\n\t/**\n\t * Mouse is on top of a view zone in the content.\n\t */\n\tCONTENT_VIEW_ZONE = 8,\n\t/**\n\t * Mouse is on top of a content widget.\n\t */\n\tCONTENT_WIDGET = 9,\n\t/**\n\t * Mouse is on top of the decorations overview ruler.\n\t */\n\tOVERVIEW_RULER = 10,\n\t/**\n\t * Mouse is on top of a scrollbar.\n\t */\n\tSCROLLBAR = 11,\n\t/**\n\t * Mouse is on top of an overlay widget.\n\t */\n\tOVERLAY_WIDGET = 12,\n\t/**\n\t * Mouse is outside of the editor.\n\t */\n\tOUTSIDE_EDITOR = 13\n}\n\n/**\n * Describes what to do with the indentation when pressing Enter.\n */\nexport enum IndentAction {\n\t/**\n\t * Insert new line and copy the previous line's indentation.\n\t */\n\tNone = 0,\n\t/**\n\t * Insert new line and indent once (relative to the previous line's indentation).\n\t */\n\tIndent = 1,\n\t/**\n\t * Insert two new lines:\n\t *  - the first one indented which will hold the cursor\n\t *  - the second one at the same indentation level\n\t */\n\tIndentOutdent = 2,\n\t/**\n\t * Insert new line and outdent once (relative to the previous line's indentation).\n\t */\n\tOutdent = 3\n}\n\nexport enum CompletionItemKind {\n\tMethod = 0,\n\tFunction = 1,\n\tConstructor = 2,\n\tField = 3,\n\tVariable = 4,\n\tClass = 5,\n\tStruct = 6,\n\tInterface = 7,\n\tModule = 8,\n\tProperty = 9,\n\tEvent = 10,\n\tOperator = 11,\n\tUnit = 12,\n\tValue = 13,\n\tConstant = 14,\n\tEnum = 15,\n\tEnumMember = 16,\n\tKeyword = 17,\n\tText = 18,\n\tColor = 19,\n\tFile = 20,\n\tReference = 21,\n\tCustomcolor = 22,\n\tFolder = 23,\n\tTypeParameter = 24,\n\tSnippet = 25\n}\n\nexport enum CompletionItemInsertTextRule {\n\t/**\n\t * Adjust whitespace/indentation of multiline insert texts to\n\t * match the current line indentation.\n\t */\n\tKeepWhitespace = 1,\n\t/**\n\t * `insertText` is a snippet.\n\t */\n\tInsertAsSnippet = 4\n}\n\n/**\n * How a suggest provider was triggered.\n */\nexport enum CompletionTriggerKind {\n\tInvoke = 0,\n\tTriggerCharacter = 1,\n\tTriggerForIncompleteCompletions = 2\n}\n\nexport enum SignatureHelpTriggerKind {\n\tInvoke = 1,\n\tTriggerCharacter = 2,\n\tContentChange = 3\n}\n\n/**\n * A document highlight kind.\n */\nexport enum DocumentHighlightKind {\n\t/**\n\t * A textual occurrence.\n\t */\n\tText = 0,\n\t/**\n\t * Read-access of a symbol, like reading a variable.\n\t */\n\tRead = 1,\n\t/**\n\t * Write-access of a symbol, like writing to a variable.\n\t */\n\tWrite = 2\n}\n\n/**\n * A symbol kind.\n */\nexport enum SymbolKind {\n\tFile = 0,\n\tModule = 1,\n\tNamespace = 2,\n\tPackage = 3,\n\tClass = 4,\n\tMethod = 5,\n\tProperty = 6,\n\tField = 7,\n\tConstructor = 8,\n\tEnum = 9,\n\tInterface = 10,\n\tFunction = 11,\n\tVariable = 12,\n\tConstant = 13,\n\tString = 14,\n\tNumber = 15,\n\tBoolean = 16,\n\tArray = 17,\n\tObject = 18,\n\tKey = 19,\n\tNull = 20,\n\tEnumMember = 21,\n\tStruct = 22,\n\tEvent = 23,\n\tOperator = 24,\n\tTypeParameter = 25\n}","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport 'vs/editor/common/standalone/promise-polyfill/polyfill';\nimport { CancellationTokenSource } from 'vs/base/common/cancellation';\nimport { Emitter } from 'vs/base/common/event';\nimport { KeyChord, KeyMod as ConstKeyMod } from 'vs/base/common/keyCodes';\nimport { URI } from 'vs/base/common/uri';\nimport { Position } from 'vs/editor/common/core/position';\nimport { Range } from 'vs/editor/common/core/range';\nimport { Selection } from 'vs/editor/common/core/selection';\nimport { Token } from 'vs/editor/common/core/token';\nimport * as standaloneEnums from 'vs/editor/common/standalone/standaloneEnums';\n\nexport class KeyMod {\n\tpublic static readonly CtrlCmd: number = ConstKeyMod.CtrlCmd;\n\tpublic static readonly Shift: number = ConstKeyMod.Shift;\n\tpublic static readonly Alt: number = ConstKeyMod.Alt;\n\tpublic static readonly WinCtrl: number = ConstKeyMod.WinCtrl;\n\n\tpublic static chord(firstPart: number, secondPart: number): number {\n\t\treturn KeyChord(firstPart, secondPart);\n\t}\n}\n\nexport function createMonacoBaseAPI(): typeof monaco {\n\treturn {\n\t\teditor: undefined!, // undefined override expected here\n\t\tlanguages: undefined!, // undefined override expected here\n\t\tCancellationTokenSource: CancellationTokenSource,\n\t\tEmitter: Emitter,\n\t\tKeyCode: standaloneEnums.KeyCode,\n\t\tKeyMod: KeyMod,\n\t\tPosition: Position,\n\t\tRange: Range,\n\t\tSelection: <any>Selection,\n\t\tSelectionDirection: standaloneEnums.SelectionDirection,\n\t\tMarkerSeverity: standaloneEnums.MarkerSeverity,\n\t\tMarkerTag: standaloneEnums.MarkerTag,\n\t\tUri: <any>URI,\n\t\tToken: Token\n\t};\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { toUint32 } from 'vs/editor/common/core/uint';\n\nexport class PrefixSumIndexOfResult {\n\t_prefixSumIndexOfResultBrand: void;\n\n\tindex: number;\n\tremainder: number;\n\n\tconstructor(index: number, remainder: number) {\n\t\tthis.index = index;\n\t\tthis.remainder = remainder;\n\t}\n}\n\nexport class PrefixSumComputer {\n\n\t/**\n\t * values[i] is the value at index i\n\t */\n\tprivate values: Uint32Array;\n\n\t/**\n\t * prefixSum[i] = SUM(heights[j]), 0 <= j <= i\n\t */\n\tprivate prefixSum: Uint32Array;\n\n\t/**\n\t * prefixSum[i], 0 <= i <= prefixSumValidIndex can be trusted\n\t */\n\tprivate readonly prefixSumValidIndex: Int32Array;\n\n\tconstructor(values: Uint32Array) {\n\t\tthis.values = values;\n\t\tthis.prefixSum = new Uint32Array(values.length);\n\t\tthis.prefixSumValidIndex = new Int32Array(1);\n\t\tthis.prefixSumValidIndex[0] = -1;\n\t}\n\n\tpublic getCount(): number {\n\t\treturn this.values.length;\n\t}\n\n\tpublic insertValues(insertIndex: number, insertValues: Uint32Array): boolean {\n\t\tinsertIndex = toUint32(insertIndex);\n\t\tconst oldValues = this.values;\n\t\tconst oldPrefixSum = this.prefixSum;\n\t\tconst insertValuesLen = insertValues.length;\n\n\t\tif (insertValuesLen === 0) {\n\t\t\treturn false;\n\t\t}\n\n\t\tthis.values = new Uint32Array(oldValues.length + insertValuesLen);\n\t\tthis.values.set(oldValues.subarray(0, insertIndex), 0);\n\t\tthis.values.set(oldValues.subarray(insertIndex), insertIndex + insertValuesLen);\n\t\tthis.values.set(insertValues, insertIndex);\n\n\t\tif (insertIndex - 1 < this.prefixSumValidIndex[0]) {\n\t\t\tthis.prefixSumValidIndex[0] = insertIndex - 1;\n\t\t}\n\n\t\tthis.prefixSum = new Uint32Array(this.values.length);\n\t\tif (this.prefixSumValidIndex[0] >= 0) {\n\t\t\tthis.prefixSum.set(oldPrefixSum.subarray(0, this.prefixSumValidIndex[0] + 1));\n\t\t}\n\t\treturn true;\n\t}\n\n\tpublic changeValue(index: number, value: number): boolean {\n\t\tindex = toUint32(index);\n\t\tvalue = toUint32(value);\n\n\t\tif (this.values[index] === value) {\n\t\t\treturn false;\n\t\t}\n\t\tthis.values[index] = value;\n\t\tif (index - 1 < this.prefixSumValidIndex[0]) {\n\t\t\tthis.prefixSumValidIndex[0] = index - 1;\n\t\t}\n\t\treturn true;\n\t}\n\n\tpublic removeValues(startIndex: number, cnt: number): boolean {\n\t\tstartIndex = toUint32(startIndex);\n\t\tcnt = toUint32(cnt);\n\n\t\tconst oldValues = this.values;\n\t\tconst oldPrefixSum = this.prefixSum;\n\n\t\tif (startIndex >= oldValues.length) {\n\t\t\treturn false;\n\t\t}\n\n\t\tlet maxCnt = oldValues.length - startIndex;\n\t\tif (cnt >= maxCnt) {\n\t\t\tcnt = maxCnt;\n\t\t}\n\n\t\tif (cnt === 0) {\n\t\t\treturn false;\n\t\t}\n\n\t\tthis.values = new Uint32Array(oldValues.length - cnt);\n\t\tthis.values.set(oldValues.subarray(0, startIndex), 0);\n\t\tthis.values.set(oldValues.subarray(startIndex + cnt), startIndex);\n\n\t\tthis.prefixSum = new Uint32Array(this.values.length);\n\t\tif (startIndex - 1 < this.prefixSumValidIndex[0]) {\n\t\t\tthis.prefixSumValidIndex[0] = startIndex - 1;\n\t\t}\n\t\tif (this.prefixSumValidIndex[0] >= 0) {\n\t\t\tthis.prefixSum.set(oldPrefixSum.subarray(0, this.prefixSumValidIndex[0] + 1));\n\t\t}\n\t\treturn true;\n\t}\n\n\tpublic getTotalValue(): number {\n\t\tif (this.values.length === 0) {\n\t\t\treturn 0;\n\t\t}\n\t\treturn this._getAccumulatedValue(this.values.length - 1);\n\t}\n\n\tpublic getAccumulatedValue(index: number): number {\n\t\tif (index < 0) {\n\t\t\treturn 0;\n\t\t}\n\n\t\tindex = toUint32(index);\n\t\treturn this._getAccumulatedValue(index);\n\t}\n\n\tprivate _getAccumulatedValue(index: number): number {\n\t\tif (index <= this.prefixSumValidIndex[0]) {\n\t\t\treturn this.prefixSum[index];\n\t\t}\n\n\t\tlet startIndex = this.prefixSumValidIndex[0] + 1;\n\t\tif (startIndex === 0) {\n\t\t\tthis.prefixSum[0] = this.values[0];\n\t\t\tstartIndex++;\n\t\t}\n\n\t\tif (index >= this.values.length) {\n\t\t\tindex = this.values.length - 1;\n\t\t}\n\n\t\tfor (let i = startIndex; i <= index; i++) {\n\t\t\tthis.prefixSum[i] = this.prefixSum[i - 1] + this.values[i];\n\t\t}\n\t\tthis.prefixSumValidIndex[0] = Math.max(this.prefixSumValidIndex[0], index);\n\t\treturn this.prefixSum[index];\n\t}\n\n\tpublic getIndexOf(accumulatedValue: number): PrefixSumIndexOfResult {\n\t\taccumulatedValue = Math.floor(accumulatedValue); //@perf\n\n\t\t// Compute all sums (to get a fully valid prefixSum)\n\t\tthis.getTotalValue();\n\n\t\tlet low = 0;\n\t\tlet high = this.values.length - 1;\n\t\tlet mid = 0;\n\t\tlet midStop = 0;\n\t\tlet midStart = 0;\n\n\t\twhile (low <= high) {\n\t\t\tmid = low + ((high - low) / 2) | 0;\n\n\t\t\tmidStop = this.prefixSum[mid];\n\t\t\tmidStart = midStop - this.values[mid];\n\n\t\t\tif (accumulatedValue < midStart) {\n\t\t\t\thigh = mid - 1;\n\t\t\t} else if (accumulatedValue >= midStop) {\n\t\t\t\tlow = mid + 1;\n\t\t\t} else {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\treturn new PrefixSumIndexOfResult(mid, accumulatedValue - midStart);\n\t}\n}\n\nexport class PrefixSumComputerWithCache {\n\n\tprivate readonly _actual: PrefixSumComputer;\n\tprivate _cacheAccumulatedValueStart: number = 0;\n\tprivate _cache: PrefixSumIndexOfResult[] | null = null;\n\n\tconstructor(values: Uint32Array) {\n\t\tthis._actual = new PrefixSumComputer(values);\n\t\tthis._bustCache();\n\t}\n\n\tprivate _bustCache(): void {\n\t\tthis._cacheAccumulatedValueStart = 0;\n\t\tthis._cache = null;\n\t}\n\n\tpublic insertValues(insertIndex: number, insertValues: Uint32Array): void {\n\t\tif (this._actual.insertValues(insertIndex, insertValues)) {\n\t\t\tthis._bustCache();\n\t\t}\n\t}\n\n\tpublic changeValue(index: number, value: number): void {\n\t\tif (this._actual.changeValue(index, value)) {\n\t\t\tthis._bustCache();\n\t\t}\n\t}\n\n\tpublic removeValues(startIndex: number, cnt: number): void {\n\t\tif (this._actual.removeValues(startIndex, cnt)) {\n\t\t\tthis._bustCache();\n\t\t}\n\t}\n\n\tpublic getTotalValue(): number {\n\t\treturn this._actual.getTotalValue();\n\t}\n\n\tpublic getAccumulatedValue(index: number): number {\n\t\treturn this._actual.getAccumulatedValue(index);\n\t}\n\n\tpublic getIndexOf(accumulatedValue: number): PrefixSumIndexOfResult {\n\t\taccumulatedValue = Math.floor(accumulatedValue); //@perf\n\n\t\tif (this._cache !== null) {\n\t\t\tlet cacheIndex = accumulatedValue - this._cacheAccumulatedValueStart;\n\t\t\tif (cacheIndex >= 0 && cacheIndex < this._cache.length) {\n\t\t\t\t// Cache hit!\n\t\t\t\treturn this._cache[cacheIndex];\n\t\t\t}\n\t\t}\n\n\t\t// Cache miss!\n\t\treturn this._actual.getIndexOf(accumulatedValue);\n\t}\n\n\t/**\n\t * Gives a hint that a lot of requests are about to come in for these accumulated values.\n\t */\n\tpublic warmUpCache(accumulatedValueStart: number, accumulatedValueEnd: number): void {\n\t\tlet newCache: PrefixSumIndexOfResult[] = [];\n\t\tfor (let accumulatedValue = accumulatedValueStart; accumulatedValue <= accumulatedValueEnd; accumulatedValue++) {\n\t\t\tnewCache[accumulatedValue - accumulatedValueStart] = this.getIndexOf(accumulatedValue);\n\t\t}\n\t\tthis._cache = newCache;\n\t\tthis._cacheAccumulatedValueStart = accumulatedValueStart;\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { URI } from 'vs/base/common/uri';\nimport { Position } from 'vs/editor/common/core/position';\nimport { IRange } from 'vs/editor/common/core/range';\nimport { IModelContentChange } from 'vs/editor/common/model/textModelEvents';\nimport { PrefixSumComputer } from 'vs/editor/common/viewModel/prefixSumComputer';\n\nexport interface IModelChangedEvent {\n\t/**\n\t * The actual changes.\n\t */\n\treadonly changes: IModelContentChange[];\n\t/**\n\t * The (new) end-of-line character.\n\t */\n\treadonly eol: string;\n\t/**\n\t * The new version id the model has transitioned to.\n\t */\n\treadonly versionId: number;\n}\n\nexport class MirrorTextModel {\n\n\tprotected _uri: URI;\n\tprotected _lines: string[];\n\tprotected _eol: string;\n\tprotected _versionId: number;\n\tprotected _lineStarts: PrefixSumComputer | null;\n\n\tconstructor(uri: URI, lines: string[], eol: string, versionId: number) {\n\t\tthis._uri = uri;\n\t\tthis._lines = lines;\n\t\tthis._eol = eol;\n\t\tthis._versionId = versionId;\n\t\tthis._lineStarts = null;\n\t}\n\n\tdispose(): void {\n\t\tthis._lines.length = 0;\n\t}\n\n\tgetText(): string {\n\t\treturn this._lines.join(this._eol);\n\t}\n\n\tonEvents(e: IModelChangedEvent): void {\n\t\tif (e.eol && e.eol !== this._eol) {\n\t\t\tthis._eol = e.eol;\n\t\t\tthis._lineStarts = null;\n\t\t}\n\n\t\t// Update my lines\n\t\tconst changes = e.changes;\n\t\tfor (const change of changes) {\n\t\t\tthis._acceptDeleteRange(change.range);\n\t\t\tthis._acceptInsertText(new Position(change.range.startLineNumber, change.range.startColumn), change.text);\n\t\t}\n\n\t\tthis._versionId = e.versionId;\n\t}\n\n\tprotected _ensureLineStarts(): void {\n\t\tif (!this._lineStarts) {\n\t\t\tconst eolLength = this._eol.length;\n\t\t\tconst linesLength = this._lines.length;\n\t\t\tconst lineStartValues = new Uint32Array(linesLength);\n\t\t\tfor (let i = 0; i < linesLength; i++) {\n\t\t\t\tlineStartValues[i] = this._lines[i].length + eolLength;\n\t\t\t}\n\t\t\tthis._lineStarts = new PrefixSumComputer(lineStartValues);\n\t\t}\n\t}\n\n\t/**\n\t * All changes to a line's text go through this method\n\t */\n\tprivate _setLineText(lineIndex: number, newValue: string): void {\n\t\tthis._lines[lineIndex] = newValue;\n\t\tif (this._lineStarts) {\n\t\t\t// update prefix sum\n\t\t\tthis._lineStarts.changeValue(lineIndex, this._lines[lineIndex].length + this._eol.length);\n\t\t}\n\t}\n\n\tprivate _acceptDeleteRange(range: IRange): void {\n\n\t\tif (range.startLineNumber === range.endLineNumber) {\n\t\t\tif (range.startColumn === range.endColumn) {\n\t\t\t\t// Nothing to delete\n\t\t\t\treturn;\n\t\t\t}\n\t\t\t// Delete text on the affected line\n\t\t\tthis._setLineText(range.startLineNumber - 1,\n\t\t\t\tthis._lines[range.startLineNumber - 1].substring(0, range.startColumn - 1)\n\t\t\t\t+ this._lines[range.startLineNumber - 1].substring(range.endColumn - 1)\n\t\t\t);\n\t\t\treturn;\n\t\t}\n\n\t\t// Take remaining text on last line and append it to remaining text on first line\n\t\tthis._setLineText(range.startLineNumber - 1,\n\t\t\tthis._lines[range.startLineNumber - 1].substring(0, range.startColumn - 1)\n\t\t\t+ this._lines[range.endLineNumber - 1].substring(range.endColumn - 1)\n\t\t);\n\n\t\t// Delete middle lines\n\t\tthis._lines.splice(range.startLineNumber, range.endLineNumber - range.startLineNumber);\n\t\tif (this._lineStarts) {\n\t\t\t// update prefix sum\n\t\t\tthis._lineStarts.removeValues(range.startLineNumber, range.endLineNumber - range.startLineNumber);\n\t\t}\n\t}\n\n\tprivate _acceptInsertText(position: Position, insertText: string): void {\n\t\tif (insertText.length === 0) {\n\t\t\t// Nothing to insert\n\t\t\treturn;\n\t\t}\n\t\tlet insertLines = insertText.split(/\\r\\n|\\r|\\n/);\n\t\tif (insertLines.length === 1) {\n\t\t\t// Inserting text on one line\n\t\t\tthis._setLineText(position.lineNumber - 1,\n\t\t\t\tthis._lines[position.lineNumber - 1].substring(0, position.column - 1)\n\t\t\t\t+ insertLines[0]\n\t\t\t\t+ this._lines[position.lineNumber - 1].substring(position.column - 1)\n\t\t\t);\n\t\t\treturn;\n\t\t}\n\n\t\t// Append overflowing text from first line to the end of text to insert\n\t\tinsertLines[insertLines.length - 1] += this._lines[position.lineNumber - 1].substring(position.column - 1);\n\n\t\t// Delete overflowing text from first line and insert text on first line\n\t\tthis._setLineText(position.lineNumber - 1,\n\t\t\tthis._lines[position.lineNumber - 1].substring(0, position.column - 1)\n\t\t\t+ insertLines[0]\n\t\t);\n\n\t\t// Insert new lines & store lengths\n\t\tlet newLengths = new Uint32Array(insertLines.length - 1);\n\t\tfor (let i = 1; i < insertLines.length; i++) {\n\t\t\tthis._lines.splice(position.lineNumber + i - 1, 0, insertLines[i]);\n\t\t\tnewLengths[i - 1] = insertLines[i].length + this._eol.length;\n\t\t}\n\n\t\tif (this._lineStarts) {\n\t\t\t// update prefix sum\n\t\t\tthis._lineStarts.insertValues(position.lineNumber, newLengths);\n\t\t}\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { mergeSort } from 'vs/base/common/arrays';\nimport { stringDiff } from 'vs/base/common/diff/diff';\nimport { FIN, Iterator, IteratorResult } from 'vs/base/common/iterator';\nimport { IDisposable } from 'vs/base/common/lifecycle';\nimport { globals } from 'vs/base/common/platform';\nimport { URI } from 'vs/base/common/uri';\nimport { IRequestHandler } from 'vs/base/common/worker/simpleWorker';\nimport { IPosition, Position } from 'vs/editor/common/core/position';\nimport { IRange, Range } from 'vs/editor/common/core/range';\nimport { DiffComputer } from 'vs/editor/common/diff/diffComputer';\nimport { EndOfLineSequence, IWordAtPosition } from 'vs/editor/common/model';\nimport { IModelChangedEvent, MirrorTextModel as BaseMirrorModel } from 'vs/editor/common/model/mirrorTextModel';\nimport { ensureValidWordDefinition, getWordAtText } from 'vs/editor/common/model/wordHelper';\nimport { CompletionItem, CompletionItemKind, CompletionList, IInplaceReplaceSupportResult, ILink, TextEdit } from 'vs/editor/common/modes';\nimport { ILinkComputerTarget, computeLinks } from 'vs/editor/common/modes/linkComputer';\nimport { BasicInplaceReplace } from 'vs/editor/common/modes/supports/inplaceReplaceSupport';\nimport { IDiffComputationResult } from 'vs/editor/common/services/editorWorkerService';\nimport { createMonacoBaseAPI } from 'vs/editor/common/standalone/standaloneBase';\nimport { getAllPropertyNames } from 'vs/base/common/types';\n\nexport interface IMirrorModel {\n\treadonly uri: URI;\n\treadonly version: number;\n\tgetValue(): string;\n}\n\nexport interface IWorkerContext {\n\t/**\n\t * Get all available mirror models in this worker.\n\t */\n\tgetMirrorModels(): IMirrorModel[];\n}\n\n/**\n * @internal\n */\nexport interface IRawModelData {\n\turl: string;\n\tversionId: number;\n\tlines: string[];\n\tEOL: string;\n}\n\n/**\n * @internal\n */\nexport interface ICommonModel extends ILinkComputerTarget, IMirrorModel {\n\teol: string;\n\n\tgetLinesContent(): string[];\n\tgetLineCount(): number;\n\tgetLineContent(lineNumber: number): string;\n\tgetLineWords(lineNumber: number, wordDefinition: RegExp): IWordAtPosition[];\n\tcreateWordIterator(wordDefinition: RegExp): Iterator<string>;\n\tgetWordUntilPosition(position: IPosition, wordDefinition: RegExp): IWordAtPosition;\n\tgetValueInRange(range: IRange): string;\n\tgetWordAtPosition(position: IPosition, wordDefinition: RegExp): Range | null;\n\toffsetAt(position: IPosition): number;\n\tpositionAt(offset: number): IPosition;\n}\n\n/**\n * Range of a word inside a model.\n * @internal\n */\ninterface IWordRange {\n\t/**\n\t * The index where the word starts.\n\t */\n\treadonly start: number;\n\t/**\n\t * The index where the word ends.\n\t */\n\treadonly end: number;\n}\n\n/**\n * @internal\n */\nclass MirrorModel extends BaseMirrorModel implements ICommonModel {\n\n\tpublic get uri(): URI {\n\t\treturn this._uri;\n\t}\n\n\tpublic get version(): number {\n\t\treturn this._versionId;\n\t}\n\n\tpublic get eol(): string {\n\t\treturn this._eol;\n\t}\n\n\tpublic getValue(): string {\n\t\treturn this.getText();\n\t}\n\n\tpublic getLinesContent(): string[] {\n\t\treturn this._lines.slice(0);\n\t}\n\n\tpublic getLineCount(): number {\n\t\treturn this._lines.length;\n\t}\n\n\tpublic getLineContent(lineNumber: number): string {\n\t\treturn this._lines[lineNumber - 1];\n\t}\n\n\tpublic getWordAtPosition(position: IPosition, wordDefinition: RegExp): Range | null {\n\n\t\tlet wordAtText = getWordAtText(\n\t\t\tposition.column,\n\t\t\tensureValidWordDefinition(wordDefinition),\n\t\t\tthis._lines[position.lineNumber - 1],\n\t\t\t0\n\t\t);\n\n\t\tif (wordAtText) {\n\t\t\treturn new Range(position.lineNumber, wordAtText.startColumn, position.lineNumber, wordAtText.endColumn);\n\t\t}\n\n\t\treturn null;\n\t}\n\n\tpublic getWordUntilPosition(position: IPosition, wordDefinition: RegExp): IWordAtPosition {\n\t\tconst wordAtPosition = this.getWordAtPosition(position, wordDefinition);\n\t\tif (!wordAtPosition) {\n\t\t\treturn {\n\t\t\t\tword: '',\n\t\t\t\tstartColumn: position.column,\n\t\t\t\tendColumn: position.column\n\t\t\t};\n\t\t}\n\t\treturn {\n\t\t\tword: this._lines[position.lineNumber - 1].substring(wordAtPosition.startColumn - 1, position.column - 1),\n\t\t\tstartColumn: wordAtPosition.startColumn,\n\t\t\tendColumn: position.column\n\t\t};\n\t}\n\n\tpublic createWordIterator(wordDefinition: RegExp): Iterator<string> {\n\t\tlet obj: { done: false; value: string; };\n\t\tlet lineNumber = 0;\n\t\tlet lineText: string;\n\t\tlet wordRangesIdx = 0;\n\t\tlet wordRanges: IWordRange[] = [];\n\t\tlet next = (): IteratorResult<string> => {\n\n\t\t\tif (wordRangesIdx < wordRanges.length) {\n\t\t\t\tconst value = lineText.substring(wordRanges[wordRangesIdx].start, wordRanges[wordRangesIdx].end);\n\t\t\t\twordRangesIdx += 1;\n\t\t\t\tif (!obj) {\n\t\t\t\t\tobj = { done: false, value: value };\n\t\t\t\t} else {\n\t\t\t\t\tobj.value = value;\n\t\t\t\t}\n\t\t\t\treturn obj;\n\n\t\t\t} else if (lineNumber >= this._lines.length) {\n\t\t\t\treturn FIN;\n\n\t\t\t} else {\n\t\t\t\tlineText = this._lines[lineNumber];\n\t\t\t\twordRanges = this._wordenize(lineText, wordDefinition);\n\t\t\t\twordRangesIdx = 0;\n\t\t\t\tlineNumber += 1;\n\t\t\t\treturn next();\n\t\t\t}\n\t\t};\n\t\treturn { next };\n\t}\n\n\tpublic getLineWords(lineNumber: number, wordDefinition: RegExp): IWordAtPosition[] {\n\t\tlet content = this._lines[lineNumber - 1];\n\t\tlet ranges = this._wordenize(content, wordDefinition);\n\t\tlet words: IWordAtPosition[] = [];\n\t\tfor (const range of ranges) {\n\t\t\twords.push({\n\t\t\t\tword: content.substring(range.start, range.end),\n\t\t\t\tstartColumn: range.start + 1,\n\t\t\t\tendColumn: range.end + 1\n\t\t\t});\n\t\t}\n\t\treturn words;\n\t}\n\n\tprivate _wordenize(content: string, wordDefinition: RegExp): IWordRange[] {\n\t\tconst result: IWordRange[] = [];\n\t\tlet match: RegExpExecArray | null;\n\n\t\twordDefinition.lastIndex = 0; // reset lastIndex just to be sure\n\n\t\twhile (match = wordDefinition.exec(content)) {\n\t\t\tif (match[0].length === 0) {\n\t\t\t\t// it did match the empty string\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tresult.push({ start: match.index, end: match.index + match[0].length });\n\t\t}\n\t\treturn result;\n\t}\n\n\tpublic getValueInRange(range: IRange): string {\n\t\trange = this._validateRange(range);\n\n\t\tif (range.startLineNumber === range.endLineNumber) {\n\t\t\treturn this._lines[range.startLineNumber - 1].substring(range.startColumn - 1, range.endColumn - 1);\n\t\t}\n\n\t\tlet lineEnding = this._eol;\n\t\tlet startLineIndex = range.startLineNumber - 1;\n\t\tlet endLineIndex = range.endLineNumber - 1;\n\t\tlet resultLines: string[] = [];\n\n\t\tresultLines.push(this._lines[startLineIndex].substring(range.startColumn - 1));\n\t\tfor (let i = startLineIndex + 1; i < endLineIndex; i++) {\n\t\t\tresultLines.push(this._lines[i]);\n\t\t}\n\t\tresultLines.push(this._lines[endLineIndex].substring(0, range.endColumn - 1));\n\n\t\treturn resultLines.join(lineEnding);\n\t}\n\n\tpublic offsetAt(position: IPosition): number {\n\t\tposition = this._validatePosition(position);\n\t\tthis._ensureLineStarts();\n\t\treturn this._lineStarts!.getAccumulatedValue(position.lineNumber - 2) + (position.column - 1);\n\t}\n\n\tpublic positionAt(offset: number): IPosition {\n\t\toffset = Math.floor(offset);\n\t\toffset = Math.max(0, offset);\n\n\t\tthis._ensureLineStarts();\n\t\tlet out = this._lineStarts!.getIndexOf(offset);\n\t\tlet lineLength = this._lines[out.index].length;\n\n\t\t// Ensure we return a valid position\n\t\treturn {\n\t\t\tlineNumber: 1 + out.index,\n\t\t\tcolumn: 1 + Math.min(out.remainder, lineLength)\n\t\t};\n\t}\n\n\tprivate _validateRange(range: IRange): IRange {\n\n\t\tconst start = this._validatePosition({ lineNumber: range.startLineNumber, column: range.startColumn });\n\t\tconst end = this._validatePosition({ lineNumber: range.endLineNumber, column: range.endColumn });\n\n\t\tif (start.lineNumber !== range.startLineNumber\n\t\t\t|| start.column !== range.startColumn\n\t\t\t|| end.lineNumber !== range.endLineNumber\n\t\t\t|| end.column !== range.endColumn) {\n\n\t\t\treturn {\n\t\t\t\tstartLineNumber: start.lineNumber,\n\t\t\t\tstartColumn: start.column,\n\t\t\t\tendLineNumber: end.lineNumber,\n\t\t\t\tendColumn: end.column\n\t\t\t};\n\t\t}\n\n\t\treturn range;\n\t}\n\n\tprivate _validatePosition(position: IPosition): IPosition {\n\t\tif (!Position.isIPosition(position)) {\n\t\t\tthrow new Error('bad position');\n\t\t}\n\t\tlet { lineNumber, column } = position;\n\t\tlet hasChanged = false;\n\n\t\tif (lineNumber < 1) {\n\t\t\tlineNumber = 1;\n\t\t\tcolumn = 1;\n\t\t\thasChanged = true;\n\n\t\t} else if (lineNumber > this._lines.length) {\n\t\t\tlineNumber = this._lines.length;\n\t\t\tcolumn = this._lines[lineNumber - 1].length + 1;\n\t\t\thasChanged = true;\n\n\t\t} else {\n\t\t\tlet maxCharacter = this._lines[lineNumber - 1].length + 1;\n\t\t\tif (column < 1) {\n\t\t\t\tcolumn = 1;\n\t\t\t\thasChanged = true;\n\t\t\t}\n\t\t\telse if (column > maxCharacter) {\n\t\t\t\tcolumn = maxCharacter;\n\t\t\t\thasChanged = true;\n\t\t\t}\n\t\t}\n\n\t\tif (!hasChanged) {\n\t\t\treturn position;\n\t\t} else {\n\t\t\treturn { lineNumber, column };\n\t\t}\n\t}\n}\n\n/**\n * @internal\n */\nexport interface IForeignModuleFactory {\n\t(ctx: IWorkerContext, createData: any): any;\n}\n\ndeclare var require: any;\n\n/**\n * @internal\n */\nexport abstract class BaseEditorSimpleWorker {\n\tprivate readonly _foreignModuleFactory: IForeignModuleFactory | null;\n\tprivate _foreignModule: any;\n\n\tconstructor(foreignModuleFactory: IForeignModuleFactory | null) {\n\t\tthis._foreignModuleFactory = foreignModuleFactory;\n\t\tthis._foreignModule = null;\n\t}\n\n\tprotected abstract _getModel(uri: string): ICommonModel;\n\tprotected abstract _getModels(): ICommonModel[];\n\n\t// ---- BEGIN diff --------------------------------------------------------------------------\n\n\tpublic computeDiff(originalUrl: string, modifiedUrl: string, ignoreTrimWhitespace: boolean): Promise<IDiffComputationResult | null> {\n\t\tconst original = this._getModel(originalUrl);\n\t\tconst modified = this._getModel(modifiedUrl);\n\t\tif (!original || !modified) {\n\t\t\treturn Promise.resolve(null);\n\t\t}\n\n\t\tconst originalLines = original.getLinesContent();\n\t\tconst modifiedLines = modified.getLinesContent();\n\t\tconst diffComputer = new DiffComputer(originalLines, modifiedLines, {\n\t\t\tshouldComputeCharChanges: true,\n\t\t\tshouldPostProcessCharChanges: true,\n\t\t\tshouldIgnoreTrimWhitespace: ignoreTrimWhitespace,\n\t\t\tshouldMakePrettyDiff: true\n\t\t});\n\n\t\tconst changes = diffComputer.computeDiff();\n\t\tlet identical = (changes.length > 0 ? false : this._modelsAreIdentical(original, modified));\n\t\treturn Promise.resolve({\n\t\t\tidentical: identical,\n\t\t\tchanges: changes\n\t\t});\n\t}\n\n\tprivate _modelsAreIdentical(original: ICommonModel, modified: ICommonModel): boolean {\n\t\tconst originalLineCount = original.getLineCount();\n\t\tconst modifiedLineCount = modified.getLineCount();\n\t\tif (originalLineCount !== modifiedLineCount) {\n\t\t\treturn false;\n\t\t}\n\t\tfor (let line = 1; line <= originalLineCount; line++) {\n\t\t\tconst originalLine = original.getLineContent(line);\n\t\t\tconst modifiedLine = modified.getLineContent(line);\n\t\t\tif (originalLine !== modifiedLine) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t\treturn true;\n\t}\n\n\t// ---- END diff --------------------------------------------------------------------------\n\n\n\t// ---- BEGIN minimal edits ---------------------------------------------------------------\n\n\tprivate static readonly _diffLimit = 100000;\n\n\tpublic computeMoreMinimalEdits(modelUrl: string, edits: TextEdit[]): Promise<TextEdit[]> {\n\t\tconst model = this._getModel(modelUrl);\n\t\tif (!model) {\n\t\t\treturn Promise.resolve(edits);\n\t\t}\n\n\t\tconst result: TextEdit[] = [];\n\t\tlet lastEol: EndOfLineSequence | undefined = undefined;\n\n\t\tedits = mergeSort(edits, (a, b) => {\n\t\t\tif (a.range && b.range) {\n\t\t\t\treturn Range.compareRangesUsingStarts(a.range, b.range);\n\t\t\t}\n\t\t\t// eol only changes should go to the end\n\t\t\tlet aRng = a.range ? 0 : 1;\n\t\t\tlet bRng = b.range ? 0 : 1;\n\t\t\treturn aRng - bRng;\n\t\t});\n\n\t\tfor (let { range, text, eol } of edits) {\n\n\t\t\tif (typeof eol === 'number') {\n\t\t\t\tlastEol = eol;\n\t\t\t}\n\n\t\t\tif (Range.isEmpty(range) && !text) {\n\t\t\t\t// empty change\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tconst original = model.getValueInRange(range);\n\t\t\ttext = text.replace(/\\r\\n|\\n|\\r/g, model.eol);\n\n\t\t\tif (original === text) {\n\t\t\t\t// noop\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\t// make sure diff won't take too long\n\t\t\tif (Math.max(text.length, original.length) > BaseEditorSimpleWorker._diffLimit) {\n\t\t\t\tresult.push({ range, text });\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\t// compute diff between original and edit.text\n\t\t\tconst changes = stringDiff(original, text, false);\n\t\t\tconst editOffset = model.offsetAt(Range.lift(range).getStartPosition());\n\n\t\t\tfor (const change of changes) {\n\t\t\t\tconst start = model.positionAt(editOffset + change.originalStart);\n\t\t\t\tconst end = model.positionAt(editOffset + change.originalStart + change.originalLength);\n\t\t\t\tconst newEdit: TextEdit = {\n\t\t\t\t\ttext: text.substr(change.modifiedStart, change.modifiedLength),\n\t\t\t\t\trange: { startLineNumber: start.lineNumber, startColumn: start.column, endLineNumber: end.lineNumber, endColumn: end.column }\n\t\t\t\t};\n\n\t\t\t\tif (model.getValueInRange(newEdit.range) !== newEdit.text) {\n\t\t\t\t\tresult.push(newEdit);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (typeof lastEol === 'number') {\n\t\t\tresult.push({ eol: lastEol, text: '', range: { startLineNumber: 0, startColumn: 0, endLineNumber: 0, endColumn: 0 } });\n\t\t}\n\n\t\treturn Promise.resolve(result);\n\t}\n\n\t// ---- END minimal edits ---------------------------------------------------------------\n\n\tpublic computeLinks(modelUrl: string): Promise<ILink[] | null> {\n\t\tlet model = this._getModel(modelUrl);\n\t\tif (!model) {\n\t\t\treturn Promise.resolve(null);\n\t\t}\n\n\t\treturn Promise.resolve(computeLinks(model));\n\t}\n\n\t// ---- BEGIN suggest --------------------------------------------------------------------------\n\n\tprivate static readonly _suggestionsLimit = 10000;\n\n\tpublic textualSuggest(modelUrl: string, position: IPosition, wordDef: string, wordDefFlags: string): Promise<CompletionList | null> {\n\t\tconst model = this._getModel(modelUrl);\n\t\tif (!model) {\n\t\t\treturn Promise.resolve(null);\n\t\t}\n\n\t\tconst seen: Record<string, boolean> = Object.create(null);\n\t\tconst suggestions: CompletionItem[] = [];\n\t\tconst wordDefRegExp = new RegExp(wordDef, wordDefFlags);\n\t\tconst wordUntil = model.getWordUntilPosition(position, wordDefRegExp);\n\n\t\tconst wordAt = model.getWordAtPosition(position, wordDefRegExp);\n\t\tif (wordAt) {\n\t\t\tseen[model.getValueInRange(wordAt)] = true;\n\t\t}\n\n\t\tfor (\n\t\t\tlet iter = model.createWordIterator(wordDefRegExp), e = iter.next();\n\t\t\t!e.done && suggestions.length <= BaseEditorSimpleWorker._suggestionsLimit;\n\t\t\te = iter.next()\n\t\t) {\n\t\t\tconst word = e.value;\n\t\t\tif (seen[word]) {\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tseen[word] = true;\n\t\t\tif (!isNaN(Number(word))) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tsuggestions.push({\n\t\t\t\tkind: CompletionItemKind.Text,\n\t\t\t\tlabel: word,\n\t\t\t\tinsertText: word,\n\t\t\t\trange: { startLineNumber: position.lineNumber, startColumn: wordUntil.startColumn, endLineNumber: position.lineNumber, endColumn: wordUntil.endColumn }\n\t\t\t});\n\t\t}\n\t\treturn Promise.resolve({ suggestions });\n\t}\n\n\n\t// ---- END suggest --------------------------------------------------------------------------\n\n\t//#region -- word ranges --\n\n\tcomputeWordRanges(modelUrl: string, range: IRange, wordDef: string, wordDefFlags: string): Promise<{ [word: string]: IRange[] }> {\n\t\tlet model = this._getModel(modelUrl);\n\t\tif (!model) {\n\t\t\treturn Promise.resolve(Object.create(null));\n\t\t}\n\t\tconst wordDefRegExp = new RegExp(wordDef, wordDefFlags);\n\t\tconst result: { [word: string]: IRange[] } = Object.create(null);\n\t\tfor (let line = range.startLineNumber; line < range.endLineNumber; line++) {\n\t\t\tlet words = model.getLineWords(line, wordDefRegExp);\n\t\t\tfor (const word of words) {\n\t\t\t\tif (!isNaN(Number(word.word))) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tlet array = result[word.word];\n\t\t\t\tif (!array) {\n\t\t\t\t\tarray = [];\n\t\t\t\t\tresult[word.word] = array;\n\t\t\t\t}\n\t\t\t\tarray.push({\n\t\t\t\t\tstartLineNumber: line,\n\t\t\t\t\tstartColumn: word.startColumn,\n\t\t\t\t\tendLineNumber: line,\n\t\t\t\t\tendColumn: word.endColumn\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t\treturn Promise.resolve(result);\n\t}\n\n\t//#endregion\n\n\tpublic navigateValueSet(modelUrl: string, range: IRange, up: boolean, wordDef: string, wordDefFlags: string): Promise<IInplaceReplaceSupportResult | null> {\n\t\tlet model = this._getModel(modelUrl);\n\t\tif (!model) {\n\t\t\treturn Promise.resolve(null);\n\t\t}\n\n\t\tlet wordDefRegExp = new RegExp(wordDef, wordDefFlags);\n\n\t\tif (range.startColumn === range.endColumn) {\n\t\t\trange = {\n\t\t\t\tstartLineNumber: range.startLineNumber,\n\t\t\t\tstartColumn: range.startColumn,\n\t\t\t\tendLineNumber: range.endLineNumber,\n\t\t\t\tendColumn: range.endColumn + 1\n\t\t\t};\n\t\t}\n\n\t\tlet selectionText = model.getValueInRange(range);\n\n\t\tlet wordRange = model.getWordAtPosition({ lineNumber: range.startLineNumber, column: range.startColumn }, wordDefRegExp);\n\t\tif (!wordRange) {\n\t\t\treturn Promise.resolve(null);\n\t\t}\n\t\tlet word = model.getValueInRange(wordRange);\n\t\tlet result = BasicInplaceReplace.INSTANCE.navigateValueSet(range, selectionText, wordRange, word, up);\n\t\treturn Promise.resolve(result);\n\t}\n\n\t// ---- BEGIN foreign module support --------------------------------------------------------------------------\n\n\tpublic loadForeignModule(moduleId: string, createData: any): Promise<string[]> {\n\t\tlet ctx: IWorkerContext = {\n\t\t\tgetMirrorModels: (): IMirrorModel[] => {\n\t\t\t\treturn this._getModels();\n\t\t\t}\n\t\t};\n\n\t\tif (this._foreignModuleFactory) {\n\t\t\tthis._foreignModule = this._foreignModuleFactory(ctx, createData);\n\t\t\t// static foreing module\n\t\t\tlet methods: string[] = [];\n\t\t\tfor (const prop of getAllPropertyNames(this._foreignModule)) {\n\t\t\t\tif (typeof this._foreignModule[prop] === 'function') {\n\t\t\t\t\tmethods.push(prop);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn Promise.resolve(methods);\n\t\t}\n\t\t// ESM-comment-begin\n\t\treturn new Promise<any>((resolve, reject) => {\n\t\t\trequire([moduleId], (foreignModule: { create: IForeignModuleFactory }) => {\n\t\t\t\tthis._foreignModule = foreignModule.create(ctx, createData);\n\n\t\t\t\tlet methods: string[] = [];\n\t\t\t\tfor (const prop of getAllPropertyNames(this._foreignModule)) {\n\t\t\t\t\tif (typeof this._foreignModule[prop] === 'function') {\n\t\t\t\t\t\tmethods.push(prop);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tresolve(methods);\n\n\t\t\t}, reject);\n\t\t});\n\t\t// ESM-comment-end\n\n\t\t// ESM-uncomment-begin\n\t\t// return Promise.reject(new Error(`Unexpected usage`));\n\t\t// ESM-uncomment-end\n\t}\n\n\t// foreign method request\n\tpublic fmr(method: string, args: any[]): Promise<any> {\n\t\tif (!this._foreignModule || typeof this._foreignModule[method] !== 'function') {\n\t\t\treturn Promise.reject(new Error('Missing requestHandler or method: ' + method));\n\t\t}\n\n\t\ttry {\n\t\t\treturn Promise.resolve(this._foreignModule[method].apply(this._foreignModule, args));\n\t\t} catch (e) {\n\t\t\treturn Promise.reject(e);\n\t\t}\n\t}\n\n\t// ---- END foreign module support --------------------------------------------------------------------------\n}\n\n/**\n * @internal\n */\nexport class EditorSimpleWorkerImpl extends BaseEditorSimpleWorker implements IRequestHandler, IDisposable {\n\t_requestHandlerBrand: any;\n\n\tprivate _models: { [uri: string]: MirrorModel; };\n\n\tconstructor(foreignModuleFactory: IForeignModuleFactory | null) {\n\t\tsuper(foreignModuleFactory);\n\t\tthis._models = Object.create(null);\n\t}\n\n\tpublic dispose(): void {\n\t\tthis._models = Object.create(null);\n\t}\n\n\tprotected _getModel(uri: string): ICommonModel {\n\t\treturn this._models[uri];\n\t}\n\n\tprotected _getModels(): ICommonModel[] {\n\t\tlet all: MirrorModel[] = [];\n\t\tObject.keys(this._models).forEach((key) => all.push(this._models[key]));\n\t\treturn all;\n\t}\n\n\tpublic acceptNewModel(data: IRawModelData): void {\n\t\tthis._models[data.url] = new MirrorModel(URI.parse(data.url), data.lines, data.EOL, data.versionId);\n\t}\n\n\tpublic acceptModelChanged(strURL: string, e: IModelChangedEvent): void {\n\t\tif (!this._models[strURL]) {\n\t\t\treturn;\n\t\t}\n\t\tlet model = this._models[strURL];\n\t\tmodel.onEvents(e);\n\t}\n\n\tpublic acceptRemovedModel(strURL: string): void {\n\t\tif (!this._models[strURL]) {\n\t\t\treturn;\n\t\t}\n\t\tdelete this._models[strURL];\n\t}\n}\n\n/**\n * Called on the worker side\n * @internal\n */\nexport function create(): IRequestHandler {\n\treturn new EditorSimpleWorkerImpl(null);\n}\n\n// This is only available in a Web Worker\ndeclare function importScripts(...urls: string[]): void;\n\nif (typeof importScripts === 'function') {\n\t// Running in a web worker\n\tglobals.monaco = createMonacoBaseAPI();\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\n(function () {\n\n\tlet MonacoEnvironment = (<any>self).MonacoEnvironment;\n\tlet monacoBaseUrl = MonacoEnvironment && MonacoEnvironment.baseUrl ? MonacoEnvironment.baseUrl : '../../../';\n\n\tif (typeof (<any>self).define !== 'function' || !(<any>self).define.amd) {\n\t\timportScripts(monacoBaseUrl + 'vs/loader.js');\n\t}\n\n\trequire.config({\n\t\tbaseUrl: monacoBaseUrl,\n\t\tcatchError: true\n\t});\n\n\tlet loadCode = function (moduleId: string) {\n\t\trequire([moduleId], function (ws) {\n\t\t\tsetTimeout(function () {\n\t\t\t\tlet messageHandler = ws.create((msg: any) => {\n\t\t\t\t\t(<any>self).postMessage(msg);\n\t\t\t\t}, null);\n\n\t\t\t\tself.onmessage = (e) => messageHandler.onmessage(e.data);\n\t\t\t\twhile (beforeReadyMessages.length > 0) {\n\t\t\t\t\tself.onmessage(beforeReadyMessages.shift()!);\n\t\t\t\t}\n\t\t\t}, 0);\n\t\t});\n\t};\n\n\tlet isFirstMessage = true;\n\tlet beforeReadyMessages: MessageEvent[] = [];\n\tself.onmessage = (message) => {\n\t\tif (!isFirstMessage) {\n\t\t\tbeforeReadyMessages.push(message);\n\t\t\treturn;\n\t\t}\n\n\t\tisFirstMessage = false;\n\t\tloadCode(message.data);\n\t};\n})();\n"]}