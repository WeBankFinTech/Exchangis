<template>
  <Form-item
    :label="$t('message.newUitemplate.timing')"
    :label-width="120">
    <Wb-input v-model="inputCronData" class="cron-input" :placeholder="$t('components.BDS')" />
    <Wb-select v-if="oneSelect === 'MIN'" v-model="zeroSelect" class="margin-right" style="width:80px">
      <wb-option v-for="item in zeroList" :key="item.value" :value="item.value">
{{ item.label }}
</wb-option>
    </Wb-select>
    <Wb-select
      v-model="oneSelect"
      style="width:80px"
      class="margin-right"
      @on-change="selectOneChange">
      <wb-option
        v-for="item in oneList"
        :key="item.value"
        :value="item.value">
{{ item.label }}
</wb-option>
    </Wb-select>
    <Wb-select v-if="towList.length > 0" v-model="towSelect" class="margin-right" style="width:80px">
      <wb-option v-for="item in towList" :key="item.value" :value="item.value">
{{ item.label }}
</wb-option>
    </Wb-select>
    <Wb-select v-if="threeList.length > 0" v-model="threeSelect" class="margin-right" style="width:80px">
      <wb-option v-for="item in threeList" :key="item.value" :value="item.value">
{{ item.label }}
</wb-option>
    </Wb-select>
    <Wb-select v-if="selectHourAndMinues" v-model="fourSelect" class="margin-right" style="width:80px">
      <wb-option v-for="item in fourList" :key="item.value" :value="item.value">
{{ item.label }}
</wb-option>
    </Wb-select>
    <Wb-select v-if="selectHourAndMinues" v-model="fiveSelect" class="margin-right" style="width:80px">
      <wb-option v-for="item in fiveList" :key="item.value" :value="item.value">
{{ item.label }}
</wb-option>
    </Wb-select>
  </Form-item>
</template>
<script>
export default {
    model: {
        prop: 'cronData',
        event: 'parent-event'
    },
    props: {
        cronData: {
            type: String,
            default: ''
        }
    },
    data() {
        return {
            zeroSelect: 0,
            oneSelect: 'MIN',
            towSelect: this.$t('message.newUitemplate.minutes'),
            threeSelect: '',
            fourSelect: '',
            fiveSelect: '',
            zeroList: [],
            oneList: [],
            towList: [
            ],
            threeList: [],
            fourList: [],
            fiveList: [],
            selectHourAndMinues: false,
            inputCronData: '',
            TIMEDATA: {
                minuesList: [],
                hourList: [],
                weekList: [{value: '2', label: this.$t('message.newUitemplate.OnMonday,')}, {value: '3', label: this.$t('message.newUitemplate.OnTuesday,')}, {value: '4', label: this.$t('message.newUitemplate.OnWednesday,')}, {value: '5', label: this.$t('message.newUitemplate.OnThursday,')}, {value: '6', label: this.$t('message.newUitemplate.OnFriday,')}, {value: '7', label: this.$t('message.newUitemplate.OnSaturday,')}, {value: '1', label: this.$t('message.newUitemplate.OnSunday,')}],
                monthList: [],
                dayList: [],
                selectType: [
                    {value: 'MIN', label: this.$t('message.newUitemplate.minutes')},
                    {value: 'HOUR', label: this.$t('message.newUitemplate.Perhour')},
                    {value: 'DAY', label: this.$t('message.newUitemplate.Everyday,')},
                    {value: 'WEEK', label: this.$t('message.newUitemplate.Onceaweek')},
                    {value: 'MONTH', label: this.$t('message.newUitemplate.Amonth')},
                    {value: 'YEAR', label: this.$t('message.newUitemplate.Everyyear,')}]
            }
        }
    },
    computed: {
        timeToCron() {
            if (this.oneSelect === 'MIN') {
                return `0 0/${this.zeroSelect} * * * ?`;
            } else if (this.oneSelect === 'HOUR') {
                return `0 ${this.towSelect} 0/1 * * ?`;
            } else if (this.oneSelect === 'DAY') {
                return `0 ${this.fiveSelect} ${this.fourSelect} 1/1 * ?`;
            } else if (this.oneSelect === 'WEEK') {
                return `0 ${this.fiveSelect} ${this.fourSelect} ? * ${this.towSelect}`;
            } else if (this.oneSelect === 'MONTH') {
                return `0 ${this.fiveSelect} ${this.fourSelect} ${this.threeSelect} * ?`
            } else if (this.oneSelect === 'YEAR') {
                return `0 ${this.fiveSelect} ${this.fourSelect} ${this.threeSelect} ${this.towSelect} ? *`
            } else {
                return ''
            }
        }
    },
    watch: {
        timeToCron(val) {
            this.inputCronData = val;
        },
        inputCronData(val) {
            this.$emit('parent-event', val);
        },
        cronData(val) {
            this.inputCronData = val;
        }
    },
    created() {
        for (let i = 0; i < 60; i++) {
            this.TIMEDATA.minuesList.push({value: i, label: i < 10 ? '0' + i + this.$t('message.newUitemplate.points') : String(i) + this.$t('message.newUitemplate.points')})
        }
        for (let i = 0; i < 24; i++) {
            this.TIMEDATA.hourList.push({value: i, label: i < 10 ? '0' + i + this.$t('message.newUitemplate.when') : String(i) + this.$t('message.newUitemplate.when')})
        }
        for (let i = 1; i <= 12; i++) {
            this.TIMEDATA.monthList.push({value: i, label: i < 10 ? '0' + i + this.$t('message.newUitemplate.month') : String(i) + this.$t('message.newUitemplate.month')})
        }
        for (let i = 1; i <= 31; i++) {
            this.TIMEDATA.dayList.push({value: i, label: i < 10 ? '0' + i + this.$t('message.newUitemplate.day') : String(i) + this.$t('message.newUitemplate.day')})
        }
        let tempArr = [];
        for (let i = 0; i < 60; i++) {
            tempArr.push({value: i, label: i < 10 ? `${this.$t('message.newUitemplate.every')}0` + i : this.$t('message.newUitemplate.every') + String(i)})
        }
        this.zeroList = tempArr;
        this.oneList = this.TIMEDATA.selectType;
        this.fourList = this.TIMEDATA.hourList;
        this.fiveList = this.TIMEDATA.minuesList;
    },
    methods: {
        selectOneChange(value) {
            if (value === 'MIN') {
                this.zeroSelect = this.zeroList[0].value;
                this.towList = [];
                this.threeList = [];
                this.selectHourAndMinues = false;
            } else if (value === 'HOUR') {
                this.towList = this.TIMEDATA.minuesList;
                this.towSelect = this.towList[0].value;
                this.selectHourAndMinues = false;
            } else if (value === 'DAY') {
                this.selectHourAndMinues = true;
                this.towList = [];
                this.threeList = [];
                this.fourSelect = this.fourList[0].value;
                this.fiveSelect = this.fiveList[0].value;
            } else if (value === 'WEEK') {
                this.selectHourAndMinues = true;
                this.threeList = [];
                this.towList = this.TIMEDATA.weekList;
                this.towSelect = this.towList[0].value;
                this.fourSelect = this.fourList[0].value;
                this.fiveSelect = this.fiveList[0].value;
            } else if (value === 'MONTH') {
                this.selectHourAndMinues = true;
                this.towList = [];
                this.threeList = this.TIMEDATA.dayList;
                this.threeSelect = this.threeList[0].value;
                this.fourSelect = this.fourList[0].value;
                this.fiveSelect = this.fiveList[0].value;
            } else if (value === 'YEAR') {
                this.selectHourAndMinues = true;
                this.towList = this.TIMEDATA.monthList;
                this.threeList = this.TIMEDATA.dayList;
                this.towSelect = this.towList[0].value;
                this.threeSelect = this.threeList[0].value;
                this.fourSelect = this.fourList[0].value;
                this.fiveSelect = this.fiveList[0].value;
            }
        },
        setDispatch(cronData) {
            if (!cronData) return;
            // $t('message.newUitemplate.will')corn$t('message.newUitemplate.Formatistransformedintotimeformat')0 2 2 3 * * ?
            const tepArr = this.cronData.split(' ');
            // $t('message.newUitemplate.Todeterminewhetherselectedyearfirst')
            if (tepArr.length >= 7) {
                this.oneSelect = 'YEAR';
                this.selectHourAndMinues = true;
                this.towList = this.TIMEDATA.monthList;
                this.threeList = this.TIMEDATA.dayList;
                this.towSelect = Number(tepArr[4]);
                this.threeSelect = Number(tepArr[3]);
                this.fourSelect = Number(tepArr[2]);
                this.fiveSelect = Number(tepArr[1]);
            } else if (tepArr[4] === '*' && tepArr[3] !== '*' && tepArr[3] !== '1/1' && tepArr[3] !== '?') {
                this.selectHourAndMinues = true;
                this.oneSelect = 'MONTH';
                this.towList = [];
                this.threeList = this.TIMEDATA.dayList;
                this.threeSelect = Number(tepArr[3]);
                this.fourSelect = Number(tepArr[2]);
                this.fiveSelect = Number(tepArr[1]);
            } else if (tepArr[5] !== '?') {
                this.oneSelect = 'WEEK';
                this.selectHourAndMinues = true;
                this.towList = this.TIMEDATA.weekList;
                this.threeList = [];
                this.towSelect = tepArr[5];
                this.fourSelect = Number(tepArr[2]);
                this.fiveSelect = Number(tepArr[1]);
            } else if (tepArr[4] === '*' && tepArr[3] === '1/1' && tepArr[2] !== '*' && tepArr[2] !== '0/1') {
                this.oneSelect = 'DAY';
                this.selectHourAndMinues = true;
                this.towList = [];
                this.threeList = [];
                this.fourSelect = Number(tepArr[2]);
                this.fiveSelect = Number(tepArr[1]);
            } else if (tepArr[4] === '*' && tepArr[3] === '*' && tepArr[2] === '0/1') {
                this.oneSelect = 'HOUR';
                this.towList = this.TIMEDATA.minuesList;
                this.towSelect = Number(tepArr[1]);
            } else if (tepArr[4] === '*' && tepArr[3] === '*' && tepArr[2] === '*') {
                this.zeroSelect = Number(tepArr[1].substring(2));
                this.oneSelect = 'MIN';
                this.threeList = [];
                this.selectHourAndMinues = false;
            }
        }
    }
}
</script>
<style>
.cron-input {
  margin-bottom: 10px;
}
</style>

