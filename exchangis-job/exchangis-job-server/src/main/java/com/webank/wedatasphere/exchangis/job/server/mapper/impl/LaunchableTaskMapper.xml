<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.webank.wedatasphere.exchangis.job.server.mapper.LaunchableTaskDao">

    <!-- 通用查询映射结果 -->
    <resultMap id="BaseResultMap" type="com.webank.wedatasphere.exchangis.job.launcher.domain.LaunchableExchangisTask">
        <result column="id" property="id"/>
        <result column="name" property="name"/>
        <result column="create_time" property="createTime"/>
        <result column="last_update_time" property="lastUpdateTime"/>
        <result column="engine_type" property="engineType"/>
        <result column="execute_user" property="executeUser"/>
        <result column="linkis_job_name" property="linkisJobName"/>
        <result column="linkis_job_content" property="linkisJobContent"/>
        <result column="linkis_params" property="linkisParams"/>
        <result column="linkis_source" property="linkisSource"/>
        <result column="rate_params" property="rateParams"/>
        <result column="source_type" property="sourceType"/>
        <result column="sink_type" property="sinkType"/>
        <result column="source_id" property="sourceId"/>
        <result column="sink_id" property="sinkId"/>
        <result column="content" property="content"/>
        <result column="labels" property="labels"/>
        <result column="job_execution_id" property="jobExecutionId"/>
        <result column="delay_time" property="delayTime"/>
        <result column="delay_count" property="delayCount"/>
        <result column="instance" property="instance"/>
        <result column="commit_version" property="commitVersion"/>
    </resultMap>

    <sql id="TableName">
        exchangis_launchable_task
    </sql>

    <!-- 通用查询结果列 -->
    <sql id="BaseColumnList">
        id, name, create_time, last_update_time, engine_type, execute_user, linkis_job_name, linkis_job_content, linkis_params, linkis_source, rate_params, source_type, sink_type, source_id, sink_id, content, labels, job_execution_id, delay_time, delay_count, instance </sql>

    <insert id="addLaunchableTask" >
        <foreach collection="tasks" item="task">
        insert into
        <include refid="TableName"/>
        (id, name, job_execution_id, create_time, last_update_time, engine_type, execute_user, linkis_job_name, linkis_job_content, linkis_params, linkis_source, rate_params, source_type, sink_type, source_id, sink_id, content, labels, delay_time, delay_count, instance)
        values(
        #{task.id},
        #{task.name},
        #{task.jobExecutionId},
        #{task.createTime},
        #{task.lastUpdateTime, jdbcType=TIMESTAMP},
        #{task.engineType},
        #{task.executeUser},
        #{task.linkisJobName},
        #{task.linkisJobContent},
        #{task.linkisParams},
        #{task.linkisSource},
        #{task.rateParams},
        #{task.sourceType},
        #{task.sinkType},
        #{task.sourceId},
        #{task.sinkId},
        #{task.content},
        #{task.labels},
        #{task.delayTime},
        #{task.delayCount},
        #{task.instance}
        );
        </foreach>
    </insert>

    <delete id="deleteLaunchableTask">
        delete from
        <include refid="TableName"/>
        where id = #{taskId}
    </delete>

    <update id="upgradeLaunchableTask">
        UPDATE <include refid="TableName"/>
        SET
        id = #{id},
        name = #{name},
        create_time = #{createTime},
        last_update_time = #{lastUpdateTime},
        engine_type = #{engineType},
        execute_user = #{execute_user},
        linkis_job_name = #{linkisJobName},
        linkis_job_content = #{linkisJobContent},
        linkis_params = #{linkisParams},
        linkis_source = #{linkisSource},
        labels = #{labels}
    </update>

    <select id="getLaunchableTask" parameterType="java.lang.String" resultType="com.webank.wedatasphere.exchangis.job.launcher.domain.LaunchableExchangisTask">
        select
        <include refid="BaseColumnList"/>
        from
        <include refid="TableName" />
        where id = #{taskId}
    </select>

    <select id="getTaskToLaunch" resultMap="BaseResultMap">
        <![CDATA[SELECT * FROM exchangis_launchable_task t
        left join exchangis_launched_task_entity l on t.id = l.id
         ]]>
        <where>
            <if test="instance != null and instance != ''">
                AND  t.instance = #{instance}
            </if>
            <![CDATA[
            AND t.delay_time <= NOW()
            AND l.task_id is NULL
            ]]>
        </where>
        <![CDATA[ORDER BY t.delay_time ASC LIMIT #{limitSize};]]>
    </select>

    <!--use the 'last_update_time' in launched task-->
    <select id="getTaskToLaunchInExpire" resultMap="BaseResultMap">
        <![CDATA[
        SELECT
        t.id,
        t.name,
        t.create_time,
        l.last_update_time,
        t.engine_type,
        t.execute_user,
        t.linkis_job_name,
        t.linkis_job_content,
        t.linkis_params,
        t.rate_params,
        t.linkis_source,
        t.labels,
        t.delay_time,
        t.delay_count,
        t.instance,
        t.job_execution_id,
        l.commit_version
        FROM exchangis_launchable_task t
        INNER JOIN exchangis_launched_task_entity l ON t.id = l.id]]>
        <if test="instance != null and instance != ''">
            AND  t.instance = #{instance}
        </if>
        <![CDATA[
        where l.`last_update_time` < #{expireTime} AND l.`status` = #{status}
        ORDER BY t.delay_time ASC LIMIT #{limitSize};]]>
    </select>

    <select id="sumProgressByJobExecutionId">
        <![CDATA[SELECT SUM(progress) FROM exchangis_launched_task_entity WHERE job_execution_id = #{jobExecutionId};]]>
    </select>
    
    <update id="delayBatch">
        <foreach collection="tasks" item="task">
            <![CDATA[UPDATE ]]>
            <include refid="TableName"/>
            <![CDATA[
            SET delay_time = #{task.delayTime},
             delay_count = #{task.delayCount},
             last_update_time = #{task.lastUpdateTime}
            WHERE id = #{task.id};
            ]]>
        </foreach>
    </update>

    <update id="recycleLaunchableTask">
        UPDATE <include refid="TableName" />
        SET execute_user=#{handover},modify_user='SYSTEM'
        WHERE execute_user=#{username}
        <if test="projectIds != null and projectIds.size > 0">
            AND project_id in (
            <foreach collection="projectIds" item="item" separator=",">
                #{item}
            </foreach>
            )
        </if>
    </update>
</mapper>